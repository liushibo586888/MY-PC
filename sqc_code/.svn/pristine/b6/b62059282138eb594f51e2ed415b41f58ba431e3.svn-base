<template>
  <div class="QYjysh-container container">
    <div class="search-box">
      <Form :model="formItem" :label-width="0" inline @submit.native.prevent ref="searchForm" class="search-form">
        <row :gutter="20">
          <i-col span="3">
            <formItem prop="startDate">
              <DatePicker class="DatePicker_time" type="date" :options="options1" placeholder="开始日期" v-model="formItem.startDate" :clearable="false" :editable="false"></DatePicker>
            </formItem>
          </i-col>
          <i-col span="3">
            <formItem prop="endDate">
              <DatePicker class="DatePicker_time" type="date" :options="options1" placeholder="结束日期" v-model="formItem.endDate" :clearable="false" :editable="false"></DatePicker>
            </formItem>
          </i-col>

          <i-col span="18">
            <formItem class="btn-box">
              <Button type="error" class="btn" @click="isshow=true">+对比</Button>
              <Button type="primary" class="btn" @click="searchList">查询</Button>
              <Button type="warning" class="btn" @click="resetSearch">重置</Button>
            </formItem>
          </i-col>
        </row>
      </Form>
    </div>

    <div class="ZYJ_vue" v-show="isshow">
      <div class="table-box" style="margin-top:0; margin-bottom:20px;">
        <i-table stripe :columns="choosedItemColumns" :data="choosedItemList" :height="300" :width="900"></i-table>
      </div>
      <div>
        <button @click="addForm">保存</button>
      </div>
    </div>

  </div>

</template>
<script>
import moment from "moment";
import { mapState } from "vuex";
import api from "@/api/index.js";
import echarts from "echarts";
import echartsCommon from "@/api/Common.js";
export default {
  data() {
    return {
      isshow: false,
      options1: echartsCommon.shortcuts(), //时间回到今天
      formItem: {
        startDate: new Date(),
        endDate: new Date(),
        StartDate1: new Date(),
        EndDate1: new Date(),
        sCity: "",
        sCityName: "",
        time: ""
      },
      choosedItemColumns: [
        {
          title: "时间1",
          align: "center",
          key: "startDate",
          render: (h, params) => {
            let that = this;
            return h("div", [
              h("DatePicker", {
                props: {
                  value: that.choosedItemList[params.index].startDate,
                  "label-in-value": true
                },
                on: {
                  "on-change": event => {
                    params.row.startDate = event;
                    that.choosedItemList[params.index].startDate = event;
                  }
                }
              })
            ]);
          }
        },
        {
          title: "时间2",
          align: "center",
          key: "startDate",
          render: (h, params) => {
            let that = this;
            return h("div", [
              h("DatePicker", {
                props: {
                  value: that.choosedItemList[params.index].startDate2,
                  "label-in-value": true
                },
                on: {
                  "on-change": event => {
                    params.row.startDate2 = event;
                    that.choosedItemList[params.index].startDate2 = event;
                  }
                }
              })
            ]);
          }
        },
        {
          title: "区域",
          align: "center",
          key: "sCity",
          render: (h, params) => {
            let that = this;
            return h("div", [
              h(
                "Select",
                {
                  props: {
                    value: that.choosedItemList[params.index].sCity,
                    "label-in-value": true
                  },
                  on: {
                    "on-change": event => {
                      params.row.sCity = event.value;
                      that.choosedItemList[params.index].sCity = event.value;
                    }
                  }
                },
                that.storeList.map(function(type) {
                  return h(
                    "Option",
                    {
                      props: {
                        value: type.ID
                      }
                    },
                    type.Name
                  );
                })
              )
            ]);
          }
        },
        {
          title: "门店",
          align: "center",
          width: 250,
          key: "storeID",
          render: (h, params) => {
            let that = this;
            return h("div", [
              h(
                "Select",
                {
                  props: {
                    value: that.choosedItemList[params.index].storeID,
                    "label-in-value": true
                  },
                  on: {
                    "on-change": event => {
                      params.row.storeID = event.value;
                      that.choosedItemList[params.index].storeID = event.value;
                    }
                  }
                },
                that.CityList.map(function(type) {
                  return h(
                    "Option",
                    {
                      props: {
                        value: type.ID
                      }
                    },
                    type.Name
                  );
                })
              )
            ]);
          }
        },
        {
          title: "操作",
          align: "center",
          render: (h, params) => {
            return h("div", [
              h("i", {
                class: {
                  "ivu-icon": true,
                  "ivu-icon-aaa-tianjia": true,
                  "icon-btn": true
                },
                on: {
                  click: () => {
                    this.addCharge(params.index);
                  }
                },
                style: {
                  marginRight: "20px"
                }
              }),
              h("i", {
                class: {
                  "ivu-icon": true,
                  "ivu-icon-aaa-icon-shanchu": true,
                  "icon-btn": true
                },
                on: {
                  click: () => {
                    this.showDelDetailPoup(params.index);
                  }
                },
                style: {
                  marginRight: "5px"
                }
              })
            ]);
          }
        }
      ],
      choosedItemList: [
        {
          startDate: moment(new Date()).format("YYYY-MM-DD"),
          startDate2: moment(new Date()).format("YYYY-MM-DD"),
          sCity: 17,
          storeID: ""
        }
      ],
      storeList: [],
      CityList: []
    };
  },
  computed: {
    ...mapState({
      userMes: state => state.app.userMes,
      tableRows: state => state.app.tableRows,
      authorList: state => state.app.authorList
    })
  },
  methods: {
    showDelDetailPoup(index) {
      let that = this;
      that.choosedItemList.splice(index, 1);
    },
    addCharge(index) {
      let that = this;
      let a = {
        startDate: moment(new Date()).format("YYYY-MM-DD"),
        startDate2: moment(new Date()).format("YYYY-MM-DD"),
        sCity: 17,
        storeID: ""
      };
      that.choosedItemList.push(a);
    },
    addForm() {
      let that = this;

      console.log(that.choosedItemList);
    },
    searchList() {
      let that = this;
      //判断两个时间段大小
      echartsCommon.message = that.$Message;
      if (
        echartsCommon.ContrastTime(
          that.formItem.startDate,
          that.formItem.endDate
          // that.formItem.StartDate1,
          // that.formItem.EndDate1
        )
      ) {
        that.getList();
        that.addForm();
        that.isshow = false;
      }
      //------------------
    },
    resetSearch() {
      let that = this;
      that.$refs.searchForm.resetFields();
      that.getList();
    },
    getList() {},
    // 获取区域列表
    getStore() {
      let that = this;
      api.GetAllCityInfo().then(response => {
        if (response.error_code === "Success") {
          that.storeList = response.data.list;
          // that.formItem.sCityName = that.storeList[0].Name;
          // that.formItem.sCity = that.storeList[0].ID;
        } else {
          that.$Message.error(response.error_message);
        }
      });
    },
    // 获取有效门店
    getCity() {
      let that = this;
      let data = {
        EmployeeID: that.userMes.EmployeeID
      };
      api.getValidStoresNew(data).then(response => {
        if (response.error_code === "Success") {
          that.CityList = response.data.list;
          // that.formItem.store = that.userMes.StoreName;
          // that.formItem.storeID = that.userMes.StoreID;
          // that.storeID = that.userMes.StoreID;
        } else {
          that.$Message.error(response.error_message);
        }
      });
    }
  },
  mounted() {
    let that = this;
    that.getStore();
    that.getCity();
  }
};
</script>
<style scoped>
.ZYJ_vue {
  float: right;
  /* margin-top: 100px; */
}
</style>
