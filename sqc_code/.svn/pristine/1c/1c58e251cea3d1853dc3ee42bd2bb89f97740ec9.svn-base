<template>
  <div class="cnjs-container container">
    <div class="search-box">
      <Form :model="formItem" :label-width="0" inline @submit.native.prevent ref="searchForm" class="search-form">
        <row :gutter="20">

          <i-col span="3">
            <formItem prop="StartDate">

              <DatePicker class="DatePicker_time" type="date" :options="options1" placeholder="开始日期" v-model="formItem.StartDate" :clearable="false" :editable="false"></DatePicker>
            </formItem>
          </i-col>
          <i-col span="3">
            <formItem prop="EndDate">

              <DatePicker class="DatePicker_time" type="date" :options="options1" placeholder="结束日期" v-model="formItem.EndDate" :clearable="false" :editable="false"></DatePicker>
            </formItem>
          </i-col>
          <!-- <i-col span="3">
            <FormItem prop="store">
              <Select v-model="formItem.store" placeholder="门店" :filterable="true">
                <Option value="all" @click.native="choose()">所有</Option>
                <Option v-for="item in storeList" :value="item.ID" :key="item.ID" @click.native="choose(item.Name,item.ID)">{{ item.Name }}</Option>
              </Select>
            </FormItem>
          </i-col> -->
          <i-col span="3">
            <FormItem prop="AreaName">
              <Select v-model="formItem.AreaName" placeholder="区域" :filterable="true">
                <Option value="all" @click.native="chooseQY()">所有</Option>
                <Option v-for="item in storeList" :value="item.Name" :key="item.ID" @click.native="chooseQY(item.ID,item.Name)">{{ item.Name }}</Option>
              </Select>
            </FormItem>
          </i-col>
          <i-col span="3">
            <FormItem prop="StoreName">
              <Select v-model="formItem.StoreName" placeholder="门店" :filterable="true">
                <Option value="all" @click.native="chooseMD()">所有</Option>
                <Option v-for="item in CityList" :value="item.ID" :key="item.ID" @click.native="chooseMD(item.ID,item.Name)">{{ item.Name }}</Option>
              </Select>
            </FormItem>
          </i-col>
          <i-col span="12">
            <formItem class="btn-box"> 
              <Button type="primary" class="btn btn-search" @click="searchForm">搜索</Button>
              <Button type="warning" class="btn btn-reset" @click="resetSearch">重置</Button>
                <Button type="primary" class="btn btn-purple" @click="DetailClick">查看明细</Button>
            </formItem>
          </i-col>
        </row>
      </Form>
    </div>
 
    <div class="table-box" id="tableBox">
      <Table  :columns="columns1" :data="list" highlight-row :height="tableHeight" ref="mainTable"></Table>
      <tableLoadingPage :loading="tableLoading"></tableLoadingPage>
    </div>

  <Modal :mask-closable="false" v-model="modal1" :styles="{top: '20px'}" width='1200' class="dialog" ok-text='关闭' cancel-text=''>
      <div slot='header' class="header not-print">
        业绩详情
      </div>
      <Tabs  v-model="tabValue"    @on-click='tabClick'> 
        <TabPane  label="收费(项目/产品)"  name="0">
          <div class="table-box" id="tableBox">
            <Table :columns="cnjscolumns" :data="ChangeData" :height="tableHeight"></Table>
          </div>
        </TabPane> 

        <TabPane label="退费(项目/产品)" name="1">
          <div class="table-box" id="tableBox">
            <Table :columns="cnjscolumns" :data="ChangeData" :height="tableHeight"></Table>
          </div>
        </TabPane> 

        <TabPane label="欠款回收(项目/产品)" name="2">
          <div class="table-box" id="tableBox">
            <Table :columns="cnjscolumns" :data="ChangeData" :height="tableHeight"></Table>
          </div>
        </TabPane> 

          <TabPane label="预交金(账户充值)" name="3">
          <div class="table-box" id="tableBox">
            <Table :columns="cnjscolumns2" :data="ChangeData" :height="tableHeight"></Table>
          </div>
        </TabPane> 

        <TabPane label="预交金退费(账户退费)" name="4">
          <div class="table-box" id="tableBox">
            <Table :columns="cnjscolumns2" :data="ChangeData" :height="tableHeight"></Table>
          </div>
        </TabPane> 

      </Tabs>
    </Modal>

    <div class="bottom-box">
      <i-button class="btn" @click="exportTable" type="default">导出</i-button>
      <i-button class="btn" @click="printPage()" type="primary">打印</i-button>
      <!-- <div class="row-box">{{tablePage.startNum}} - {{tablePage.endNum}}条/共{{tablePage.allNum}}条</div>
            <i-button class="btn btn-prev" type="ghost">上一页</i-button>
            <i-button class="btn btn-next" type="primary">下一页</i-button>
            <div class="page-box">
                <p>前往</p>
                 <Input-number :max="tablePage.maxPageNum" :min="1" :value="1"></Input-number>
                <p>页</p>
            </div> -->
    </div>
    <!-- 打印 -->
    <div class="print-box">
      <div class="title">出纳结算单</div>
      <Row>
        <i-col span="24">
          <span class="print-name">门店：</span>
          <span class="print-key">{{formItem.store}}</span>
        </i-col>
      </Row>
      <Row v-if="formItem.StartDate">
        <i-col span="24">
          <span class="print-key" v-if="formItem.StartDate">{{formItem.StartDate | formatDate}}</span>
          <span class="print-key" v-if="formItem.StartDate && formItem.EndDate">至</span>
          <span class="print-key" v-if="formItem.EndDate">{{formItem.EndDate | formatDate}}</span>
        </i-col>
      </Row>
      <div class="line"></div>
      <Row>
        <i-col span="6">支付方式</i-col>
        <i-col span="6">贴息费</i-col>
        <i-col span="6">金额</i-col>
        <i-col span="6">应收金额</i-col>
      </Row>
      <Row v-for="(item, index) in list" :key="index">
        <i-col span="6">{{item.PayModeName}}</i-col>
        <i-col span="6">{{item.HandlingFee}}</i-col>
        <i-col span="6">{{item.Amount}}</i-col>
        <i-col span="6">{{item.ReceivableAmount}}</i-col>
      </Row>
      <div class="line"></div>
      <div class="bottom">{{userMes.BottomDescription}}</div>
    </div>
    <!-- ** -->
  </div>
</template>
<script>
// import { getCashierStatement } from '@/api/index.js'
import { mapState } from "vuex";
import api from "@/api/index.js";
import moment from "moment";
import echartsCommon from "@/api/Common.js";
export default {
  data() {
    return {   
      tabValue:'0',
     cnjscolumns: [
        {
          title: "开单日期",
          key: "infoDate",
         render: (h, parmas) => {
            return echartsCommon.DATEsfm(h,parmas.row.infoDate)
          }
        },
        {
          title: "收费日期",
          key: "Date1",
           render: (h, parmas) => {
            return echartsCommon.DATEsfm(h,parmas.row.Date1)
          }
        }, 
        {
          title: "项目名称",
          key: "ItemName"
        },
        {
          title:"产品名称",
          key:"GoodsName"
        },
        {
          title: "金额",
          key: "Amount"
        },
        {
          title: "支付方式",
          key: "PayName"
        }, 
        {
          title: "客户名称",
          key: "Name"
        }, 
        {
          title: "门店",
          key: "StoreName"
        }
      ], 

   cnjscolumns2: [ 
        {
          title: "收费日期",
          key: "Date1",
          render: (h, parmas) => {
            return echartsCommon.DATEsfm(h,parmas.row.Date1)
          }
        }, 
        {
          title: "项目名称",
          key: "ItemName"
        },
        {
          title: "金额",
          key: "Amount"
        },
        {
          title: "支付方式",
          key: "PayName"
        }, 
        {
          title: "客户名称",
          key: "Name"
        }, 
        {
          title: "门店",
          key: "StoreName"
        }
      ], 

      ChangeData: [],//收费项目/产品 数据
      modal1: false,
      storeList: [],
      CityList: [],
      //时间回到今天
      options1: echartsCommon.shortcuts(),
      // -----
      tableLoading: true,
      tablePage: {
        page: 1,
        pageNum: 10,
        maxPageNum: 100,
        allNum: 199,
        startNum: 0,
        endNum: 0
      },
      tableHeight: 200,
      formItem: {
        StartDate: new Date(),
        EndDate: new Date(),
        // store: "all",
        EmployeeID: "",
        // StoreID: null,
        AreaId: "",
        AreaName: "all",
        StoreID: "",
        StoreName: "all"
      },
      columns1: [
        {
          title: "支付方式",
          key: "PayModeName",
          align: "center",
          width: 400
        },
        {
          title: "应收金额",
          key: "ReceivableAmount",
          align: "center",
          width: 400,
          render: (h, parmas) => {
            let money = Number(parmas.row.ReceivableAmount);
            return h("div", {}, money.toFixed(2));
          }
        },
        {
          title: "贴息费",
          key: "HandlingFee",
          align: "center",
          width: 400,
          render: (h, parmas) => {
            let money = Number(parmas.row.HandlingFee);
            return h("div", {}, money.toFixed(2));
          }
        },
        {
          title: "实收金额",
          key: "Amount",
          align: "center",
          width: 400,
          render: (h, parmas) => {
            let money = Number(parmas.row.Amount);
            return h("div", {}, money.toFixed(2));
          }
        }
      ],
      list: [],
      storeList: []
    };
  },
  computed: {
    ...mapState({
      authorList: state => state.app.authorList,
      userMes: state => state.app.userMes
    }),
    setTableHeight() {
      let that = this;
      return that.tableHeight;
    }
  },
  methods: {
    tabClick(name){ 
       this.ChangeData = [];
      var startDate = null,endDate=null,storeID=null,stype=null,EmployeeID=null; 
       let param = {
        startDate:moment(this.formItem.StartDate).format("YYYY-MM-DD"),
        endDate:moment(this.formItem.EndDate).format("YYYY-MM-DD"),
        storeID:this.formItem.StoreID==""?"0":this.formItem.StoreID, 
        EmployeeID: this.userMes.EmployeeID,
        stype:'0'
      };
      
       switch(name)
      { 
         case '0': 
           param.stype=name;
          this.QueryFinceDetail(param);
          break; 
         case '1':   
           param.stype=name;
          this.QueryFinceDetail(param);
          break; 
         case '2': 
          param.stype=name;
          this.QueryFinceDetail(param);
           break;  
         case '3':
           param.stype=name;
          this.QueryFinceDetail(param);
           break; 
         case '4': 
         param.stype=name;
          this.QueryFinceDetail(param);
         break;  
      }

    },
    DetailClick() {
       this.tabValue='0';
      let that = this;   
      that.modal1 = true; 
       this.tabClick(this.tabValue); //查询第一个标签数据
    },
    QueryFinceDetail(parmas)
    {
        api.QueryChangeItemDetail(parmas).then(response => { 
        if (response.error_code === "Success") {
          this.ChangeData = response.data; 
        } else {
           that.$Message.info({
               content:res.error_message,
               duration:10
             });
        }
      });
    },
    resetSearch() {
      // 重置搜索
      let that = this;
      that.$refs.searchForm.resetFields();
      that.getList();
    },
    searchForm() {
      // 搜索表格
      let that = this;
      //判断两个时间段大小
      echartsCommon.message = that.$Message;
      if (
        echartsCommon.ContrastTime(
          that.formItem.StartDate,
          that.formItem.EndDate
        )
      ) {
        that.tableLoading = true;
        that.getList();
      }
      //------------------
    },
    initTableHeight() {
      let that = this;
      that.tableHeight = document.getElementById("tableBox").offsetHeight;
      window.onresize = function() {
        that.tableHeight = document.getElementById("tableBox").offsetHeight;
      };
    },
    setPage() {
      let that = this;
      let teblePage = that.tablePage;
      teblePage.startNum = teblePage.pageNum * (teblePage.page - 1) + 1;
      let endPage = teblePage.page * teblePage.pageNum;
      teblePage.endNum =
        endPage > teblePage.allNum ? teblePage.allNum : endPage;
    },
    getList() {
      let that = this;
      let userMessage = JSON.parse(localStorage.userMessage);
      let data = {
        StartDate: that.formItem.StartDate,
        EndDate: that.formItem.EndDate,
        EmployeeID: that.userMes.EmployeeID,
        AreaId: that.formItem.AreaId,
        StoreID: that.formItem.StoreID
      };
      data.StartDate = echartsCommon.changeTime(data.StartDate);
      data.EndDate = echartsCommon.changeTime(data.EndDate);
      api.getCashierStatement(data).then(response => {
        if (response.error_code === "Success") {
          // console.log(response.data);
          that.tableLoading = false;
          that.list = response.data.list;
          let a = {
            PayModeName: "合计",
            HandlingFee: 0,
            Amount: 0,
            ReceivableAmount: 0
          };
          for (let i of response.data.list) {
            a.Amount += Number(i.Amount);
            a.HandlingFee += Number(i.HandlingFee);
            a.ReceivableAmount += Number(i.ReceivableAmount);
          }
          if (that.list.length > 0) {
            that.list.push(a);
          }
        } else {
          that.$Message.error(response.error_message);
        }
      });
    },
    exportTable() {
      let that = this;
      that.$refs.mainTable.exportCsv({
        filename: `${new Date().getTime()}${document.title}`
      });
    },
    printPage() {
      let that = this;
      setTimeout(() => {
        window.print();
      }, 500);
    },
    // 获取区域列表
    getStore() {
      let that = this;
      let data = {
        employeeId: that.userMes.EmployeeID
      };
      api.NewGetAllCityInfo(data).then(response => {
        if (response.error_code === "Success") {
          that.storeList = response.data.list;
          // that.formItem.sCityName = that.storeList[0].Name;
           // that.formItem.AreaId = that.storeList[0].ID;
          that.getCity();
        } else {
          that.$Message.error(response.error_message);
        }
      });
    },
    // 获取有效门店
    getCity() {
      let that = this;
      let data = {
        sCity: that.formItem.AreaId,
        employeeId: that.userMes.EmployeeID
      };
      api.baogetEmployeeByAllStoreInfo(data).then(response => {
        if (response.error_code === "Success") {
          that.CityList = response.data.list;
          // that.formItem.MDName = that.CityList[0].Name;
        } else {
          that.$Message.error(response.error_message);
        }
      });
    },
    chooseQY(id, name) {
      let that = this;
      if (name === undefined && id === undefined) {
        that.formItem.AreaName = "所有";
        that.formItem.AreaId = "";
        that.formItem.StoreID = "";
      } else {
        that.formItem.AreaName = name;
        that.formItem.AreaId = id;
      }
      that.getCity();
    },
    chooseMD(id, name) {
      let that = this;
      if (name === undefined && id === undefined) {
        that.formItem.StoreName = "所有";
        that.formItem.StoreID = "";
      } else {
        that.formItem.StoreName = name;
        that.formItem.StoreID = id;
      }
      that.getCity();
    }
  },
  mounted() {
    let that = this;
    that.$nextTick(() => {
      that.initTableHeight();
      that.getList();
      that.getStore();
      // let pageName = that.$route.name
      // let list = that.authorList[pageName]
    });
  },
  filters: {
    formatDate(val) {
      return moment(val).format("YYYY-MM-DD");
    }
  }
};
</script>
<style>
</style>