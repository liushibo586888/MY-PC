<template>
  <div class="tf-container container">
    <div class="search-box">
      <Form :model="formItem" :label-width="0" inline @submit.native.prevent ref="searchForm" class="search-form">
        <row :gutter="20">
          <i-col span="3">
            <formItem prop="startDate">
              <DatePicker class="DatePicker_time" type="date" :options="options1" placeholder="开始日期" v-model="formItem.startDate" :clearable="false" :editable="false"></DatePicker>
            </formItem>
          </i-col>
          <i-col span="3">
            <formItem prop="endDate">
              <DatePicker class="DatePicker_time" type="date" :options="options1" placeholder="结束日期" v-model="formItem.endDate" :clearable="false" :editable="false"></DatePicker>
            </formItem>
          </i-col>
          <i-col span="3">
            <FormItem prop="userName">
              <Input v-model="formItem.userName" placeholder="姓名" />
            </FormItem>
          </i-col>
          <i-col span="3">
            <FormItem prop="userTel">
              <Input v-model="formItem.userTel" placeholder="电话" />
            </FormItem>
          </i-col>
          <i-col span="12">
            <formItem class="btn-box">
              <i-button type="primary" class="btn" @click="searchForm">搜索</i-button>
              <i-button type="warning" class="btn" @click="resetSearch">重置</i-button>
              <!-- <i-button type="warning" class="btn btn-add" @click="showAddPoup" v-if="showAdd">添加</i-button> -->
              <i-button type="warning" class="btn btn-add" @click="checkAddMode" v-if="showAdd">添加</i-button>
              <i-button type="warning" class="btn btn-purple" @click="checkBillStatus" v-if="showEdit" :disabled="!currentID">浏览</i-button>
            </formItem>
          </i-col>
        </row>
      </Form>
    </div>
    <div class="table-box" id="tableBox">
      <Table :columns="columns1" :data="list" highlight-row :height="setTableHeight" @on-current-change="chooseRow" ref="mainTable"></Table>
      <tableLoadingPage :loading="tableLoading"></tableLoadingPage>
    </div>
    <div class="bottom-box">
      <i-button class="btn-export" @click="exportTable" type="default">导出</i-button>
      <Select v-model="tablePage.pageNum" class="table-row" placement="top" @on-change="changePage">
        <Option :value="item.ID" v-for="(item, index) in tableRows" :key="index">{{item.Name}}</Option>
      </Select>
      <div class="row-box">{{tablePage.startNum}} - {{tablePage.endNum}}条/共{{tablePage.allNum}}条</div>
      <i-button class="btn btn-prev" type="ghost" @click="prevPage()">上一页</i-button>
      <i-button class="btn btn-next" type="primary" @click="nextPage()">下一页</i-button>
      <div class="page-box">
        <p>前往</p>
        <Input-number :max="tablePage.maxPageNum" :min="1" v-model="tablePage.page" @on-change="changePage"></Input-number>
        <p>页</p>
      </div>
    </div>
    <!-- 查询电话号码弹窗 -->
    <Modal :mask-closable="false" v-model="poupSearchTel" class="dialog" class-name="vertical-center-modal" v-if="showAdd">
      <div slot='header' class="header">
        请输入电话号码
      </div>
      <Form :model="searchTel" ref="searchTelForm" @submit.native.prevent="searchCustomerTel">
        <Form-item prop="tel" :rules="searchRule.tel">
          <i-input v-model="searchTel.tel" placeholder="请输入用户的手机号" autofocus ref="searchTel"></i-input>
        </Form-item>
      </Form>
      <div slot='footer' class="footer">
        <i-button class="btn" type="primary" @click="searchCustomerTel" :loading="uploading">确定</i-button>
        <i-button class="btn" type="warning" @click="searchReset" :loading="uploading">取消</i-button>
      </div>
    </Modal>
    <!-- 弹窗 -->
    <Modal :mask-closable="false" v-model="modal1" class="dialog" width="1200" v-if="showAdd || showEdit">
      <div slot='header' class="header not-print">
        <!-- {{modalTitle}} -->
        {{setModalTitle}}
      </div>
      <div slot='close' class="close not-print">
        <i class='ivu-icon ivu-icon-aaa-guanbi'></i>
      </div>
      <!-- 用户信息部分 不可修改 -->
      <Form ref="formValidate1" :model="formValidate" :label-width="120" @submit.native.prevent class="form">
        <row type="flex" justify="space-between">
          <i-col span="6">
            <FormItem prop="CustomerPhone" label="电话：">
              <Input v-model="formValidate.CustomerPhone" placeholder="电话" :disabled="true"></Input>
            </FormItem>
          </i-col>
          <i-col span="6">
            <FormItem prop="CustomerName" label="姓名：">
              <Input v-model="formValidate.CustomerName" placeholder="姓名" :disabled="true"></Input>
            </FormItem>
          </i-col>
          <i-col span="6">
            <FormItem label="年龄：" prop="CustomerAge">
              <Input v-model="formValidate.CustomerAge" placeholder="年龄" :disabled="true"></Input>
            </FormItem>
          </i-col>
          <i-col span="6">
            <FormItem prop="CustomerSex" label="性别：">
              <Input v-model="formValidate.CustomerSex" placeholder="性别" :disabled="true"></Input>
            </FormItem>
          </i-col>
        </row>
        <row type="flex" justify="space-between">
          <i-col span="6">
            <FormItem label="预交余额：" prop="CashBalance">
              <InputNumber v-model="formValidate.CashBalance" placeholder="预交余额" :disabled="true" :precision="2" style="width:100%;"></InputNumber>
            </FormItem>
          </i-col>
          <i-col span="6">
            <FormItem label="积分余额：" prop="IntegrationBalance">
              <InputNumber v-model="formValidate.IntegrationBalance" placeholder="积分余额" :disabled="true" :precision="2" style="width:100%;"></InputNumber>
            </FormItem>
          </i-col>
          <i-col span="6">
            <FormItem label="欠款余额：" prop="ArrearsBalance">
              <InputNumber v-model="formValidate.ArrearsBalance" placeholder="欠款余额" :disabled="true" :precision="2" style="width:100%;"></InputNumber>
            </FormItem>
          </i-col>
          <i-col span="6">
            <FormItem label="赠送余额：" prop="HandselBalance">
              <InputNumber v-model="formValidate.HandselBalance" placeholder="赠送余额" :disabled="true" :precision="2" style="width:100%;"></InputNumber>
            </FormItem>
          </i-col>
        </row>
        <row type="flex">
          <i-col span="6">
            <FormItem label="美肤总监：" prop="SceneEmployeeName">
              <Input v-model="formValidate.SceneEmployeeName" placeholder="美肤总监" :disabled="true" />
            </FormItem>
          </i-col>
          <i-col span="6">
            <FormItem label="渠道咨询：" prop="TMKEmployeeName">
              <Input v-model="formValidate.TMKEmployeeName" placeholder="渠道咨询" :disabled="true" />
            </FormItem>
          </i-col>
        </row>
        <!-- ** -->
      </Form>

      <!-- 项目确诊单明细 新增  浏览不显示 -->
      <template v-if="mode == 1">
        <div class="pannel-title">欠款项目</div>
        <div class="table-box" style="margin-top: 10px;">
          <Table ref="selection" :columns="qzdmxColumns" :data="qzdmxList" @on-selection-change="selectMaterial" highlight-row height="200">
          </Table>
        </div>
      </template>
      <!-- ** -->

      <!-- 支付方式 添加用 -->
      <div class="table-box hide-print" v-if="mode == 1">
        <i-table stripe :columns="chargeTableHead" :data="chargeTableData"></i-table>
      </div>
      <!-- ** -->
      <!-- 支付方式 浏览用 -->
      <div class="table-box" v-if="mode==2">
        <i-table stripe :columns="chargeTablePrintHead" :data="chargeTableData"></i-table>
      </div>

      <Input v-model="formValidate.Remark" placeholder="无" type="textarea" :rows="4" style="margin-top:20px;" v-if="mode == 2" readonly></Input>
      <Input v-model="formValidate.Remark" placeholder="备注" type="textarea" :rows="4" style="margin-top:20px;" v-else></Input>
      <div slot="footer" class="footer not-print" v-if="mode == 2">
        <Button class="btn-sure" type="primary" @click="printPage">打印</Button>
      </div>

      <!-- 保存/取消 -->
      <div slot="footer" class="footer not-print" v-else>
        <Button class="btn-sure" type="primary" @click="addForm" :loading="uploading" :disabled="jinyong">保存</Button>
        <Button class="btn-cancel" type="warning" @click="resetForm" :loading="uploading">取消</Button>
      </div>
    </Modal>

    <!-- 打印格式 -->
    <div class="print-box">
      <div class="storeName">{{userMes.PrintHeadString}}</div>
      <div class="storeName">{{userMes.StoreAlias}}</div>
      <div class="document-type">欠款回收单据 顾客联</div>
      <Row>
        <i-col span="12">
          <span class="print-name">顾客姓名：</span>
          <span class="print-key">{{formValidate.CustomerName}}</span>
        </i-col>
        <i-col span="12">
          <span class="print-name">电话：</span>
          <span class="print-key">{{formValidate.CustomerPhone}}</span>
        </i-col>
      </Row>
      <Row>
        <i-col span="24">
          <span class="print-name">日期：</span>
          <span class="print-key">{{getNowDay}}</span>
        </i-col>
      </Row>
      <div class="line"></div>
      <!-- 退费方式 -->
      <div>
        <Row>
          <i-col span="8">项目名称</i-col>
          <i-col span="8">退费数量</i-col>
          <i-col span="8">退费金额</i-col>
        </Row>
        <Row v-for="(item, index) in printData" :key="index">
          <i-col span="8">{{item.itemName}}</i-col>
          <i-col span="8">{{item.quantity}}</i-col>
          <i-col span="8">{{item.price | formatMoney}}</i-col>
        </Row>
      </div>
      <div class="line"></div>
      <!-- 支付方式 -->
      <Row v-for="(item, index) in printPayMode" :key="index">
        <i-col span="24">支付方式：{{item.PayModeName}}
          <span style="margin-left: 5%">金额：{{item.Amount}}</span>
        </i-col>
        <!-- <i-col span="12"></i-col> -->
      </Row>
      <!-- <i-table :columns="printColumns" :data="zfjhList"></i-table> -->
      <div class="line"></div>
      <Row>
        <i-col span="24">
          <span class="print-name">合计：</span>
          <span class="print-key">{{refundsTotal | formatMoney}}</span>
        </i-col>
      </Row>
      <Row>
        <i-col span="24">
          <span class="print-name">操作人：</span>
          <span class="print-key">{{userMes.EmployeeName}}</span>
        </i-col>
      </Row>
      <div class="line"></div>
      <Row>
        <i-col span="24">
          <span class="print-name">服务热线：</span>
          <span class="print-key">{{userMes.ServiceHotLine}}</span>
        </i-col>
      </Row>
      <Row>
        <i-col span="24">
          <span class="print-name">门店地址: </span>
          <span class="print-key">{{userMes.StoreAddress}}</span>
        </i-col>
      </Row>
      <Row>
        <i-col span="24">
          <span class="print-name">门店电话： </span>
          <span class="print-key">{{userMes.StorePhone}}</span>
        </i-col>
      </Row>
      <Row>
        <i-col span="24">
          <span class="print-name">官方网站： </span>
          <span class="print-key">{{userMes.OfficialWebSite}}</span>
        </i-col>
      </Row>
      <div class="bottom">{{userMes.BottomDescription}}</div>
    </div>
    <!-- ** -->
  </div>
</template>
<script>
const Decimal = require("decimal");
import api from "@/api/index.js";
// import storejs from 'storejs'
import Vue from "vue";
import { mapState } from "vuex";
import moment from "moment";
import echartsCommon from "@/api/Common.js";
export default {
  data() {
    const validateTel = (rule, value, callback) => {
      let reg = /^1\d{10}$/;
      if (value === "") {
        callback(new Error("手机号不得为空"));
      } else if (!reg.test(value)) {
        callback(new Error("请输入正确的手机号"));
      } else {
        callback();
      }
    };
    return {
      //时间回到今天
      options1: echartsCommon.shortcuts(),
      // -----
      selection: [],
      showAdd: false,
      mode: 1, // 1添加  2浏览
      showEdit: false,
      currentID: "",
      currentPhone: "",
      refundsTotal: 0,
      jinyong: false,
      lockNum: false,
      uploading: false,
      print: false,
      modalTitle: "新增",
      // modalMode: 'add', // lookup 浏览 add 新增
      tablePage: {
        page: 1,
        pageNum: 10,
        maxPageNum: 100,
        allNum: 199,
        startNum: 0,
        endNum: 0
      },
      tableLoading: false,
      tableHeight: 200,
      poupSearchTel: false,
      searchTel: {
        tel: ""
      },
      searchRule: {
        tel: {
          required: true,
          message: "请输入正确的手机号码",
          trigger: "blur",
          type: "number",
          validator: validateTel
        }
      },
      modal1: false,
      formValidate: {
        CustomerName: "",
        CustomerPhone: "",
        CustomerAge: "",
        CustomerSex: "",
        TMKEmployeeName: "",
        SceneEmployeeName: "",
        ArrearsBalance: 0,
        HandselBalance: 0,
        CashBalance: 0,
        IntegrationBalance: 0,
        Remark: ""
      },
      formItem: {
        startDate: new Date(),
        endDate: new Date(),
        userName: "",
        userTel: ""
      },
      // 浏览 退费
      lookUpItems: [
        {
          title: "退费项目/物资",
          align: "center",
          key: "itemName"
        },
        {
          title: "规格",
          align: "center",
          key: "itemStandard"
        },
        {
          title: "单位",
          align: "center",
          key: "itemUnit"
        },
        {
          title: "退费数量",
          align: "center",
          key: "quantity"
        },
        {
          title: "总价",
          align: "center",
          key: "price",
          render: (h, params) => {
            if (!params.row.price) {
              return 0.0;
            }
            return h("div", {}, params.row.price.toFixed(2));
          }
        }
      ],
      lookUpItemsData: [],
      printPayMode: [],
      chargeTableHead: [
        {
          title: "序号",
          type: "index",
          align: "center",
          width: 80
        },
        {
          title: "支付方式",
          align: "center",
          key: "PayModeID",
          render: (h, params) => {
            let that = this;
            return h("div", [
              h(
                "Select",
                {
                  props: {
                    value: that.chargeTableData[params.index].PayModeID,
                    "label-in-value": true
                  },
                  on: {
                    "on-change": event => {
                      params.row.PayModeID = event.value;
                      that.chargeTableData[params.index].PayModeID =
                        event.value;
                      that.myPaymentMode[params.index] = event.label;
                    }
                  }
                },
                that.volumeTypes.map(function(type) {
                  return h(
                    "Option",
                    {
                      props: {
                        // value: type.PayModeID
                        value: type.ID
                      }
                    },
                    // type.PayModeName
                    type.Name
                  );
                })
              )
            ]);
          }
        },
        {
          title: "总贴息费",
          align: "center",
          key: "HandlingFee",
          render: (h, params) => {
            let that = this;
            return h("div", [
              h("InputNumber", {
                props: {
                  placeholder: "请填写贴息费",
                  value: that.chargeTableData[params.index].HandlingFee
                    ? that.chargeTableData[params.index].HandlingFee
                    : 0,
                  max: 99999999999,
                  min: 0.01
                },
                on: {
                  input: value => {
                    that.chargeTableData[params.index].HandlingFee = value;
                  }
                }
              })
            ]);
          }
        },
        {
          title: "金额",
          align: "center",
          key: "Amount",
          render: (h, params) => {
            let that = this;
            return h("div", [
              h("InputNumber", {
                props: {
                  placeholder: "请填写金额",
                  value: that.chargeTableData[params.index].Amount,
                  max: 99999999999,
                  min: 0.01,
                  step: 1
                },
                style: {
                  width: "100%"
                },
                on: {
                  "on-change": e => {
                    params.row.Amount = e;
                    that.chargeTableData[params.index] = params.row;
                  }
                }
              })
            ]);
          }
        },
        {
          title: "操作",
          align: "center",
          width: 120,
          render: (h, params) => {
            return h("div", [
              h("i", {
                class: {
                  "ivu-icon": true,
                  "ivu-icon-aaa-tianjia": true,
                  "icon-btn": true
                },
                on: {
                  click: () => {
                    this.addCharge(params.index);
                  }
                },
                style: {
                  marginRight: "20px"
                }
              }),
              h("i", {
                class: {
                  "ivu-icon": true,
                  "ivu-icon-aaa-icon-shanchu": true,
                  "icon-btn": true
                },
                on: {
                  click: () => {
                    this.delCharge(params.index);
                  }
                }
              })
            ]);
          }
        },
        {
          title: " ",
          width: 10
        }
      ],
      chargeTablePrintHead: [
        {
          title: "序号",
          type: "index",
          align: "center",
          width: 80
        },
        {
          title: "支付方式",
          align: "center",
          key: "PayModeName"
        },
        {
          title: "金额",
          align: "center",
          key: "Amount",
          render: (h, params) => {
            if (!params.row.Amount) {
              return 0.0;
            }
            return h("div", {}, params.row.Amount.toFixed(2));
          }
        }
      ],
      chargeTableData: [],
      // 支付方式下拉框
      volumeTypes: [],
      // 我的支付方式 保存文字
      myPaymentMode: [],

      // lookupPayData: [],
      // 外部列表
      columns1: [
        {
          title: "还款日期",
          key: "Date",
          align: "center",
          // width: 180,
          render: (h, params) => {
            if (!params.row.Date) {
              return "";
            }
            return h(
              "div",
              {},
              moment(params.row.Date).format("YYYY-MM-DD HH:mm:ss")
            );
          }
        },
        {
          title: "还款金额",
          // width: 180,
          key: "RepaymentAmount",
          align: "center"
        },
        {
          title: "项目/物资名称",
          key: "ItemName",
          // width: 250,
          align: "center",
          render: (h, params) => {
            // if (!params.row.ItemName) {
            //     return ''
            // }
            // let text = params.row.ItemName
            // if (text.length > 10) {
            //     text = text.substr(0, 10) + '...'
            // }
            return h(
              "Tooltip",
              {
                props: {
                  content: params.row.ItemName,
                  placement: "top"
                }
              },
              params.row.ItemName
            );
          }
        },
        {
          title: "规格",
          key: "ItemStandard",
          // width: 180,
          align: "center"
        },
        {
          title: "客户姓名",
          key: "CustomerName",
          // width: 180,
          align: "center"
        },
        {
          title: "电话",
          key: "CustomerPhone",
          // width: 180,
          align: "center"
        },
        {
          title: "经手人",
          key: "HandleByName",
          // width: 180,
          align: "center"
        },
        {
          title: " "
        }
      ],
      list: [],
      selection: [],
      // 欠款项目列表 添加
      qzdmxColumns: [
        {
          type: "selection",
          checked: true,
          width: 80
        },
        {
          title: "确诊单编号",
          key: "CertainProjectID"
        },
        {
          title: "项目/物资名称",
          key: "ItemName",
          align: "center",
          width: 180
        },
        {
          title: "规格",
          key: "ItemStandard",
          align: "center"
        },
        {
          title: "单位",
          key: "ItemUnit",
          align: "center"
        },
        {
          title: "收费日期",
          key: "ChargeDate",
          align: "center",
          render: (h, params) => {
            if (!params.row.ChargeDate) {
              return "";
            }
            return h(
              "div",
              {},
              moment(params.row.ChargeDate).format("YYYY-MM-DD HH:mm:ss")
            );
          }
        },
        {
          title: "全部欠款",
          key: "TotalArrearsAmount",
          align: "center",
          render: (h, parmas) => {
            let amount = Number(parmas.row.TotalArrearsAmount).toFixed(2);
            return h("div", {}, amount);
          }
        },
        {
          title: "剩余欠款",
          key: "RemainingArrearsAmount",
          align: "center",
          render: (h, params) => {
            let amount = Number(params.row.RemainingArrearsAmount).toFixed(2);
            return h("div", {}, amount);
          }
        },
        {
          title: "已还欠款",
          key: "RepaymentAmount",
          align: "center",
          render: (h, parmas) => {
            let amount = Number(parmas.row.RepaymentAmount).toFixed(2);
            return h("div", {}, amount);
          }
        },
        // {
        //     title: '备注',
        //     key: 'Remark',
        //     width: 140,
        //     align: 'center',
        //     render: (h, parmas) => {
        //         let that = this
        //         if (!parmas.row.Remark) {
        //             return ''
        //         }
        //         let text = parmas.row.Remark
        //         if (text.length > 10) {
        //             text = text.substr(0, 9)
        //         }
        //         return h('div', {
        //             style: {
        //                 textAlign: 'center'
        //             },
        //             on: {
        //                 click: () => {
        //                     that.showRemark(parmas.row)
        //                 }
        //             }
        //         }, text)
        //     }
        // },
        {
          title: " ",
          width: 10
        }
      ],
      qzdmxList: [],
      // zfjhColumns: [
      //     {
      //         title: '序号',
      //         type: 'index',
      //         align: 'center'
      //     }, {
      //         title: '支付方式',
      //         align: 'center',
      //         key: 'PayModeID',
      //         render: (h, params) => {
      //             let that = this
      //             return h('div', [
      //                 h('Select', {
      //                     props: {
      //                         value: that.zfjhList[params.index].PayModeID,
      //                         'label-in-value': true,
      //                         'transfer': true,
      //                         'placement': 'top'
      //                     },
      //                     on: {
      //                         'on-change': (event) => {
      //                             params.row.PayModeID = event.value
      //                             that.zfjhList[params.index].PayModeID = event.value
      //                             that.myPaymentMode[params.index] = event.label
      //                         }
      //                     }
      //                 },
      //                     that.volumeTypes.map(function (type) {
      //                         return h('Option', {
      //                             props: {
      //                                 value: type.ID
      //                             }
      //                         }, type.Name)
      //                     })
      //                 )
      //             ])
      //         }
      //     },
      //      {
      //         title: '金额',
      //         align: 'center',
      //         key: 'Amount',
      //         render: (h, params) => {
      //             let that = this
      //             return h('div', [
      //                 h('InputNumber', {
      //                     props: {
      //                         placeholder: '请填写金额',
      //                         value: that.zfjhList[params.index].Amount,
      //                         max: 999999999999,
      //                         min: 0,
      //                         step: 1
      //                     },
      //                     on: {
      //                         'on-change': (e) => {
      //                             params.row.Amount = e
      //                             that.zfjhList[params.index] = params.row
      //                         }
      //                     }
      //                 })
      //             ])
      //         }
      //     }, {
      //         title: '操作',
      //         align: 'center',
      //         render: (h, params) => {
      //             return h('div', [
      //                 h('i', {
      //                     class: {
      //                         'ivu-icon': true,
      //                         'ivu-icon-aaa-tianjia': true,
      //                         'icon-btn': true
      //                     },
      //                     on: {
      //                         click: () => {
      //                             this.addCharge(params.index)
      //                         }
      //                     },
      //                     style: {
      //                         marginRight: '20px'
      //                     }
      //                 }),
      //                 h('i', {
      //                     class: {
      //                         'ivu-icon': true,
      //                         'ivu-icon-aaa-icon-shanchu': true,
      //                         'icon-btn': true
      //                     },
      //                     on: {
      //                         click: () => {
      //                             this.delCharge(params.index)
      //                         }
      //                     },
      //                     style: {
      //                         marginRight: '5px'
      //                     }
      //                 })
      //             ]);
      //         }
      //     }, {
      //         title: ' ',
      //         align: 'center',
      //         width: 10
      //     }
      // ],
      zfjhList: [],
      myPaymentMode: [],
      volumeTypes: [],
      // maxGiveBack: 0,
      // giveBackNum: 0,
      printColumns: [
        {
          title: "项目/物资名称",
          key: "xmmc",
          align: "center",
          width: 180
        },
        {
          title: "数量",
          key: "num",
          align: "center",
          width: 180
        },
        {
          title: "金额",
          key: "money",
          align: "center",
          width: 180
        },
        {
          title: " "
        }
      ],
      printData: []
    };
  },

  computed: {
    getNowDay() {
      return moment(new Date()).format("YYYY-MM-DD");
    },
    ...mapState({
      userMes: state => state.app.userMes,
      authorList: state => state.app.authorList,
      tableRows: state => state.app.tableRows
    }),
    setTableHeight() {
      let that = this;
      return that.tableHeight;
    },
    setModalTitle() {
      let that = this;
      let mode = that.mode;
      let title = mode == 1 ? "新增" : "浏览";
      return title;
    }
  },

  methods: {
    //欠款弹出框默认全选
    handleSelectAll(status) {
      this.$refs.selection.selectAll(status);
    },
    // 获取欠款回收记录列表
    getList() {
      let that = this;
      let data = {
        EmployeeID: that.userMes.EmployeeID,
        StartDate: that.formItem.startDate,
        EndDate: that.formItem.endDate,
        CustomerName: that.formItem.userName,
        CustomerPhone: that.formItem.userTel,
        page: that.tablePage.page,
        size: that.tablePage.pageNum
      };
      // 转换日期
      if (data.StartDate) {
        data.StartDate = moment(data.StartDate).format("YYYY-MM-DD");
      }
      if (data.EndDate) {
        data.EndDate = moment(data.EndDate).format("YYYY-MM-DD");
      }
      if (data.CustomerPhone) {
        let regex = /^1\d{10}$/;
        if (!regex.test(data.CustomerPhone)) {
          that.$Message.error("电话号码格式有误");
          return false;
        }
      }
      that.tableLoading = true;
      // 获取列表
      api.getArrearsRepaymentList(data).then(response => {
        if (response.error_code === "Success") {
          let res = response.data;
          for (let i of res.list) {
            let phone = i.CustomerPhone;
            i.CustomerPhone =
              phone.substring(0, 3) + "****" + phone.substr(phone.length - 4);
          }
          that.list = res.list;
          that.tableLoading = false;
          that.$set(that.tablePage, "page", res.page);
          that.$set(that.tablePage, "allNum", res.total);
          that.tablePage.maxPageNum = res.totalPage;
          that.setPage();
        } else {
          that.$Message.error(response.error_message);
        }
      });
    },
    // 列表搜索
    searchCustomerTel() {
      let that = this;
      that.$refs.searchTelForm.validate(validate => {
        if (validate) {
          // 搜索...
          let data = {
            CustomerPhone: that.searchTel.tel,
            EmployeeID: that.userMes.EmployeeID
          };
          that.uploading = true;
          api.getCustomerByPhone(data).then(response => {
            that.uploading = false;
            let a = {
              Name: "",
              Age: "",
              Phone: data.CustomerPhone,
              CustomerSex: ""
            };
            if (response.error_code === "Success") {
              that.formValidate.CustomerID = response.data.ID;
              a = response.data;
              that.resetForm();
              that.modalTitle = "新增";
              that.chargeTableData = [];
              that.mode = 1;
              that.setData(a);
              that.addCharge();
              that.getArrearsListByCustomerID(response.data.ID);
            } else {
              that.$Message.error(response.error_message);
            }
          });
          that.$refs.searchTelForm.resetFields();
        } else {
          that.$Message.error("请输入用户的联系电话");
        }
      });
    },
    // 搜索重置
    searchReset() {
      let that = this;
      that.$refs.searchTelForm.resetFields();
      that.poupSearchTel = false;
    },
    // 获取支付方式
    getZffsList() {
      let that = this;
      let data = {
        //EmployeeID: that.userMes.EmployeeID
        storeId: that.userMes.StoreID
      };
      api.getCashPayModesV1(data).then(response => {
        if (response.error_code === "Success") {
          let res = response.data;
          that.volumeTypes = res;
        } else {
          that.$Message.error(response.error_message);
        }
      });
    },
    // 获取行编号
    getDetail(row) {
      let that = this;
      that.rowID = row.ID;
    },
    // 选中某一行
    chooseRow(row) {
      let that = this;
      that.currentID = row.ID;
      that.currentPhone = row.CustomerPhone;
    },
    // 点击搜索
    searchForm() {
      let that = this;
      //判断两个时间段大小
      echartsCommon.message = that.$Message;
      if (
        echartsCommon.ContrastTime(
          that.formItem.startDate,
          that.formItem.endDate
        )
      ) {
        that.tablePage.page = 1;
        that.getList();
      }
      //------------------
    },
    // 重置搜索框
    resetSearch() {
      let that = this;
      that.tablePage.page = 1;
      that.$refs.searchForm.resetFields();
      that.getList();
    },
    // 重置表单以及模态框
    resetForm() {
      let that = this;
      that.$refs.formValidate1.resetFields();
      that.formValidate.Remark = "";
      /// that.detailMessageData = []
      that.qzdmxList = [];
      that.zfjhList = [];
      that.modal1 = false;
      that.jinyong = false;
    },
    //点击新增
    // showAddPoup() {
    //     let that = this
    //     that.$refs.searchTelForm.resetFields()
    //     that.poupSearchTel = true
    //     that.$nextTick(() => {
    //         that.$refs.searchTel.focus()
    //     })
    // },
    checkAddMode() {
      let that = this;
      that.poupSearchTel = true;
      that.$nextTick(() => {
        that.$refs.searchTel.focus();
      });
      that.mode = 1;
      that.resetForm();
    },
    //点击浏览
    checkBillStatus() {
      // 显示详情
      let that = this;
      if (!that.currentID) {
        that.$Message.error("请选择一条欠款记录");
        return false;
      }
      that.modalTitle = "浏览";
      // that.modalMode = 'lookUp'
      that.mode = 2;
      that.resetForm();
      that.$store.commit("changeLoadingPage");
      // that.formValidate.CustomerID = response.data.ID
      api.seeRefundsPrepayments(that.currentID).then(response => {
        that.$store.commit("changeLoadingPage");
        if (response.error_code !== "Success") {
          that.$Message.error(response.error_message);
          return false;
        }
        let res = response.data;
        that.setData(res);
        let b = {
          itemName: res.ItemName,
          itemStandard: res.ItemStandard,
          itemUnit: res.ItemUnit,
          quantity: res.Quantity,
          price: res.Amount
        };
        that.refundsTotal = res.Amount;
        that.lookUpItemsData = [];
        that.lookUpItemsData.push(b);
        // that.lookupPayData = []
        that.printData = [];
        that.printData.push(b);
        // that.lookupPayData = res.PayDetails
        that.printPayMode = res.PayDetails;
        that.modal1 = true;
      });

      // that.modal1 = true
    },
    // 检查权限
    checkAuthor() {
      let that = this;
      let name = that.$route.name;
      let list = that.authorList[name];
      for (let i of list) {
        if (i.Name === "增加") {
          that.showAdd = i.IsVisible;
        }
        if (i.Name === "浏览") {
          that.showEdit = i.IsVisible;
        }
      }
    },
    // 加载模态框客户信息
    setData(res) {
      let that = this;
      that.formValidate.CustomerName = res.Name;
      that.formValidate.CustomerAge = res.Age;
      that.formValidate.CustomerPhone = res.Phone;
      that.formValidate.CustomerSex = res.Sex;
      that.formValidate.TMKEmployeeName = res.TMKEmployeeName;
      that.formValidate.SceneEmployeeName = res.SceneEmployeeName;
      that.formValidate.ArrearsBalance = Number(res.ArrearsBalance);
      that.formValidate.HandselBalance = Number(res.HandselBalance);
      that.formValidate.CashBalance = Number(res.CashBalance);
      that.formValidate.IntegrationBalance = Number(res.IntegrationBalance);
    },
    // 选择欠款项目/物资
    selectMaterial(selection) {
      let that = this;
      // 选中的物资/药物列表
      that.selection = selection;
    },

    // 点击保存
    addForm() {
      let that = this;
      that.jinyong = true; //禁用保存按钮
      // 欠款回收数据模型
      let data = {
        RepaymentAmount: 0,
        CertainProjectIDList: [],
        CustomerID: that.formValidate.CustomerID,
        HandleBy: that.userMes.EmployeeID,
        Remark: that.formValidate.Remark,
        PayDetails: []
      };
      // 支付明细
      data.PayDetails = that.chargeTableData;
      // 选中的欠款项目ID
      for (let i in that.selection) {
        data.CertainProjectIDList.push(that.selection[i].CertainProjectID);
      }

      for (let i of that.chargeTableData) {
        if (i.Amount <= 0) {
          that.$Message.error("充值金额必须大于0");
          that.jinyong = false;
          that.uploading = false;
          return false;
        }
        data.RepaymentAmount += i.Amount;
      }
      // 总额
      that.Amount = data.RepaymentAmount;
      // 调用api
      // console.log(data);
      api.addArrearsRepayment(data).then(response => {
        that.uploading = false;
        if (response.error_code === "Success") {
          that.resetSearch();
          that.printPage();
          setTimeout(() => {
            that.jinyong = false;
          }, 3000);
        } else {
          that.$Message.error(response.error_message);
        }
      });
    },
    // 添加支付方式
    addCharge(index) {
      let that = this;
      let a = {
        PayModeID: "",
        Amount: 0,
        HandlingFee: 0
      };
      that.chargeTableData.push(a);
    },
    // 删除支付方式
    delCharge(index) {
      let that = this;
      if (that.chargeTableData.length > 1) {
        that.chargeTableData.splice(index, 1);
      }
    },
    // 根据客户编号获取该客户所有的欠款项目列表
    getArrearsListByCustomerID(id) {
      let that = this;
      let data = {
        CustomerID: id
      };
      api.getCustomerArrearsListByCustomerID(data).then(response => {
        if (response.error_code === "Success") {
          that.uploading = false;
          that.modal1 = true;
          that.poupSearchTel = false;
          for (let i of response.data.list) {
            let data = i;
            data.selectType = true;
            that.qzdmxList.push(data);
          }
          setTimeout(() => {
            let that = this;
            that.handleSelectAll(true);
          }, 500);

          // that.qzdmxList = response.data.list
        } else {
          that.$Message.error(response.error_message);
        }
      });
    },

    // 设置table高度
    initTableHeight() {
      let that = this;
      that.tableHeight = document.getElementById("tableBox").offsetHeight;
      window.onresize = function() {
        that.tableHeight = document.getElementById("tableBox").offsetHeight;
      };
    },
    // 导出列表excel
    exportTable() {
      let that = this;
      that.$refs.mainTable.exportCsv({
        filename: `${new Date().getTime()}${document.title}`
      });
    },
    // 四舍五入数据
    formatData(num) {
      let that = this;
      let n = parseInt(num * 100 + 0.5) / 100;
      return n;
    },
    // 打印页面
    printPage() {
      let that = this;
      that.modal1 = false;
      setTimeout(() => {
        window.print();
      }, 500);
    },
    // 双击列表备注列显示所有备注内容
    showRemark(row) {
      let that = this;
      that.$Modal.info({
        title: "备注详情",
        content: row.remark
      });
    },

    // 设置页码
    setPage() {
      let that = this;
      let teblePage = that.tablePage;
      teblePage.startNum = teblePage.pageNum * (teblePage.page - 1) + 1;
      let endPage = teblePage.page * teblePage.pageNum;
      teblePage.endNum =
        endPage > teblePage.allNum ? teblePage.allNum : endPage;
    },
    // 上一页
    prevPage() {
      let that = this;
      if (that.tablePage.page <= 1) {
        that.$Message.error("已经是第一页");
        return false;
      }
      that.tablePage.page--;
      that.getList();
    },
    // 下一页
    nextPage() {
      let that = this;
      if (that.tablePage.page >= that.tablePage.maxPageNum) {
        that.$Message.error("已经是最后一页");
        return false;
      }
      that.tablePage.page++;
      that.getList();
    },
    // 填写页码变更第几页
    changePage() {
      let that = this;
      that.getList();
    }
  },
  mounted() {
    let that = this;
    that.$nextTick(() => {
      that.checkAuthor();
      that.initTableHeight();
      that.getList();
      that.getZffsList();
      let pageName = that.$route.name;
      let list = that.authorList[pageName];
    });
  },
  activated() {
    let that = this;
    that.$nextTick(() => {
      let phone = that.$route.params.phone;
      if (phone) {
        // 快捷菜单
        that.searchTel.tel = phone;
        // that.$store.commit('changeLoadingPage')
        setTimeout(() => {
          that.searchCustomerTel();
        }, 300);
      }
    });
  },
  filters: {
    formatMoney(val) {
      if (!val) {
        return 0.0;
      }
      return Number(val).toFixed(2);
    }
  }
};
</script>