<template>
  <div class="xmqz-container container">
    <div class="search-box">
      <Form :model="formItem" :label-width="0" inline @submit.native.prevent ref="searchForm" class="search-form">
        <row :gutter="20">
          <i-col span="3">
            <formItem prop="startDate">

              <DatePicker class="DatePicker_time" type="date" :options="options1" placeholder="开始日期" v-model="formItem.startDate" :clearable="false" :editable="false"></DatePicker>
            </formItem>
          </i-col>
          <i-col span="3">
            <formItem prop="endDate">

              <DatePicker class="DatePicker_time" type="date" :options="options1" placeholder="结束日期" v-model="formItem.endDate" :clearable="false" :editable="false"></DatePicker>
            </formItem>
          </i-col>
          <i-col span="3">
            <FormItem prop="userName">
              <Input v-model="formItem.userName" placeholder="名称"></Input>
            </FormItem>
          </i-col>
          <i-col span="15">
            <formItem class="btn-box">
              <i-button type="primary" class="btn" @click="searchForm">搜索</i-button>
              <i-button type="warning" class="btn" @click="resetSearch">重置</i-button>
              <!-- <i-button type="primary" class="btn btn-purple" @click="addMode()" v-if="showEdit">添加</i-button> -->
              <i-button type="primary" class="btn btn-purple" @click="setDetail()" :disabled='!currentID' v-if="showEdit">修改</i-button>
            </formItem>
          </i-col>
        </row>
      </Form>
    </div>
    <div class="table-box" id="tableBox">
      <Table :columns="columns1" :data="list" highlight-row :height="setTableHeight" ref="mainTable" @on-current-change="chooseRow"></Table>
      <tableLoadingPage :loading="tableLoading"></tableLoadingPage>
    </div>
    <div class="bottom-box">
      <i-button class="btn-export" @click="exportTable" type="default">导出</i-button>
      <Select v-model="tablePage.pageNum" class="table-row" placement="top" @on-change="changePage">
        <Option :value="item.ID" v-for="(item, index) in tableRows" :key="index">{{item.Name}}</Option>
      </Select>
      <!-- <div class="row-box">{{tablePage.startNum}} - {{tablePage.endNum}}条/共{{tablePage.allNum}}条</div> -->
      <i-button class="btn btn-prev" type="ghost" @click="prevPage">上一页</i-button>
      <i-button class="btn btn-next" type="primary" @click="nextPage">下一页</i-button>
      <div class="page-box">
        <p>前往</p>
        <Input-number :max="tablePage.maxPageNum" :min="1" v-model="tablePage.page" @on-change="changePage"></Input-number>
        <p>页</p>
      </div>
    </div>
    <!-- 弹窗 -->
    <Modal :mask-closable="false" v-model="modal1" width="1000" :scrollable="true" class="dialog" v-if="showAdd || showEdit">
      <div slot='header' class="header not-print">
        新增散装商品
      </div>
      <div slot='close' class="close not-print">
        <i class='ivu-icon ivu-icon-aaa-guanbi' @click="resetForm"></i>
      </div>
      <!-- 用户信息部分 不可修改 -->
      <Form ref="formValidate1" :model="formValidate" :label-width="120" @submit.native.prevent class="form">
        <row type="flex">
          <i-col span="11">
            <FormItem label="套盒名称：" prop="GoodsNameID" :rules="formValidateRule.GoodsNameID">
              <Select v-model="formValidate.GoodsNameID" :filterable="true" placeholder="请选择">
                <Option :value="item.GoodsId" v-for="(item, index) in mrsList" :key="index" @click.native="chooseTH(item)">{{item.Name}}</Option>
              </Select>
            </FormItem>

          </i-col>
        </row>
        <!-- ** -->
      </Form>
      <!-- 物资明细 -->
      <div class="pannel-title">
        <p>物资列表</p>
        <div>
          <i-button type="text" @click="showSmallModal(0)" size="small" style="width: auto; height: auto;">添加物资</i-button>
        </div>
      </div>
      <!-- 添加、修改 -->
      <div class="table-box" style="margin-top:0; margin-bottom:20px;">
        <i-table stripe :columns="choosedItemColumns" :data="choosedItemList" :height="300"></i-table>
      </div>
      <row type="flex" justify="end" style="margin-bottom: 20px; color: #fc5427; font-size: 14px; font-weight: bold;">
      </row>
      <Input v-model="formValidate.Remark" placeholder="备注" type="textarea" :rows="4"></Input>
      <!-- ** -->
      <div slot="footer" class="footer not-print">
        <Button class="btn" type="primary" @click="addForm" :loading="onLoading" :disabled="stopuse">保存</Button>
        <Button class="btn" type="warning" @click="resetForm" :loading="onLoading">取消</Button>
      </div>
    </Modal>
    <!-- 物资弹窗 -->
    <Modal :mask-closable="false" v-model="modal2" width="800" class="dialog" v-if="showAdd || showEdit">
      <div slot='header' class="header not-print">
        散装产品
      </div>
      <div slot='close' class="close not-print">
        <i class='ivu-icon ivu-icon-aaa-guanbi'></i>
      </div>
      <Input v-model="searchKeyWord" placeholder="请输入项目名称" style="width: 300px; margin: 2px 0 2px 0;" icon="search"></Input>
      <div class="table-box">
        <!-- 物资 -->
        <i-table stripe :columns="materialsColumn" :data="setMaterialtData" @on-selection-change="selectMaterial" :height="500"></i-table>
      </div>
      <div slot="footer" class="footer not-print">
        <Button class="btn" type="primary" @click="smalladdForm" :loading="onLoading">保存</Button>
        <Button class="btn" type="warning" @click="smallResetForm" :loading="onLoading">取消</Button>
      </div>
    </Modal>
  </div>
</template>
<script>
const Decimal = require("decimal");
import Vue from "vue";
import storejs from "storejs";
import api from "@/api/index.js";
import { mapState } from "vuex";
import moment from "moment";
import echartsCommon from "@/api/Common.js";
export default {
  data() {
    return {
      //时间回到今天
      options1: {
        shortcuts: [
          {
            text: "今天",
            value() {
              return new Date();
            }
          }
        ]
      },
      // -----
      Id: "",
      THid: "",
      stopuse: false,
      Typemode: 0, // 0增加 1修改  2浏览
      showEdit: true,
      showAdd: false,
      showLook: false,
      modalTitle: "修改",
      currentID: "",
      searchKeyWord: "",
      onLoading: false,
      childsList: [],
      tablePage: {
        page: 1,
        pageNum: 10,
        maxPageNum: 100,
        allNum: 199,
        startNum: 0,
        endNum: 0,
        row: 10
      },
      tableHeight: 200,
      tableLoading: false,
      onPrint: false,
      number: true,
      delPoup: false,
      modal1: false,
      modal2: false,
      formValidate: {
        GoodsNameID: "",
        Remark: ""
      },
      formValidateRule: {
        GoodsNameID: {
          required: true,
          message: "套盒名称",
          trigger: "blur"
        }
      },
      formItem: {
        startDate: new Date(),
        endDate: new Date(),
        userName: ""
      },
      // 主表格行
      columns1: [
        {
          title: "套盒名称",
          key: "Name",
          align: "center"
        },
        {
          title: "数量",
          key: "Num",
          align: "center"
        },
        {
          title: "价格",
          key: "UnitPrice",
          align: "center"
        }
      ],
      list: [],
      mrsList: [],
      alreadyPaid: false,
      selection: [],
      xmData: [],
      wzData: [],
      volumeTypes: [],
      projectTypeList: [],
      materialsColumn: [
        {
          type: "selection",
          width: 80
        },
        {
          title: "产品名称",
          key: "Name",
          align: "center"
        },
        {
          title: "单价",
          key: "UnitPrice",
          align: "center"
        },
        {
          title: "批次",
          key: "Standard",
          align: "center"
        },
        {
          title: "单位",
          key: "Unit",
          align: "center"
        }
      ],
      materialsData: [],
      projectListData: [],
      HandleList: [],
      myPaymentMode: [],
      choosedItemColumns: [
        {
          title: "产品名称",
          key: "Name",
          align: "center"
        },
        {
          title: "数量",
          key: "Num",
          align: "center",
          render: (h, params) => {
            let that = this;
            return h("div", [
              h("Input-number", {
                props: {
                  placeholder: "填写数量",
                  value: that.choosedItemList[params.index].Num
                    ? that.choosedItemList[params.index].Num
                    : 0,
                  max: 9999999,
                  min: 0
                },
                on: {
                  "on-change": function(e) {
                    that.$nextTick(() => {
                      params.row.Num = e;
                      that.choosedItemList[params.index] = params.row;
                    });
                  }
                }
              })
            ]);
          }
        },
        {
          title: "价格",
          key: "UnitPrice",
          align: "center",
          render: (h, params) => {
            let that = this;
            return h("div", [
              h("Input-number", {
                props: {
                  placeholder: "填写数量",
                  value: that.choosedItemList[params.index].UnitPrice
                    ? that.choosedItemList[params.index].UnitPrice
                    : 0,
                  max: 9999999,
                  min: 0,
                  step: 0.01
                },
                on: {
                  "on-change": function(e) {
                    that.$nextTick(() => {
                      params.row.UnitPrice = e;
                      that.choosedItemList[params.index] = params.row;
                    });
                  }
                }
              })
            ]);
          }
        },
        {
          title: "操作",
          key: "action",
          align: "center",
          width: 80,
          render: (h, params) => {
            return h("div", [
              h("i", {
                class: {
                  "ivu-icon": true,
                  "ivu-icon-aaa-icon-shanchu": true,
                  "icon-btn": true
                },
                style: {},
                on: {
                  click: () => {
                    this.showDelDetailPoup(params.index);
                  }
                }
              })
            ]);
          }
        },
        {
          title: " ",
          width: 10
        }
      ],
      choosedItemList: []
    };
  },
  computed: {
    ...mapState({
      userMes: state => state.app.userMes,
      tableRows: state => state.app.tableRows,
      authorList: state => state.app.authorList
    }),
    setTableHeight() {
      let that = this;
      return that.tableHeight;
    },
    setMaterialtData() {
      // 过滤物资列表
      let that = this;
      let arr = [];
      let idList = [];
      let keyWord = that.searchKeyWord;
      for (let i of that.materialsData) {
        if (i.Name.indexOf(keyWord) > -1 || i.GoodsID.indexOf(keyWord) > -1) {
          arr.push(i);
        }
      }
      return arr;
    }
  },
  methods: {
    chooseTH(item) {
      let that = this;
      that.THid = item.Id;
    },
    addMode() {
      //点击添加
      let that = this;
      that.modal1 = true;
      that.stopuse = false;
      that.Typemode = 0;
      that.formValidate.GoodsNameID = "";
      that.choosedItemList = [];
      // 添加
      that.getProjectList();
    },
    getProjectList() {
      let that = this;
      api.GetBoxGoodsName().then(res => {
        if (res.error_code === "Success") {
          that.mrsList = res.data;
        } else {
          that.$Message.error(res.error_message);
        }
      });
    },
    chooseRow(row) {
      // 选中某一行修改
      let that = this;
      that.currentID = row.GoodsID;
      that.Id = row.Id;
      that.BoxDetail = row.NewBoxDetail;
    },
    searchForm() {
      // 搜索表格
      let that = this;
      //判断两个时间段大小
      echartsCommon.message = that.$Message;
      if (
        echartsCommon.ContrastTime(
          that.formItem.startDate,
          that.formItem.endDate
        )
      ) {
        that.tablePage.page = 1;
        that.getList();
      }
    },
    resetSearch() {
      let that = this;
      that.tablePage.page = 1;
      that.$refs.searchForm.resetFields();
      that.getList();
    },
    showDelDetailPoup(index) {
      let that = this;
      that.choosedItemList.splice(index, 1);
    },
    resetForm() {
      let that = this;
      that.choosedItemList = [];
      that.formValidate.Remark = "";
      that.$refs.formValidate1.resetFields();
      that.modal1 = false;
    },
    setDetail(res) {
      //修改
      let that = this;
      that.formValidate.GoodsNameID = that.currentID;
      that.choosedItemList = that.BoxDetail;
      that.modal1 = true;
      that.Typemode = 1;
    },
    setUploadData() {
      // 设置提交数据
      let that = this;
      let data = {
        Id: that.THid,
        GoodsID: that.formValidate.GoodsNameID,
        Remark: that.formValidate.Remark,
        BoxDetail: []
      };
      // 添加物资记录
      for (let i of that.choosedItemList) {
        let a = {
          GoodsID: i.GoodsID,
          Name: i.Name,
          Num: Number(i.Num),
          UnitPrice: Number(i.UnitPrice)
        };
        data.BoxDetail.push(a);
      }
      if (that.Typemode == 0) {
        data.Id = that.THid;
      } else {
        data.Id = that.Id;
      }
      data.GoodsID = that.formValidate.GoodsNameID;
      return data;
    },
    addForm() {
      let that = this;
      if (that.choosedItemList.length <= 0) {
        that.$Message.error("请选择物资");
        return false;
      }

      if (that.choosedItemList.length <= 0) {
        that.$Message.error("请选择物资");
        return false;
      }
      if (that.formValidate.GoodsNameID == "") {
        that.$Message.error("请选择套盒");
        return false;
      }
      that.onLoading = true;
      // console.log(that.setUploadData());
      if (that.Typemode == 0) {
        //添加保存
        // api.AddBoxGoods(that.setUploadData()).then(response => {
        //   that.onLoading = false;
        //   if (response.error_code === "Success") {
        //     that.$Message.success("提交成功");
        //     that.resetForm();
        //     that.getList();
        //   } else {
        //     that.$Message.error(response.error_message);
        //   }
        // });
      } else {
        //修改保存
        api.EditBoxGoods(that.setUploadData()).then(response => {
          that.onLoading = false;
          if (response.error_code === "Success") {
            that.$Message.success("修改成功");
            that.resetForm();
            that.getList();
          } else {
            that.$Message.error(response.error_message);
          }
        });
      }
    },
    // 选择物资
    selectMaterial(selection) {
      let that = this;
      // 选中的物资/药物列表
      that.selection = selection;
    },
    smalladdForm() {
      let that = this;
      // 选择物资
      for (let i in that.selection) {
        let a = {
          GoodsID: that.selection[i].GoodsID,
          Name: that.selection[i].Name,
          UnitPrice: that.selection[i].UnitPrice,
          Num: 1
        };
        that.choosedItemList.push(a);
      }
      that.modal2 = false;
    },
    smallResetForm() {
      let that = this;
      that.modal2 = false;
    },
    showSmallModal() {
      // 展示物资
      let that = this;
      that.searchKeyWord = "";
      that.$store.commit("changeLoadingPage");
      that.getSalesGoodsList();
      that.modal2 = true;
    },
    showRemark(row) {
      // 显示备注
      let that = this;
      that.$Modal.info({
        title: "备注详情",
        content: row.Remark
      });
    },
    initTableHeight() {
      let that = this;
      that.tableHeight = document.getElementById("tableBox").offsetHeight;
      window.onresize = function() {
        that.tableHeight = document.getElementById("tableBox").offsetHeight;
      };
    },
    setPage() {
      let that = this;
      let teblePage = that.tablePage;
      teblePage.startNum = teblePage.pageNum * (teblePage.page - 1) + 1;
      let endPage = teblePage.page * teblePage.pageNum;
      teblePage.endNum =
        endPage > teblePage.allNum ? teblePage.allNum : endPage;
    },
    prevPage() {
      let that = this;
      if (that.tablePage.page <= 1) {
        that.$Message.error("已经是第一页");
        return false;
      }
      that.tablePage.page--;
      that.getList();
    },
    nextPage() {
      let that = this;
      if (that.tablePage.page >= that.tablePage.maxPageNum) {
        that.$Message.error("已经是最后一页");
        return false;
      }
      that.tablePage.page++;
      that.getList();
    },
    changePage() {
      let that = this;
      that.getList();
    },
    getList() {
      let that = this;
      let data = {
        goods: that.formItem.userName,
        pageindex: that.tablePage.page,
        pagesize: that.tablePage.pageNum
      };
      that.tableLoading = true;
      api.GetBoxGoodsList(data).then(res => {
        if (res.error_code === "Success") {
          let resList = res.data;
          that.list = resList;
          that.tableLoading = false;
          // that.$set(that.tablePage, "page", res.page);
          // that.$set(that.tablePage, "pageNum", res.size);
          // that.$set(that.tablePage, "allNum", res.total);
          // that.$set(that.tablePage, "maxPageNum", res.totalPage);
          that.setPage();
        } else {
          that.$Message.error(res.error_message);
        }
      });
    },
    //导出
    exportTable() {
      let that = this;
      that.$refs.mainTable.exportCsv({
        filename: `${new Date().getTime()}${document.title}`
      });
    },
    getSalesGoodsList() {
      let that = this;
      let data = {
        page: 1,
        size: 1000
      };
      api.GetGoodsInfos(data).then(res => {
        that.$store.commit("changeLoadingPage");
        if (res.error_code === "Success") {
          that.materialsData = res.data;
        } else {
          that.$Message.error(res.error_message);
        }
      });
    }
  },
  mounted() {
    let that = this;
    that.$nextTick(() => {
      that.initTableHeight();
      that.getList();
      that.getProjectList();
    });
  }
};
</script>
<style>
.pannel-title i:hover {
  cursor: pointer;
  color: #94bb6d;
}

.ivu-select-dropdown {
  z-index: 99999;
}

.buttongroup {
  margin-left: 323px;
  margin-top: -33px;
}
</style>