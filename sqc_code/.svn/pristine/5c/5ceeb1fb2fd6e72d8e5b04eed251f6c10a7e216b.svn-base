<template>
    <div class="yjjcz-container container">
        <div class="search-box">
            <Form :model="formItem" :label-width="0" inline @submit.native.prevent ref="searchForm" class="search-form">
                <row :gutter="20">
                    <i-col span="3">
                        <formItem prop="startDate">
                            <DatePicker class="DatePicker_time" type="date" :options="options1" placeholder="开始日期" v-model="formItem.startDate" :clearable="false" :editable="false"></DatePicker>
                        </formItem>
                    </i-col>
                    <i-col span="3">
                        <formItem prop="endDate">
                            <DatePicker class="DatePicker_time" type="date" :options="options1" placeholder="结束日期" v-model="formItem.endDate" :clearable="false" :editable="false"></DatePicker>
                        </formItem>
                    </i-col>

                    <i-col span="3">
                        <FormItem prop="userName">
                            <Input v-model="formItem.userName" placeholder="姓名"></Input>
                        </FormItem>
                    </i-col>
                    <i-col span="3">
                        <FormItem prop="userTel">
                            <Input v-model="formItem.userTel" placeholder="电话"></Input>
                        </FormItem>
                    </i-col>
                    <i-col span="12">
                        <formItem class="btn-box">
                            <i-button type="primary" class="btn btn-search" @click="searchForm">搜索</i-button>
                            <i-button type="warning" class="btn btn-reset" @click="resetSearch">重置</i-button>
                            <i-button type="primary" class="btn btn-add" @click="showAddPoup" v-if="showAdd">添加</i-button>
                            <i-button type="primary" class="btn btn-purple" @click="showDetail" v-if="showLookUp" :disabled="!rowID">浏览</i-button>
                        </formItem>
                    </i-col>
                </row>
            </Form>
        </div>
        <div class="table-box" id="tableBox">
            <Table :columns="columns1" :data="list" highlight-row :height="setTableHeight" ref="mainTable" @on-current-change="getDetail"></Table>
            <tableLoadingPage :loading="tableLoading"></tableLoadingPage>
        </div>
        <div class="bottom-box">
            <i-button class="btn-export" @click="exportTable" type="default">导出</i-button>
            <Select v-model="tablePage.pageNum" class="table-row" placement="top" @on-change="changePage">
                <Option :value="item.ID" v-for="(item, index) in tableRows" :key="index">{{item.Name}}</Option>
            </Select>
            <div class="row-box">{{tablePage.startNum}} - {{tablePage.endNum}}条/共{{tablePage.allNum}}条</div>
            <i-button class="btn btn-prev" type="ghost" @click="prevPage()">上一页</i-button>
            <i-button class="btn btn-next" type="primary" @click="nextPage()">下一页</i-button>
            <div class="page-box">
                <p>前往</p>
                <Input-number :max="tablePage.maxPageNum" :min="1" v-model="tablePage.page" @on-change="changePage"></Input-number>
                <p>页</p>
            </div>
        </div>
        <!-- 查询电话号码弹窗 -->
        <Modal :mask-closable="false" v-model="poupSearchTel" class="dialog" class-name="vertical-center-modal" v-if="setAuthor">
            <div slot='header' class="header">
                请输入电话号码
            </div>
            <Form :model="searchTel" ref="searchTelForm" @submit.native.prevent="searchCustomerTel">
                <Form-item prop="tel" :rules="searchRule.tel">
                    <i-input v-model="searchTel.tel" placeholder="请输入用户的手机号" autofocus ref="searchTel"></i-input>
                </Form-item>
            </Form>
            <div slot='footer' class="footer">
                <i-button class="btn" type="primary" @click="searchCustomerTel" :loading="uploading">确定</i-button>
                <i-button class="btn" type="warning" @click="searchReset" :loading="uploading">取消</i-button>
            </div>
        </Modal>
        <!-- 弹窗 -->
        <Modal :mask-closable="false" v-model="modal1" class="dialog" width="1000" class-name="vertical-center-modal" v-if="setAuthor">
            <div slot='header' class="header not-print">
                {{setModalTitle}}
            </div>
            <div slot='close' class="close not-print">
                <i class='ivu-icon ivu-icon-aaa-guanbi'></i>
            </div>
            <!-- 用户信息部分 不可修改 -->
            <Form ref="formValidate1" :model="formValidate" :label-width="120" @submit.native.prevent class="form">
                <row type="flex" justify="space-between">
                    <i-col span="8">
                        <FormItem prop="CustomerName" label="姓名：">
                            <Input v-model="formValidate.CustomerName" placeholder="姓名" :disabled="true"></Input>
                        </FormItem>
                    </i-col>
                    <i-col span="8">
                        <FormItem prop="CustomerPhone" label="电话：">
                            <Input v-model="formValidate.CustomerPhone" placeholder="电话" :disabled="true"></Input>
                        </FormItem>
                    </i-col>
                    <i-col span="8">
                        <FormItem label="年龄：" prop="CustomerAge">
                            <Input v-model="formValidate.CustomerAge" placeholder="年龄" :disabled="true"></Input>
                        </FormItem>
                    </i-col>
                </row>
                <row type="flex" justify="space-between">
                    <i-col span="8">
                        <FormItem prop="CustomerSex" label="性别：">
                            <Input v-model="formValidate.CustomerSex" placeholder="性别" :disabled="true"></Input>
                        </FormItem>
                    </i-col>
                    <i-col span="8">
                        <FormItem label="渠道咨询：" prop="TMKEmployeeName">
                            <Input v-model="formValidate.TMKEmployeeName" placeholder="渠道咨询" :disabled="true"></Input>
                        </FormItem>
                    </i-col>
                    <i-col span="8">
                        <FormItem label="美肤总监：" prop="SceneEmployeeName">
                            <Input v-model="formValidate.SceneEmployeeName" placeholder="美肤总监" :disabled="true"></Input>
                        </FormItem>
                    </i-col>
                </row>
                <row type="flex" justify="space-between">
                    <i-col span="8">
                        <FormItem label="欠款余额：" prop="ArrearsBalance">
                            <InputNumber v-model="formValidate.ArrearsBalance" placeholder="欠款余额" :disabled="true" :precision="2" style="width:100%;"></InputNumber>
                        </FormItem>
                    </i-col>
                    <i-col span="8">
                        <FormItem label="赠送余额：" prop="HandselBalance">
                            <InputNumber v-model="formValidate.HandselBalance" placeholder="赠送余额" :disabled="true" :precision="2" style="width:100%;"></InputNumber>
                        </FormItem>
                    </i-col>
                    <i-col span="8">
                        <FormItem label="预交余额：" prop="CashBalance">
                            <InputNumber v-model="formValidate.CashBalance" placeholder="预交余额" :disabled="true" :precision="2" style="width:100%;"></InputNumber>
                        </FormItem>
                    </i-col>
                </row>
                <row type="flex" justify="start">
                    <i-col span="8">
                        <FormItem label="积分余额：" prop="IntegrationBalance">
                            <InputNumber v-model="formValidate.IntegrationBalance" placeholder="积分余额" :disabled="true" :precision="2" style="width:100%;"></InputNumber>
                        </FormItem>
                    </i-col>
                    <i-col span="8">
                        <FormItem label="是否来院：" v-if="mode == 1">
                            <RadioGroup v-model="formValidate.Came">
                                <Radio :label="1">
                                    <span>是</span>
                                </Radio>
                                <Radio :label="0">
                                    <span>否</span>
                                </Radio>
                            </RadioGroup>
                        </FormItem>
                        <FormItem label="是否来院：" v-if="mode == 2">
                            <Input v-model="formValidate.Came" placeholder="" :disabled="true"></Input>
                        </FormItem>
                    </i-col>
                </row>
                <!-- ** -->
            </Form>
            <!-- 收费表格 添加用 -->
            <div class="table-box hide-print" v-if="mode==1">
                <i-table stripe :columns="chargeTableHead" :data="chargeTableData"></i-table>
            </div>
            <!-- ** -->
            <!-- 收费表格 浏览用 -->
            <div class="table-box" v-if="mode==2">
                <i-table stripe :columns="chargeTablePrintHead" :data="chargeTableData"></i-table>
            </div>
            <Input v-model="formValidate.Remark" placeholder="无" type="textarea" :rows="4" style="margin-top:20px;" v-if="mode == 2" readonly></Input>
            <Input v-model="formValidate.Remark" placeholder="备注" type="textarea" :rows="4" style="margin-top:20px;" v-else></Input>
            <div slot="footer" class="footer not-print" v-if="mode == 2">
                <Button class="btn-sure" type="primary" @click="printPage">打印</Button>
            </div>
            <div slot="footer" class="footer not-print" v-else>
                <Button class="btn-sure" type="primary" @click="addForm" :loading="uploading" :disabled="btnjinyong">保存</Button>
                <Button class="btn-cancel" type="warning" @click="resetForm" :loading="uploading">取消</Button>
            </div>
        </Modal>
        <!-- 删除提示 -->
        <Modal :mask-closable="false" v-model="delPoup" title="提示" @on-ok="delSingleDetail">
            确认删除该条？
        </Modal>
        <!-- 打印 -->
        <div class="print-box">
            <div class="storeName">{{userMes.PrintHeadString}}</div>
            <div class="storeName">{{userMes.StoreAlias}}</div>
            <div class="document-type">收银单据 顾客联</div>
            <Row>
                <i-col span="12">
                    <span class="print-name">顾客姓名：</span>
                    <span class="print-key">{{formValidate.CustomerName}}</span>
                </i-col>
                <i-col span="12">
                    <span class="print-name">电话：</span>
                    <span class="print-key">{{formValidate.CustomerPhone}}</span>
                </i-col>
            </Row>
            <Row>
                <i-col span="24">
                    <span class="print-name">日期：</span>
                    <span class="print-key">{{getDate}}</span>
                </i-col>
            </Row>
            <div class="line"></div>
            <Row>
                <i-col span="12">
                    <span class="print-name">预交金充值：</span>
                    <span class="print-key">{{Amount.toFixed(2)}}</span>
                </i-col>
            </Row>
            <div class="line"></div>
            <Row v-for="(item, index) in chargeTableData" :key="index">
                <i-col span="12">
                    <span class="print-name">支付方式：</span>
                    <span class="print-key">{{myPaymentMode[index]}}</span>
                </i-col>
                <i-col span="12">
                    <span class="print-name">总贴息费：</span>
                    <span class="print-key">{{item.HandlingFee.toFixed(2)}}</span>
                </i-col>
                <i-col span="12">
                    <span class="print-name">金额：</span>
                    <span class="print-key">{{item.Amount.toFixed(2)}}</span>
                </i-col>
                <i-col span="12">
                    <span class="print-name">赠送金额：</span>
                    <span class="print-key">{{item.Largess.toFixed(2)}}</span>
                </i-col>
            </Row>
            <div class="line"></div>
            <Row>
                <i-col span="24">
                    <span class="print-name">合计：</span>
                    <span class="print-key">{{Amount.toFixed(2)}}</span>
                </i-col>
            </Row>
            <Row>
                <i-col span="24">
                    <span class="print-name">操作人：</span>
                    <span class="print-key">{{userMes.EmployeeName}}</span>
                </i-col>
            </Row>
            <div class="line"></div>
            <Row>
                <i-col span="24">
                    <span class="print-name">服务热线： </span>
                    <span class="print-key">{{userMes.ServiceHotLine}}</span>
                </i-col>
            </Row>
            <Row>
                <i-col span="24">
                    <span class="print-name">门店地址： </span>
                    <span class="print-key">{{userMes.StoreAddress}}</span>
                </i-col>
            </Row>
            <Row>
                <i-col span="24">
                    <span class="print-name">门店电话： </span>
                    <span class="print-key">{{userMes.StorePhone}}</span>
                </i-col>
            </Row>
            <Row>
                <i-col span="24">
                    <span class="print-name">官方网站： </span>
                    <span class="print-key">{{userMes.OfficialWebSite}}</span>
                </i-col>
            </Row>
            <div class="bottom">{{userMes.BottomDescription}}</div>
        </div>
        <!-- ** -->
    </div>
</template>
<script>
import api from "@/api/index.js";
import moment from "moment";
import Vue from "vue";
import { mapState } from "vuex";
export default {
  data() {
    const validateTel = (rule, value, callback) => {
      let reg = /^1\d{10}$/;
      if (value === "") {
        callback(new Error("手机号不得为空"));
      } else if (!reg.test(value)) {
        callback(new Error("请输入正确的手机号"));
      } else {
        callback();
      }
    };
    return {
      //时间回到今天
      options1: {
        shortcuts: [
          {
            text: "今天",
            value() {
              return new Date();
            }
          }
        ]
      },
      // -----
      btnjinyong: false, //禁用保存按钮
      showAdd: false,
      showLookUp: false,
      rowID: "",
      mode: 1, // 1添加  2浏览
      // 提交时按钮加载框
      Amount: 0,
      Largess: 0,
      HandlingFee: 0,
      uploading: false,
      tableLoading: true,
      tablePage: {
        page: 1,
        pageNum: 10,
        maxPageNum: 100,
        allNum: 199,
        startNum: 0,
        endNum: 0
      },
      tableHeight: 200,
      poupSearchTel: false,
      searchTel: {
        tel: ""
      },
      searchRule: {
        tel: {
          required: true,
          message: "请输入正确的手机号码",
          trigger: "blur",
          type: "number",
          validator: validateTel
        }
      },
      userName: "",
      onPrint: false,
      number: true,
      delDetailIndex: 0,
      delPoup: false,
      modal1: false,
      formValidate: {
        CustomerID: "",
        CustomerName: "",
        CustomerPhone: "",
        CustomerAge: "",
        CustomerSex: "",
        TMKEmployeeName: "",
        SceneEmployeeName: "",
        ArrearsBalance: 0,
        HandselBalance: 0,
        CashBalance: 0,
        IntegrationBalance: 0,
        Remark: "",
        Came: 1
      },
      formItem: {
        startDate: new Date(),
        endDate: new Date(),
        userName: "",
        userTel: ""
      },
      columns1: [
        {
          title: "充值日期",
          width: 180,
          key: "Date",
          align: "center",
          render: (h, params) => {
            if (!params.row.Date) {
              return "";
            }
            return h(
              "div",
              {},
              moment(params.row.Date).format("YYYY-MM-DD HH:mm:ss")
            );
          }
        },
        {
          title: "客户姓名",
          width: 100,
          key: "CustomerName",
          align: "center"
        },
        {
          title: "性别",
          width: 70,
          key: "Sex",
          align: "center"
        },
        {
          title: "年龄",
          width: 70,
          key: "Age",
          align: "center"
        },
        {
          title: "电话",
          width: 180,
          key: "Phone",
          align: "center"
        },
        {
          title: "经手人",
          width: 100,
          key: "HandleBy",
          align: "center"
        },
        {
          title: "充值金额",
          width: 130,
          key: "Amount",
          align: "center",
          render: (h, params) => {
            if (!params.row.Amount) {
              return 0.0;
            }
            return h("div", {}, params.row.Amount.toFixed(2));
          }
        },
        {
          title: "赠送金额",
          width: 130,
          key: "Largess",
          align: "center",
          render: (h, params) => {
            if (!params.row.Largess) {
              return 0.0;
            }
            return h("div", {}, params.row.Largess.toFixed(2));
          }
        },
        {
          title: "所属门店",
          width: 180,
          key: "StoreName",
          align: "center"
        },
        {
          title: "备注",
          width: 180,
          key: "Remark",
          align: "center",
          render: (h, parmas) => {
            let text = parmas.row.Remark;
            if (!text) {
              return "";
            }
            if (text.length > 10) {
              text = text.substr(0, 9);
            }
            return h(
              "div",
              {
                style: {
                  textAlign: "center"
                },
                on: {
                  click: () => {
                    this.showRemark(parmas.row);
                  }
                }
              },
              text
            );
          }
        },
        {
          title: " "
        }
      ],
      list: [],
      alreadyPaid: false,
      paymentMode: {
        zfb: 0,
        wy: 0,
        xj: 0,
        wx: 0
      },
      chargeTableHead: [
        {
          title: "序号",
          type: "index",
          align: "center",
          width: 80
        },
        {
          title: "支付方式",
          align: "center",
          key: "ID",
          render: (h, params) => {
            let that = this;
            return h("div", [
              h(
                "Select",
                {
                  props: {
                    value: that.chargeTableData[params.index].ID,
                    "label-in-value": true
                  },
                  on: {
                    "on-change": event => {
                      params.row.ID = event.value;
                      that.chargeTableData[params.index].PayModeID =
                        event.value;
                      that.myPaymentMode[params.index] = event.label;
                    }
                  }
                },
                that.volumeTypes.map(function(type) {
                  return h(
                    "Option",
                    {
                      props: {
                        value: type.ID
                      }
                    },
                    type.Name
                  );
                })
              )
            ]);
          }
        },
        {
          title: "总贴息费",
          align: "center",
          key: "HandlingFee",
          render: (h, params) => {
            let that = this;
            return h("div", [
              h("InputNumber", {
                props: {
                  placeholder: "请填写贴息费",
                  value: that.chargeTableData[params.index].HandlingFee
                    ? that.chargeTableData[params.index].HandlingFee
                    : 0,
                  max: 99999999999,
                  min: 0
                },
                on: {
                  //   input: value => {
                  //     that.chargeTableData[params.index].HandlingFee = value;
                  //   }
                  "on-change": e => {
                    params.row.HandlingFee = e;
                    that.chargeTableData[params.index] = params.row;
                  }
                }
              })
            ]);
          }
        },
        {
          title: "金额",
          align: "center",
          key: "Amount",
          render: (h, params) => {
            let that = this;
            return h("div", [
              h("InputNumber", {
                props: {
                  placeholder: "请填写金额",
                  value: that.chargeTableData[params.index].Amount,
                  max: 99999999999,
                  min: 0
                },
                style: {
                  width: "100%"
                },
                on: {
                  "on-change": e => {
                    params.row.Amount = e;
                    that.chargeTableData[params.index] = params.row;
                  }
                }
              })
            ]);
          }
        },
        {
          title: "赠送金额",
          align: "center",
          key: "Largess",
          render: (h, params) => {
            let that = this;
            return h("div", [
              h("InputNumber", {
                props: {
                  placeholder: "请填写赠送金额",
                  value: that.chargeTableData[params.index].Largess,
                  max: 99999999999,
                  min: 0
                },
                style: {
                  width: "100%"
                },
                on: {
                  "on-change": e => {
                    params.row.Largess = e;
                    that.chargeTableData[params.index] = params.row;
                  }
                }
              })
            ]);
          }
        },
        {
          title: "操作",
          align: "center",
          width: 120,
          render: (h, params) => {
            return h("div", [
              h("i", {
                class: {
                  "ivu-icon": true,
                  "ivu-icon-aaa-tianjia": true,
                  "icon-btn": true
                },
                on: {
                  click: () => {
                    this.addCharge(params.index);
                  }
                },
                style: {
                  marginRight: "20px"
                }
              }),
              h("i", {
                class: {
                  "ivu-icon": true,
                  "ivu-icon-aaa-icon-shanchu": true,
                  "icon-btn": true
                },
                on: {
                  click: () => {
                    this.delCharge(params.index);
                  }
                }
              })
            ]);
          }
        },
        {
          title: " ",
          width: 10
        }
      ],
      chargeTablePrintHead: [
        {
          title: "序号",
          type: "index",
          align: "center",
          width: 80
        },
        {
          title: "支付方式",
          align: "center",
          key: "PayModeName"
        },
              {
          title: "总贴息费",
          align: "center",
          key: "HandlingFee",
          render: (h, params) => {
            if (!params.row.HandlingFee) {
              return 0.0;
            }
            return h("div", {}, params.row.HandlingFee.toFixed(2));
          }
        },
        {
          title: "金额",
          align: "center",
          key: "Amount",
          render: (h, params) => {
            if (!params.row.Amount) {
              return 0.0;
            }
            return h("div", {}, params.row.Amount.toFixed(2));
          }
        },
        {
          title: "赠送金额",
          align: "center",
          key: "Largess",
          render: (h, params) => {
            if (!params.row.Largess) {
              return 0.0;
            }
            return h("div", {}, params.row.Largess.toFixed(2));
          }
        }
      ],
      chargeTableData: [],
      // 支付方式下拉框
      volumeTypes: [],
      // 我的支付方式 保存文字
      myPaymentMode: []
    };
  },
  computed: {
    ...mapState({
      userMes: state => state.app.userMes,
      tableRows: state => state.app.tableRows,
      authorList: state => state.app.authorList
    }),
    setTableHeight() {
      let that = this;
      return that.tableHeight;
    },
    getDate() {
      let date = new Date();
      return `${date.getFullYear()}/${date.getMonth() +
        1} ${date.getDate()}  ${date.toLocaleTimeString()}`;
    },
    setModalTitle() {
      let that = this;
      let mode = that.mode;
      let title = mode == 1 ? "新增" : "浏览";
      return title;
    }
  },
  methods: {
    showAddPoup() {
      let that = this;
      that.$refs.searchTelForm.resetFields();
      that.poupSearchTel = true;
      that.$nextTick(() => {
        that.$refs.searchTel.focus();
      });
    },
    setAuthor() {
      let that = this;
      let pageName = that.$route.name;
      let list = that.authorList[pageName];
      if (list) {
        for (let i of list) {
          if (i.Name === "浏览") {
            that.showLookUp = i.IsVisible;
          }
          if (i.Name === "增加") {
            that.showAdd = i.IsVisible;
          }
        }
      }
    },
    getDetail(row) {
      let that = this;
      that.rowID = row.ID;
    },
    showDetail() {
      let that = this;
      if (!that.rowID) {
        that.$Message.error("请选择一条订单");
        return false;
      }
      that.mode = 2;
      that.$store.commit("changeLoadingPage");
      api.getPrepayments(that.rowID).then(response => {
        if (response.error_code === "Success") {
          that.chargeTableData = response.data.PayDetails;
          that.Amount = 0;
          that.Largess = 0;
          that.HandlingFee = 0;
          that.myPaymentMode = [];
          for (let i of that.chargeTableData) {
            that.Amount += i.Amount;
            that.Largess += i.Largess;
            that.HandlingFee += i.HandlingFee;
            that.myPaymentMode.push(i.PayModeName);
          }
          let data = {
            EmployeeID: that.userMes.EmployeeID,
            CustomerPhone: response.data.CustomerPhone
          };
          that.formValidate.Came = response.data.Came ? "是" : "否";
          that.formValidate.Remark = response.data.Remark;
          that.setData(response.data);
          that.modal1 = true;
          that.$store.commit("changeLoadingPage");
          // 根据返回的客户电话号码查询客户信息
          // api.getCustomerByPhone(data).then((res) => {
          //     that.$store.commit('changeLoadingPage')
          //     if (res.error_code !== 'Success') {
          //         that.$Message.error(res.error_message)
          //         return false
          //     }
          //     that.formValidate.CustomerID = res.data.ID
          //     let a = res.data
          //     that.setData(a)
          //     that.modal1 = true
          // })
        } else {
          that.$store.commit("changeLoadingPage");
          that.$Message.error(response.error_message);
        }
      });
    },
    searchForm() {
      // 搜索表格
      let that = this;
      if (that.formItem.startDate && that.formItem.endDate) {
        // 两者同时存在
        if (Number(that.formItem.startDate) > Number(that.formItem.endDate)) {
          that.$Message.error("开始日期不得大于结束日期");
          return false;
        }
      }
      that.tablePage.page = 1;
      that.getList();
    },
    resetSearch() {
      let that = this;
      that.tablePage.page = 1;
      that.$refs.searchForm.resetFields();
      that.getList();
    },
    showDelDetailPoup(index) {
      let that = this;
      that.delDetailIndex = index;
      that.delPoup = true;
    },
    delSingleDetail() {
      // 删除单条收费详情
      let that = this;
      that.detailData.splice(that.delDetailIndex);
    },
    resetForm() {
      let that = this;
      that.$refs.formValidate1.resetFields();
      that.modal1 = false;
      that.btnjinyong = false;
    },
    addForm() {
      let that = this;
      that.uploading = true;
      that.btnjinyong = true;
      let data = {
        CustomerID: that.formValidate.CustomerID,
        Remark: that.formValidate.Remark,
        HandleBy: that.userMes.EmployeeID,
        Amount: 0,
        Largess: 0,
        HandlingFee: 0,
        Came: "",
        PayDetails: []
      };
      data.PayDetails = that.chargeTableData;
      data.Came = that.formValidate.Came > 0 ? true : false;
      for (let i of that.chargeTableData) {
        if (i.Amount <= 0) {
          that.$Message.error("充值金额必须大于0");
          that.btnjinyong = false;
          that.uploading = false;
          return false;
        }
        data.Amount += i.Amount;
        data.Largess += i.Largess;
        data.HandlingFee += i.HandlingFee;
      }
      that.Amount = data.Amount;
      that.Largess = data.Largess;
      that.HandlingFee = data.HandlingFee;
      api.addPrepayments(data).then(response => {
        that.uploading = false;
        if (response.error_code === "Success") {
          // that.$Message.success('提交成功')
          that.modal1 = false;
          that.printPage();
          that.resetSearch();
          setTimeout(() => {
            that.btnjinyong = false;
          }, 3000);
        } else {
          that.$Message.error(response.error_message);
          that.btnjinyong = false;
        }
      });
    },
    addCharge(index) {
      // 添加收款方式
      let that = this;
      let a = {
        PayModeID: "",
        Amount: 0,
        Largess: 0,
        HandlingFee: 0
      };
      that.chargeTableData.push(a);
    },
    delCharge(index) {
      // 删除收款方式
      let that = this;
      if (that.chargeTableData.length > 1) {
        that.chargeTableData.splice(index, 1);
      }
    },
    printPage() {
      let that = this;
      that.modal1 = false;
      setTimeout(() => {
        window.print();
      }, 500);
    },
    showRemark(row) {
      // 显示备注
      let that = this;
      that.$Modal.info({
        title: "备注详情",
        content: row.Remark
      });
    },
    searchCustomerTel() {
      let that = this;
      that.$refs.searchTelForm.validate(validate => {
        if (validate) {
          // 搜索...
          let data = {
            CustomerPhone: that.searchTel.tel,
            EmployeeID: that.userMes.EmployeeID
          };
          that.mode = 1;
          that.uploading = true;
          api.getCustomerByPhone(data).then(response => {
            let a = {
              Name: "",
              Age: "",
              Phone: data.CustomerPhone,
              CustomerSex: ""
            };
            that.uploading = false;
            if (response.error_code === "Success") {
              that.formValidate.CustomerID = response.data.ID;
              a = response.data;
              that.setData(a);
              that.poupSearchTel = false;
              that.chargeTableData = [];
              that.addCharge();
              that.modal1 = true;
            } else {
              that.$Message.error(response.error_message);
            }
          });
          that.$refs.searchTelForm.resetFields();
        } else {
          that.$Message.error("请输入用户的联系电话");
        }
      });
    },
    searchReset() {
      let that = this;
      that.$refs.searchTelForm.resetFields();
      that.poupSearchTel = false;
    },
    setData(res) {
      let that = this;
      that.formValidate.CustomerName = res.Name;
      that.formValidate.CustomerAge = res.Age;
      that.formValidate.CustomerPhone = res.Phone;
      that.formValidate.CustomerSex = res.Sex;
      that.formValidate.TMKEmployeeName = res.TMKEmployeeName;
      that.formValidate.SceneEmployeeName = res.SceneEmployeeName;
      that.formValidate.ArrearsBalance = Number(res.ArrearsBalance);
      that.formValidate.HandselBalance = Number(res.HandselBalance);
      that.formValidate.CashBalance = Number(res.CashBalance);
      that.formValidate.IntegrationBalance = Number(res.IntegrationBalance);
    },
    initTableHeight() {
      let that = this;
      that.tableHeight = document.getElementById("tableBox").offsetHeight;
      window.onresize = function() {
        that.tableHeight = document.getElementById("tableBox").offsetHeight;
      };
    },
    setPage() {
      let that = this;
      let teblePage = that.tablePage;
      teblePage.startNum = teblePage.pageNum * (teblePage.page - 1) + 1;
      let endPage = teblePage.page * teblePage.pageNum;
      teblePage.endNum =
        endPage > teblePage.allNum ? teblePage.allNum : endPage;
    },
    prevPage() {
      let that = this;
      if (that.tablePage.page <= 1) {
        that.$Message.error("已经是第一页");
        return false;
      }
      that.tablePage.page--;
      that.getList();
    },
    nextPage() {
      let that = this;
      if (that.tablePage.page >= that.tablePage.maxPageNum) {
        that.$Message.error("已经是最后一页");
        return false;
      }
      that.tablePage.page++;
      that.getList();
    },
    changePage() {
      let that = this;
      that.getList();
    },
    getList() {
      let that = this;
      let data = {
        EmployeeID: that.userMes.EmployeeID,
        startDate: that.formItem.startDate,
        endDate: that.formItem.endDate,
        CustomerName: that.formItem.userName,
        CustomerPhone: that.formItem.userTel,
        page: that.tablePage.page,
        size: that.tablePage.pageNum
      };
      // 转换日期
      if (data.startDate) {
        data.startDate = moment(data.startDate).format("YYYY-MM-DD");
      }
      if (data.endDate) {
        data.endDate = moment(data.endDate).format("YYYY-MM-DD");
      }
      if (data.CustomerPhone) {
        let regex = /^1\d{10}$/;
        if (!regex.test(data.CustomerPhone)) {
          that.$Message.error("电话号码格式有误");
          return false;
        }
      }
      that.tableLoading = true;
      api.prepaymentsGetList(data).then(response => {
        if (response.error_code === "Success") {
          let res = response.data;
          for (let i of res.list) {
            let phone = i.Phone;
            i.Phone =
              phone.substring(0, 3) + "****" + phone.substr(phone.length - 4);
          }
          that.list = res.list;
          that.tableLoading = false;
          that.$set(that.tablePage, "page", res.page);
          that.$set(that.tablePage, "allNum", res.total);
          that.tablePage.maxPageNum = res.totalPage;
          that.setPage();
        } else {
          that.$Message.error(response.error_message);
        }
      });
    },
    exportTable() {
      let that = this;
      that.$refs.mainTable.exportCsv({
        filename: `${new Date().getTime()}${document.title}`
      });
    },
    getZffsList() {
      // 获取支付方式
      let that = this;
      let data = {
        // EmployeeID: that.userMes.EmployeeID
        storeId: that.userMes.StoreID
      };
      api.getCashPayModes(data).then(response => {
        if (response.error_code === "Success") {
          let res = response.data;
          that.volumeTypes = res;
        } else {
          that.$Message.error(response.error_message);
        }
      });
    }
  },
  mounted() {
    let that = this;
    that.$nextTick(() => {
      that.initTableHeight();
      that.getList();
      that.getZffsList();
      that.setAuthor();
    });
  }
};
</script>