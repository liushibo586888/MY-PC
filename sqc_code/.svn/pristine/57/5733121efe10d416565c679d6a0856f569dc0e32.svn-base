<template>
    <div class="qdxd-container container">
        <div class="search-box">
            <Form :model="formItem" :label-width="0" inline @submit.native.prevent ref="searchForm" class="search-form">
                <row :gutter="20">
                    <i-col span="3">
                        <formItem prop="startDate">
                            <DatePicker type="date" placeholder="开始日期" v-model="formItem.startDate"></DatePicker>
                        </formItem>
                    </i-col>
                    <i-col span="3">
                        <formItem prop="endDate">
                            <DatePicker type="date" placeholder="结束日期" v-model="formItem.endDate"></DatePicker>
                        </formItem>
                    </i-col>
                    <i-col span="3">
                        <FormItem prop="uerTel">
                            <Input v-model="formItem.uerTel" placeholder="电话"></Input>
                        </FormItem>
                    </i-col>
                    <i-col span="3">
                        <FormItem prop="userName">
                            <Input v-model="formItem.userName" placeholder="姓名"></Input>
                        </FormItem>
                    </i-col>
                    <i-col span="12">
                        <formItem class="btn-box">
                            <i-button type="primary" class="btn btn-search" @click="searchForm">搜索</i-button>
                            <i-button type="warning" class="btn btn-reset" @click="resetSearch">重置</i-button>
                            <i-button type="primary" class="btn btn-big btn-purple">去掉重复客户</i-button>
                            <i-button type="primary" class="btn btn-add" @click="poupSearchTel = true">添加</i-button>
                        </formItem>
                    </i-col>
                </row>
            </Form>
        </div>
        <div class="table-box" id="tableBox">
            <Table :columns="columns1" :data="list" highlight-row :height="setTableHeight" ref="mainTable"></Table>
        </div>
        <div class="bottom-box">
            <i-button class="btn-export" @click="exportTable" type="default">导出</i-button>
            <div class="row-box">{{tablePage.startNum}} - {{tablePage.endNum}}条/共{{tablePage.allNum}}条</div>
            <i-button class="btn btn-prev" type="ghost">上一页</i-button>
            <i-button class="btn btn-next" type="primary">下一页</i-button>
            <div class="page-box">
                <p>前往</p>
                 <Input-number :max="tablePage.maxPageNum" :min="1" :value="1"></Input-number>
                <p>页</p>
            </div>
        </div>
        <!-- 查询电话号码弹窗 -->
        <Modal :mask-closable="false"  v-model="poupSearchTel" class="dialog">
            <div slot='header' class="header">
                请输入电话号码
            </div>
            <Form ref="searchTelForm" :model="testData" :label-width="120" @submit.native.prevent class="form" >
                <FormItem label="性别：" prop="CustomerSex" :rules="testRule.CustomerSex">
                    <Select v-model="testData.CustomerSex">
                        <Option value="">请选择</Option>
                        <Option value="male">男</Option>
                        <Option value="female">女</Option>
                    </Select>
                </FormItem>
            </Form>
            <div slot='footer' class="footer">
                <i-button type="primary" class="btn" @click="searchCustomerTel">确定</i-button>
                <i-button type="warning" class="btn" @click="searchReset">取消</i-button>
            </div>
        </Modal>
        <!-- 弹窗 -->
        <Modal :mask-closable="false"  v-model="modal1" class="dialog" :width="1000">
            <div slot='header' class="header">
                新增
            </div>
            <Form ref="formValidate1" :model="formValidate" :label-width="120" @submit.native.prevent class="form" >
                <row type="flex" justify="space-between">
                    <i-col span="11">
                        <FormItem prop="CustomerName" label="客户姓名：" :rules="formValidateRule.CustomerName">
                            <Input v-model="formValidate.CustomerName" placeholder="姓名"></Input>
                        </FormItem>
                    </i-col>
                    <i-col span="11">
                        <FormItem label="电话：" prop="CustomerPhone" :rules="formValidateRule.CustomerPhone">
                            <Input v-model="formValidate.CustomerPhone" placeholder="电话"></Input>
                        </FormItem>
                    </i-col>
                </row>
                <row type="flex" justify="space-between">
                    <i-col span="11">
                        <FormItem label="年龄：" prop="CustomerAge">
                            <Input v-model="formValidate.CustomerAge" placeholder="年龄"></Input>
                        </FormItem>
                    </i-col>
                    <i-col span="11">
                        <FormItem label="性别：" prop="CustomerSex">
                            <Select v-model="formValidate.CustomerSex">
                                <Option value="male">男</Option>
                                <Option value="female">女</Option>
                            </Select>
                        </FormItem>
                    </i-col>
                </row>
                <row type="flex" justify="space-between">
                    <i-col span="24">
                        <FormItem label="咨询项目：" prop="zxxm" :rules="formValidateRule.zxxm">
                            <Select v-model="formValidate.zxxm" placeholder="请选择">
                                <Option :value="item.value" v-for="(item, index) in zxxmList" :key="index">{{item.label}}</Option>
                            </Select>
                        </FormItem>
                    </i-col>
                </row>
                <row type="flex" justify="space-between">
                    <i-col span="24">
                        <FormItem label="咨询内容：" prop="ConsultContent" :rules="formValidateRule.ConsultContent">
                            <Input v-model="formValidate.ConsultContent" placeholder="咨询内容" type="textarea"></Input>
                        </FormItem>
                    </i-col>
                </row>
                <row type="flex" justify="space-between">
                    <i-col span="11">
                        <FormItem label="来源渠道：" prop="ChannelID" :rules="formValidateRule.ChannelID">
                            <Select v-model="formValidate.ChannelID" placeholder="请选择">
                                <Option :value="item.value" v-for="(item, index) in lyqdList" :key="index">{{item.label}}</Option>
                            </Select>
                        </FormItem>
                    </i-col>
                    <i-col span="11">
                        <FormItem label="网络来源：" prop="NetSourceID" :rules="formValidateRule.NetSourceID">
                            <Select v-model="formValidate.NetSourceID" placeholder="请选择">
                                <Option :value="item.value" v-for="(item, index) in wllyList" :key="index">{{item.label}}</Option>
                            </Select>
                        </FormItem>
                    </i-col>
                </row>
                <row type="flex" justify="space-between">
                    <i-col span="11">
                        <FormItem label="预约日期：" prop="ReserveDate"  :rules="formValidateRule.ReserveDate">
                            <DatePicker type="date" placeholder="预约日期" v-model="formValidate.ReserveDate" style="width:100%;" :editable="false"></DatePicker>
                        </FormItem>
                    </i-col>
                    <i-col span="11">
                        <FormItem label="预约门店：" prop="ReserveStoreID" v-if="formValidate.ReserveDate">
                            <Select v-model="formValidate.ReserveStoreID" :filterable="true" @on-change="chooseYymd">
                                <Option value="qc">庆春店</Option>
                                <Option value="wlm">武林门</Option>
                            </Select>
                        </FormItem>
                    </i-col>
                </row>
            </Form>
            <div slot="footer" class="footer">
                <Button type="primary" class="btn" @click="addForm">保存</Button>
                <Button type="warning" class="btn" @click="resetForm">取消</Button>
            </div>
        </Modal>
    </div>
</template>
<script>
    import api from '@/api/index.js'
    import storejs from 'storejs'
    import { mapState } from 'vuex'
    export default{
        data () {
            const validateTel = (rule, value, callback) => {
                let reg = /^1\d{10}$/
                console.log('reg.test(value)', reg.test(value))
                if (value === '') {
                    callback(new Error('手机号不得为空'));
                }else if(!reg.test(value)){
                    callback(new Error('请输入正确的手机号'));
                }else {
                    callback()
                }
            }
            return {
                testData: {
                    CustomerSex: 'male'
                },
                testRule: {
                    CustomerSex: {required: true, message: '咨询项目不得为空', trigger: 'blur'}
                },
                tablePage: {
                    page: 1,
                    pageNum: 10,
                    maxPageNum: 100,
                    allNum: 199,
                    startNum: 0,
                    endNum: 0
                },
                tableHeight: 40,
                poupSearchTel: false,
                searchTel: {
                    tel: ''
                },
                searchRule: {
                    tel: {required: true, message: '请输入正确的手机号码', trigger: 'blur', type: 'number', validator: validateTel}
                },
                modal1: false,
                formValidate: {
                    CustomerID: '',
                    CustomerName: '',
                    CustomerPhone: '',
                    CustomerAge: '',
                    CustomerSex: '',
                    ReserveStoreID: '',
                    ReserveDate: '',
                    zxxm: '',
                    ConsultContent: '',
                    ChannelID: '',
                    NetSourceID: ''
                },
                formValidateRule: {
                    CustomerName: {required: true, message: '姓名不得为空', trigger: 'blur'},
                    CustomerPhone: {required: true, message: '电话不得为空', trigger: 'blur', validator: validateTel},
                    zxxm: {required: true, message: '咨询项目不得为空', trigger: 'blur'},
                    ConsultContent: {required: true, message: '咨询内容不得为空', trigger: 'blur'},
                    ChannelID: {required: true, message: '来源渠道不得为空', trigger: 'blur'},
                    NetSourceID: {required: true, message: '网络来源不得为空', trigger: 'blur'}
                },
                formItem: {
                    startDate: '',
                    endDate: '',
                    uerTel: '',
                    userName: ''
                },
                columns1: [
                    {
                        title: '序号',
                        key: 'order',
                        align: 'center',
                        width: '80'
                    }, {
                        title: '登记日期',
                        key: 'ArrivalDate ',
                        align: 'center',
                        width: '180'
                    }, {
                        title: '客户状态',
                        key: 'status',
                        align: 'center',
                        width: '180'
                    }, {
                        title: '客户姓名',
                        key: 'CustomerName',
                        align: 'center',
                        width: '180'
                    }, {
                        title: '性别',
                        key: 'CustomerSex',
                        align: 'center',
                        width: '80'
                    }, {
                        title: '年龄',
                        key: 'CustomerAge',
                        align: 'center',
                        width: '80'
                    }, {
                        title: '电话',
                        key: 'CustomerPhone',
                        align: 'center',
                        width: '180'
                    }, {
                        title: '网络来源',
                        key: 'NetSource',
                        align: 'center',
                        width: '180'
                    }, {
                        title: '所属门店',
                        key: 'BookingStore',
                        align: 'center',
                        width: '180'
                    }, {
                        title: '预约到店日期',
                        key: 'ArrivalDate',
                        align: 'center',
                        width: '180'
                    }, {
                        title: '咨询项目',
                        key: 'zxxm',
                        align: 'center',
                        width: '180'
                    }, {
                        title: '咨询内容',
                        key: 'zxnr',
                        align: 'center',
                        width: '180',
                        ellipsis: true
                    }, {
                        title: '咨询人',
                        key: 'zxr',
                        align: 'center',
                        width: '180'
                    }, {
                        title: '',
                        key: 'null',
                        align: 'center'
                    }
                ],
                list: [],
                wllyList: [
                    {
                        value: 1,
                        label: '网络来源1'
                    }, {
                        value: 2,
                        label: '网络来源2'
                    }, {
                        value: 3,
                        label: '网络来源3'
                    }
                ],
                lyqdList: [
                    {
                        value: 1,
                        label: '来源渠道1'
                    }, {
                        value: 2,
                        label: '来源渠道2'
                    }, {
                        value: 3,
                        label: '来源渠道3'
                    }
                ],
                zxxmList: [
                    {
                        value: 1,
                        label: '咨询项目1'
                    }, {
                        value: 2,
                        label: '咨询项目2'
                    }, {
                        value: 3,
                        label: '咨询项目3'
                    }
                ]
            }
        },
        computed: {
            ...mapState({
                userMes: state => state.app.userMes
            }),
            setTableHeight () {
                let that = this
                return that.tableHeight
            }
        },
        methods: {
            searchForm () {
                // 搜索表格
                let that = this
                if (that.formItem.startDate && that.formItem.endDate) {
                    // 两者同时存在
                    if (Number(that.formItem.startDate) > Number(that.formItem.endDate)) {
                        that.$Message.error('开始日期不得大于结束日期')
                        return false
                    }
                }
            },
            chooseYymd () {
                let that = this
            },
            resetSearch () {
                let that = this
                that.$refs.searchForm.resetFields()
            },
            resetForm () {
                let that = this
                that.$refs.formValidate1.resetFields()
                that.modal1 = false
            },
            addForm () {
                let that = this
                console.log(that.formValidate)
                that.$refs.formValidate1.validate((validate) => {
                    if (validate) {
                        api.onlineOrders(that.formValidate).then((response) => {
                            if (response.error_code === 'Success') {
                                that.$Message.success('添加成功')
                                that.$refs.formValidate1.resetFields()
                                that.modal1 = false
                            } else {
                                this.$Message.error(response.error_message)
                            }
                        })
                    } else {
                        // this.$Message.error('有必填项为空')
                    }
                })
            },
            searchCustomerTel () {
                let that = this
                that.$refs.searchTelForm.validate((validate) => {
                    if (validate) {
                        // 搜索...
                        console.log('searchTel', that.searchTel)
                        that.poupSearchTel = false
                        that.modal1 = true
                        that.$refs.searchTelForm.resetFields()
                        return false
                        let data = {
                            "CustomerPhone": that.searchTel.tel,
                            "EmployeeID": that.userMes.EmployeeID
                        }
                        api.getCustomerByPhone().then((response) => {
                            if (response.error_code === 'Success') {
                                that.poupSearchTel = false
                                that.formValidate.CustomerID = response.data.ID
                                that.setData(response.data)
                                that.modal1 = true
                            } else {
                                that.$Message.error(response.error_message)
                            }
                        })
                        that.$refs.searchTelForm.resetFields()
                    } else {
                        that.$Message.error('请输入用户的联系电话')
                    }
                })
            },
            setData (res) {
                let that = this
                that.formValidate.CustomerName = res.Name
                that.formValidate.CustomerAge = res.Age
                that.formValidate.CustomerPhone = res.Phone
                that.formValidate.CustomerSex = res.Sex
            },
            searchReset () {
                let that = this
                that.$refs.searchTelForm.resetFields()
                that.poupSearchTel = false
            },
            initTableHeight () {
                let that = this
                that.tableHeight = document.getElementById('tableBox').offsetHeight
                window.onresize = function() {
                    that.tableHeight = document.getElementById('tableBox').offsetHeight
                }
            },
            setPage () {
                let that = this
                let teblePage = that.tablePage
                teblePage.startNum = teblePage.pageNum * (teblePage.page - 1) + 1
                let endPage = teblePage.page * teblePage.pageNum
                teblePage.endNum = endPage > teblePage.allNum ? teblePage.allNum : endPage
            },
            getList () {
                let that = this
                let data = {
                    EmployeeID: that.userMes.EmployeeID,
                    startDate: that.formItem.startDate,
                    endDate: that.formItem.endDate,
                    name: that.formItem.userName,
                    phone: that.formItem.userTel,
                    page: that.tablePage.page,
                    size: that.tablePage.pageNum
                }
                api.onlineOrdersGetList(data).then((response) => {
                    if (response.error_code === 'Success') {
                        let res = response.data
                        that.list = res.list
                        that.tableLoading = false
                        that.page = res.page
                        that.tablePage.pageNum = res.size
                        that.tablePage.allNum = res.total
                        that.setPage()
                    } else {
                        that.$Message.error(response.error_message)
                    }
                })
            },
            exportTable () {
                let that = this
                that.$refs.mainTable.exportCsv({
                    filename: `${new Date().getTime()}${document.title}`
                })
            }
        },
        mounted () {
            let that = this
            that.$nextTick(() => {
                that.initTableHeight()
                that.getList()
            })
        }
    }
</script>
<style>
</style>

