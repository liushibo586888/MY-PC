<style lang="less">
    @import './styles/menu.less';
</style>

<template>
    <div :style="{background: bgColor}" class="ivu-shrinkable-menu">
        <slot name="top"></slot>
        <sidebar-menu
            v-show="!shrink"
            :menu-theme="theme"
            :menu-list="menuList"
            :open-names="openNames"
            :accordion="true"
            @on-change="handleChange"
        ></sidebar-menu>
        <sidebar-menu-shrink
            v-show="shrink"
            :menu-theme="theme"
            :menu-list="menuList"
            :icon-color="shrinkIconColor"
            @on-change="handleChange"
        ></sidebar-menu-shrink>
    </div>
</template>

<script>
import sidebarMenu from './components/sidebarMenu.vue';
import sidebarMenuShrink from './components/sidebarMenuShrink.vue';
import util from '@/libs/util';
export default {
    name: 'shrinkableMenu',
    components: {
        sidebarMenu,
        sidebarMenuShrink
    },
    props: {
        shrink: {
            type: Boolean,
            default: false
        },
        menuList: {
            type: Array,
            required: true
        },
        theme: {
            type: String,
            default: 'dark',
            validator (val) {
                return util.oneOf(val, ['dark', 'light']);
            }
        },
        beforePush: {
            type: Function
        },
        openNames: {
            type: Array
        }
    },
    computed: {
        bgColor () {
            return this.theme === 'dark' ? '#2c2d2b' : '#fff';
        },
        shrinkIconColor () {
            return this.theme === 'dark' ? '#fff' : '#2c2d2b';
        }
    },
    methods: {
        handleChange (name) {
            let willpush = true;
            if (this.beforePush !== undefined) {
                if (!this.beforePush(name)) {
                    willpush = false;
                }
            }
            if (willpush) {
                this.$router.push({
                    name: name
                });
            }
            this.$emit('on-change', name);
        }
    }
};
</script>
<style>
    .ivu-icon{
        font-size: 22px;
    }
    .main .layout-text{
        font-size: 14px;
    }
    .ivu-menu-dark.ivu-menu-vertical .ivu-menu-submenu .ivu-menu-item-active,
    .ivu-menu-dark.ivu-menu-vertical .ivu-menu-submenu .ivu-menu-item-active:hover{
        color: #fff;
        /*background-color: #30312f !important;*/
    }
    .ivu-menu-dark.ivu-menu-vertical .ivu-menu-submenu-title:hover{
        background-color: #30312f !important;
    }
    .ivu-menu-dark.ivu-menu-vertical .ivu-menu-opened .ivu-menu-submenu-title,
    .ivu-menu{
        background-color: #2c2d2b;
    }
    .ivu-menu-dark.ivu-menu-vertical .ivu-menu-submenu-title:after,
    .ivu-menu .ivu-menu-item:after {
        position: absolute;
        content:"";
        width: 100%;
        height: 1px;
        background-color: rgba(255,255,255,.04);
        bottom: 0;
        left: 0;
    }
    .ivu-menu-submenu{
        position: relative;
    }
    .ivu-menu-submenu>.ivu-menu-submenu-title>i{
        font-size: 18px;
    }
    .ivu-menu.ivu-menu-dark.ivu-menu-vertical>.ivu-menu-item-active:before,
    .ivu-menu-dark.ivu-menu-vertical .ivu-menu-item-active .ivu-menu-submenu-title:before{
        position: absolute;
        content:"";
        width: 3px;
        height: 60%;
        top: 20%;
        background: #79aa49;
        left: 0;
    }
    .ivu-menu-submenu> .ivu-menu{
        background: #343534;
    }
    .ivu-menu-dark.ivu-menu-vertical .ivu-menu-item-active:not(.ivu-menu-submenu),
    .ivu-menu-dark.ivu-menu-vertical .ivu-menu-submenu-title-active:not(.ivu-menu-submenu){
        border-right: 0;
        color: #fff;
    }
    .ivu-menu-vertical .ivu-menu-submenu-title-icon{
        top: 0;
    }
</style>
