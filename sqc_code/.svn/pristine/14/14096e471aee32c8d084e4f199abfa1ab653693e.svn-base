<template>
  <div class="yjjcz-container container">
    <div class="search-box">
      <Form :model="formItem" :label-width="0" inline @submit.native.prevent ref="searchForm" class="search-form">
        <row :gutter="20">
          <i-col span="3">
            <formItem prop="StartDate">
              <DatePicker class="DatePicker_time" type="date" :options="options1" placeholder="开始日期" v-model="formItem.StartDate" :clearable="false" :editable="false"></DatePicker>
            </formItem>
          </i-col>
          <i-col span="3">
            <formItem prop="EndDate">
              <DatePicker class="DatePicker_time" type="date" :options="options1"  placeholder="结束日期" v-model="formItem.EndDate" :clearable="false" :editable="false"></DatePicker>
            </formItem>
          </i-col>
          <i-col span="3">
            <FormItem prop="store">
              <Select v-model="formItem.store" placeholder="门店" :filterable="true">
                <!-- <Option value="all" @click.native="choose()">所有</Option> -->
                <Option v-for="(item,index) in storeList" :value="item.Name" :key="item.ID" @click.native="choose(item.Name,item.ID,index)">{{ item.Name }}</Option>
              </Select>
            </FormItem>
          </i-col>
          <i-col span="15">
            <formItem class="btn-box">
              <Button type="primary" class="btn btn-search" @click="searchForm">搜索</Button>
              <Button type="warning" class="btn btn-reset" @click="resetSearch">重置</Button> 
            </formItem>
          </i-col>
        </row>
      </Form>
    </div>
    <div class="table-box" id="tableBox">
      <Table :columns="columns1" :data="list" highlight-row :height="tableHeight" ref="mainTable" @on-row-dblclick='doubleClick'></Table>
      <tableLoadingPage :loading="tableLoading"></tableLoadingPage>
    </div>
    <div class="bottom-box">
      <i-button class="btn" @click="exportTable" type="default">导出</i-button>
      <i-button class="btn" @click="printPage()" type="primary">打印</i-button>
      <!-- <div class="row-box">{{tablePage.startNum}} - {{tablePage.endNum}}条/共{{tablePage.allNum}}条</div>
            <i-button class="btn btn-prev" type="ghost">上一页</i-button>
            <i-button class="btn btn-next" type="primary">下一页</i-button>
            <div class="page-box">
                <p>前往</p>
                 <Input-number :max="tablePage.maxPageNum" :min="1" :value="1"></Input-number>
                <p>页</p>
            </div> -->
    </div>
    <Modal :mask-closable="false" v-model="modal1" :styles="{top: '20px'}" width='1200' class="dialog" ok-text='关闭' cancel-text=''>
      <div slot='header' class="header not-print">
       护理师: 
       <span class="spanBeacname">
       {{BeauticianName}} 
       </span>
       业绩详情
      </div>
      <Tabs v-model="tabValue" @on-click='tabClick'>  
        <TabPane label="产品业绩" name="0">
         <div class="table-box" id="tableBox">
            <Table :columns="columnsTab1" :data="cwyjDetailData" :height="tableHeight"></Table> 
          </div>
        </TabPane>
        <TabPane label="产品退费" name="1">
         <div class="table-box" id="tableBox">
            <Table :columns="columnsTab1" :data="cwyjDetailData" :height="tableHeight"></Table>
            
          </div>
        </TabPane>
        <TabPane label="产品回款" name="2">
         <div class="table-box" id="tableBox">
            <Table :columns="columnsTab1" :data="cwyjDetailData" :height="tableHeight"></Table>
             
          </div>
        </TabPane>
        <TabPane label="预交金" name="3">
         <div class="table-box" id="tableBox">
            <Table :columns="columnsTab2" :data="cwyjDetailData" :height="tableHeight"></Table>
             
          </div>
        </TabPane>
        <TabPane label="退预交金" name="4">
         <div class="table-box" id="tableBox">
            <Table :columns="columnsTab2" :data="cwyjDetailData" :height="tableHeight"></Table>
             
          </div>
        </TabPane>

       <TabPane label="手工数" name="5">
         <div class="table-box" id="tableBox">
            <Table :columns="columnsTab3" :data="cwyjDetailData" :height="tableHeight"></Table>   
          </div>
        </TabPane>

      </Tabs>
      <tableLoadingPage :loading="beauticianloading"></tableLoadingPage>
    </Modal>
 
    <!-- 客户被那些护理师执行过 数据明细 -->
<Modal :mask-closable="false" v-model="DetailModel" :styles="{top: '20px'}" width='1200' class="dialog" ok-text='关闭' cancel-text=''>
      <div slot='header' class="header not-print">
       客户: 
       <span class="spanBeacname">
       {{CustName}}
       </span>
       的执行详情
      </div>
      <Tabs>  
        <TabPane label="护理师执行明细" name="0">
         <div class="table-box" id="tableBox">
            <Table :columns="columnsDetail" :data="ExcuteDetail" :height="tableHeight"></Table>
          </div>
        </TabPane> 
      </Tabs>
    </Modal>

     
    <!-- 打印 -->
    <div class="print-box">
      <div class="title">护理师手工统计</div>
      <Row>
        <i-col span="24">
          <span class="print-name">门店：</span>
          <span class="print-key">{{formItem.store}}</span>
        </i-col>
      </Row>
      <Row v-if="formItem.StartDate">
        <i-col span="24">
          <span class="print-key" v-if="formItem.StartDate">{{formItem.StartDate | formatDate}}</span>
          <span class="print-key" v-if="formItem.StartDate && formItem.EndDate">至</span>
          <span class="print-key" v-if="formItem.EndDate">{{formItem.EndDate | formatDate}}</span>
        </i-col>
      </Row>
      <div class="line"></div>
      <Row>
        <i-col span="8">护理师</i-col>
        <i-col span="8">门店</i-col>
        <i-col span="8">次数</i-col>
      </Row>
      <Row v-for="(item, index) in list" :key="index">
        <i-col span="8">{{item.BeauticianName}}</i-col>
        <i-col span="8">{{item.StoreName}}</i-col>
        <i-col span="8">{{item.Num}}</i-col>
      </Row>
      <div class="line"></div>
      <div class="bottom">{{userMes.BottomDescription}}</div>
    </div>
  </div>
</template>
<script>
// import { getCashierStatement } from '@/api/index.js'
import { mapState } from "vuex";
import api from "@/api/index.js";
import moment from "moment";
import echartsCommon from "@/api/Common.js";
export default {
  data() {
    return {
      columnsTab1: [
        {
          title: "编号",
          key: "consumptionDetailsID"
        },
        {
          title: "开单日期",
          key: "infoDate",
           render: (h, parmas) => {
            return echartsCommon.DATEsfm(h,parmas.row.infoDate)
          }
        },
        {
          title: "收费日期",
          key: "Date1",
           render: (h, parmas) => {
            return echartsCommon.DATEsfm(h,parmas.row.Date1)
          }
        }, 
        {
          title: "产品名称",
          key: "GoodsName"
        },
        {
          title: "金额",
          key: "Amount"
        },
        {
          title: "支付方式",
          key: "PayName"
        },
        {
          title: "客户名称",
          key: "Name"
        },
        {
          title: "门店",
          key: "StoreName"
        }
      ], 
       columnsTab2: [  
        {
          title: "收费日期",
          key: "Date1",
           render: (h, parmas) => {
            return echartsCommon.DATEsfm(h,parmas.row.Date1)
          }
        },  
        {
          title: "金额",
          key: "Amount"
        },
        {
          title: "支付方式",
          key: "PayName"
        },
        {
          title: "客户名称",
          key: "Name"
        },
        {
          title: "门店",
          key: "StoreName"
        }
       ], 
       columnsTab3: [  
        {
          title: "编号",
          key: "Number"
        },
        // {
        //   title: "到店日期",
        //   key: "infoDate",
        //    render: (h, parmas) => {
        //     return echartsCommon.DATEsfm(h,parmas.row.infoDate)
        //   }
        // },  
        {
          title: "执行日期",
          key: "ExtDT"
        }, 
        {
          title: "客户名称",
          key: "Name"
        }, 
        {
          title: "门店",
          key: "StoreName"
        },
        {
          title:"备注",
          key:"Num",
          render:(h, parmas)=>{ 
            return h("a", { 
              on:{
                click:()=>{
                   var startDate = null,endDate=null,CustomerID=null; 
                  let data = {
                    // startDate:moment(this.formItem.StartDate).format("YYYY-MM-DD"),
                    // endDate:moment(this.formItem.EndDate).format("YYYY-MM-DD"), 
                    startDate:parmas.row.ExtDT,
                    endDate:parmas.row.ExtDT,
                    CustomerID:parmas.row.CustomerID
                  }; 
                  //console.log(parmas.row.CustomerID); 
                 this.CustName=parmas.row.Name;
                 this.DetailModel = true; 
                 this.QueryBeactionExtCust(data);
                }
              }
            }, "客户被  "+parmas.row.Num+"  个护理师执行过(查看)"); 
          }
        }
      ], 
      //客户被执行明细
        columnsDetail: [  
       {
          title: "执行日期",
          key: "Date",
           render: (h, parmas) => {
            return echartsCommon.DATEsfm(h,parmas.row.Date)
          }
        },
        {
          title: "创建执行记录日期",
          key: "Date1",
           render: (h, parmas) => {
            return echartsCommon.DATEsfm(h,parmas.row.Date1)
          }
        },
        // {
        //   title: "到店日期",
        //   key: "infoDate",
        //    render: (h, parmas) => {
        //     return echartsCommon.DATEsfm(h,parmas.row.infoDate)
        //   }
        // },   
        {
          title: "项目名称",
          key: "ItemName"
        }, 
        {
          title: "客户名称",
          key: "Name"
        }, 
        {
           title:"护理师",
           key:"EnName"
        },
        {
          title: "门店",
          key: "StoreName"
        }
      ],   
      cwyjDetailData: [],
      ExcuteDetail:[], //客户被执行明细数据
      tabValue:'0',
      modal1: false,
      DetailModel:false,
      beauticianloading:true, //显示加载中 
      //时间回到今天
      options1: echartsCommon.shortcuts(), 
      //护理师id
      BeauticianID:null, 
      //护理师名称
      BeauticianName:null,
      //客户名称
      CustName:null,
      // -----
      tableLoading: true,
      tablePage: {
        page: 1,
        pageNum: 10,
        maxPageNum: 100,
        allNum: 199,
        startNum: 0,
        endNum: 0
      },
      tableHeight: 200,
      formItem: {
        StartDate: new Date(),
        EndDate: new Date(),
        store: "",
        // EmployeeID: "",
        StoreID: ""
      },
      columns1: [
        {
          title: "护理师",
          key: "BeauticianName",
          align: "center"
        },
        {
          title: "门店",
          key: "StoreName",
          align: "center"
        },
        {
          title: "次数",
          key: "Num",
          align: "center",
          render: (h, parmas) => {
            let Num = Number(parmas.row.Num);
            return h("div", {}, Num);
          }
        },
        {
          title: "业绩",
          key: "ConsumptionTotal",
          align: "center",
          render: (h, params) => {
            return h("div", {}, params.row.ConsumptionTotal.toFixed(2));
          }
        },
        {
          title: "预交金业绩",
          key: "RefundMoneyTotal",
          align: "center",
          render: (h, params) => {
            return h("div", {}, params.row.RefundMoneyTotal.toFixed(2));
          }
        },
        {
          title: "家居业绩",
          key: "AllTotal",
          align: "center",
          render: (h, params) => {
            return h("div", {}, params.row.AllTotal.toFixed(2));
          }
        }
      ],
      list: [],
      storeList: []
    };
  },
  computed: {
    ...mapState({
      authorList: state => state.app.authorList,
      userMes: state => state.app.userMes
    }),
    setTableHeight() {
      let that = this;
      return that.tableHeight;
    }
  },
  methods: { 
    tabClick(name) {     
        this.cwyjDetailData=[];
      var startDate = null,endDate=null,storeID=null,beauticianID=null,type=null; 
      let param = {
        startDate:moment(this.formItem.StartDate).format("YYYY-MM-DD"),
        endDate:moment(this.formItem.EndDate).format("YYYY-MM-DD"),
        storeID:this.formItem.StoreID,
        beauticianID:this.BeauticianID,
        type:'0'
      }; 
      switch(name)
      {
         case '0':   
          param.type=name;
          this.QueryBeauticianItemDetail(param); 
          break; 
         case '1':    
           param.type=name;
          this.QueryBeauticianItemDetail(param);
          break; 
         case '2':   
          param.type=name;
          this.QueryBeauticianItemDetail(param);
          break;  
         case '3': 
          param.type=name;
          this.QueryBeauticianItemDetail(param);
          break; 
         case '4':  
          param.type=name;
          this.QueryBeauticianItemDetail(param);
         break;  
         case'5':  
          param.type=name; 
          this.QueryBeauticianItemDetail(param);
         break;
      } 
    },
    doubleClick(row) { 
      let that = this;   
      that.tabValue='0';
      that.modal1 = true;
      this.BeauticianID=row.BeauticianID;
      this.BeauticianName = row.BeauticianName;
     this.formItem.StoreID = row.StoreID; 
     that.tabClick(that.tabValue); 
    },
    QueryBeauticianItemDetail(param)
    {   
        this.beauticianloading = true; 
        api.QueryBeauticianItemDetail(param).then(res=>{   
          this.beauticianloading = false; 
           if(res.error_code=='Success')
           {   
                this.cwyjDetailData=res.data;
           }
           else
           {
             that.$Message.info({
               content:res.error_message,
               duration:10
             });
           } 
        }); 
       
    },
    //查询客户被执行的明细
    QueryBeactionExtCust(param)
     {
         api.QueryBeactionExtCust(param).then(res=>{  
           if(res.error_code=='Success')
           {
                this.ExcuteDetail=res.data;
           }
           else
           {
             that.$Message.info({
               content:res.error_message,
               duration:10
             });
           }
        }); 
     },
    setData(res) {},
    resetSearch() {
      // 重置搜索
      let that = this;
      that.$refs.searchForm.resetFields();
      that.getList();
    },
    searchForm() {
      // 搜索表格
      let that = this;
      //判断两个时间段大小
      echartsCommon.message = that.$Message;
      if (
        echartsCommon.ContrastTime(
          that.formItem.StartDate,
          that.formItem.EndDate
        )
      ) {
        that.tableLoading = true;
        that.getList();
      }
      //------------------
    },
    initTableHeight() {
      let that = this;
      that.tableHeight = document.getElementById("tableBox").offsetHeight;
      window.onresize = function() {
        that.tableHeight = document.getElementById("tableBox").offsetHeight;
      };
    },
    setPage() {
      let that = this;
      let teblePage = that.tablePage;
      teblePage.startNum = teblePage.pageNum * (teblePage.page - 1) + 1;
      let endPage = teblePage.page * teblePage.pageNum;
      teblePage.endNum =
        endPage > teblePage.allNum ? teblePage.allNum : endPage;
    },
    getList() {
      setTimeout(() => {
        let that = this;
        let userMessage = JSON.parse(localStorage.userMessage);
        let data = {
          StartDate: that.formItem.StartDate,
          EndDate: that.formItem.EndDate,
          StoreID: that.formItem.StoreID
        };
        if (data.StartDate) {
          data.StartDate = moment(data.StartDate).format("YYYY-MM-DD");
        }
        if (data.EndDate) {
          data.EndDate = moment(data.EndDate).format("YYYY-MM-DD");
        }
        api.getBeauticianAchievements(data).then(response => {
          if (response.error_code === "Success") {
            that.tableLoading = false;
            that.list = response.data;
            // let a = {
            //   PayModeName: "合计",
            //   Amount: 0
            // };
            // for (let i of response.data.list) {
            //   a.Amount += Number(i.Amount);
            // }
            // if (that.list.length > 0) {
            //   that.list.push(a);
            // }
          } else {
            that.$Message.error(response.error_message);
          }
        });
      }, 100);
    },
    getStore() {
      let that = this;
      let data = {
        EmployeeID: that.userMes.EmployeeID
      };
      api.getValidStoresNew(data).then(response => {
        if (response.error_code === "Success") {
          that.storeList = response.data.list;
          that.formItem.store = that.userMes.StoreName;
          that.formItem.StoreID = that.userMes.StoreID;
          that.getList();
        } else {
          that.$Message.error(response.error_message);
        }
      });
    },
    exportTable() {
      let that = this;
      that.$refs.mainTable.exportCsv({
        filename: `${new Date().getTime()}${document.title}`
      });
    },
    printPage() {
      let that = this;
      setTimeout(() => {
        window.print();
      }, 500);
    },
    choose(name, id, index) {
      this.formItem.store = name;
      this.formItem.StoreID = id;
    }
  },
  mounted() {
    let that = this;
    that.$nextTick(() => {
      that.initTableHeight();
      that.getStore();
      // that.getList();
    });
  },
  filters: {
    formatDate(val) {
      return moment(val).format("YYYY-MM-DD");
    }
  }
};
</script>
<style scoped>
.bqitem {
  display: flex;
  justify-content: space-between;
}
.spanBeacname{
   font-size:16px;
   font-weight:bold;
}
</style>

