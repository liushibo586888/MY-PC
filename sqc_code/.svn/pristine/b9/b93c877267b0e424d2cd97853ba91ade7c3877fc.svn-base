<template>
    <div class="sf-container container">
        <div class="search-box">
            <Form :model="formItem" :label-width="0" inline @submit.native.prevent ref="searchForm" class="search-form">
                <row :gutter="20">
                    <i-col span="3">
                        <formItem prop="startDate">
                            <DatePicker type="date" placeholder="开始日期" v-model="formItem.startDate" :clearable="false" :editable="false"></DatePicker>
                        </formItem>
                    </i-col>
                    <i-col span="3">
                        <formItem prop="endDate">
                            <DatePicker type="date" placeholder="结束日期" v-model="formItem.endDate" :clearable="false" :editable="false"></DatePicker>
                        </formItem>
                    </i-col>
                    <i-col span="3">
                        <FormItem prop="userName">
                            <Input v-model="formItem.userName" placeholder="姓名"></Input>
                        </FormItem>
                    </i-col>
                    <i-col span="3">
                        <FormItem prop="userTel">
                            <Input v-model="formItem.userTel" placeholder="电话"></Input>
                        </FormItem>
                    </i-col>
                    <i-col span="12">
                        <formItem class="btn-box">
                            <i-button type="primary" class="btn btn-search" @click="searchForm">搜索</i-button>
                            <i-button type="warning" class="btn btn-reset" @click="resetSearch">重置</i-button>
                            <i-button type="warning" class="btn btn-add" @click="cancelList" :disabled="!rowID">取消</i-button>
                        </formItem>
                    </i-col>
                </row>
            </Form>
        </div>
        <div class="table-box" id="tableBox">
            <Table :columns="columns1" :data="list" highlight-row :height="setTableHeight" ref="mainTable" @on-current-change="getRowID"></Table>
            <tableLoadingPage :loading="tableLoading"></tableLoadingPage>
        </div>
        <div class="bottom-box">
            <i-button class="btn-export" @click="exportTable" type="default">导出</i-button>
            <Select v-model="tablePage.pageNum" class="table-row" placement="top" @on-change="changePage">
                <Option :value="item.ID" v-for="(item, index) in tableRows" :key="index">{{item.Name}}</Option>
            </Select>
            <div class="row-box">{{tablePage.startNum}} - {{tablePage.endNum}}条/共{{tablePage.allNum}}条</div>
            <i-button class="btn btn-prev" type="ghost" @click="prevPage">上一页</i-button>
            <i-button class="btn btn-next" type="primary" @click="nextPage">下一页</i-button>
            <div class="page-box">
                <p>前往</p>
                 <Input-number :max="tablePage.maxPageNum" :min="1" v-model="tablePage.page"  @on-change="changePage"></Input-number>
                <p>页</p>
            </div>
        </div>
    </div>
</template>
<script>
    import api from '@/api/index.js'
    import { mapState } from 'vuex'
    import moment from "moment"
    export default{
        data () {
            return {
                rowID: null,
                tableLoading: false,
                tablePage: {
                    page: 1,
                    pageNum: 10,
                    maxPageNum: 100,
                    allNum: 199,
                    startNum: 0,
                    endNum: 0
                },
                tableHeight: 200,
                formItem: {
                    startDate: new Date(),
                    endDate: new Date(),
                    userName: '',
                    userTel: ''
                },
                columns1: [
                    {
                        title: '客户姓名',
                        width: 140,
                        key: 'CustomerName',
                        fixed: 'left',
                        align: 'center'
                    }, {
                        title: '项目名称',
                        width: 300,
                        fixed: 'left',
                        key: 'ItemName',
                        align: 'center',
                        // render: (h, params) => {
                        //     if (!params.row.ItemName) {
                        //         return ''
                        //     }
                        //     let text = params.row.ItemName
                        //     if (text.length > 5) {
                        //         text = text.substr(0, 5) + '...'
                        //     }
                        //     return h('Tooltip', {
                        //         props: {
                        //             content: params.row.ItemName,
                        //             placement: 'top'
                        //         }
                        //     }, text)
                        // }
                    }, {
                        title: '总金额',
                        fixed: 'left',
                        width: 140,
                        key: 'AllTotal',
                        align: 'center'
                    }, {
                        title: '执行日期',
                        key: 'Date',
                        width: 200,
                        align: 'center',
                        render: (h, params) => {
                            if (!params.row.Date) {
                                return h('div', {}, '')
                            }
                            return h('div', {}, moment(params.row.Date).format('YYYY-MM-DD HH:mm:ss'))
                        }
                    }, {
                        title: '美容师',
                        key: 'BeauticianName',
                        width: 140,
                        align: 'center'
                    }, {
                        title: '收费日期',
                        key: 'ChargeDate',
                        width: 200,
                        align: 'center',
                        render: (h, params) => {
                          if (!params.row.ChargeDate) {
                            return h('div', {}, '')
                          }
                          return h('div', {}, moment(params.row.ChargeDate).format('YYYY-MM-DD HH:mm:ss'))
                        }
                    }, {
                        title: '电话',
                        key: 'CustomerPhone',
                        width: 140,
                        align: 'center'
                    }, {
                        title: '项目规格',
                        width: 140,
                        key: 'ItemStandard',
                        align: 'center'
                    }, {
                        title: '项目单位',
                        width: 140,
                        key: 'ItemUnit',
                        align: 'center'
                    }, {
                        title: '执行数量',
                        width: 140,
                        key: 'ExecuteQuantity',
                        align: 'center'
                    }, {
                        title: '真实金额',
                        width: 140,
                        key: 'TotalPR',
                        align: 'center'
                    }, {
                        title: '虚拟金额',
                        width: 140,
                        key: 'TotalOther',
                        align: 'center'
                    }, {
                        title: '所属门店',
                        width: 140,
                        key: 'StoreName',
                        align: 'center'
                    }, {
                        title: '执行状态',
                        width: 140,
                        key: 'ExecuteStatusName',
                        align: 'center'
                    }, {
                        title: '执行人',
                        key: 'RegistByName',
                        width: 140,
                        align: 'center'
                    }, {
                        title: '备注',
                        width: 140,
                        key: 'Remark',
                        ellipsis: true,
                        align: 'center',
                        render: (h, parmas) => {
                            if (!parmas.row.Remark) {
                                return ''
                            }
                            let text = parmas.row.Remark.length > 10 ? parmas.row.Remark.substr(0, 10) + '....' : parmas.row.Remark
                            return h('div', {
                                on: {
                                    click: () => {
                                        this.showRemark(parmas.row)
                                    }
                                }
                            }, text)
                        }
                    }, {
                        title: ' '
                    }
                ],
                list: []
            }
        },
        computed: {
            ...mapState({
                userMes: state => state.app.userMes,
                authorList: state => state.app.authorList,
                tableRows: state => state.app.tableRows
            }),
            setTableHeight () {
                let that = this
                return that.tableHeight
            }
        },
        methods: {
            searchForm () {
                // 搜索表格
                let that = this
                if (that.formItem.startDate && that.formItem.endDate) {
                    // 两者同时存在
                    if (Number(that.formItem.startDate) > Number(that.formItem.endDate)) {
                        that.$Message.error('开始日期不得大于结束日期')
                        return false
                    }
                }
                that.tablePage.page = 1
                that.getList()
            },
            resetSearch () {
                let that = this
                that.tablePage.page = 1
                that.$refs.searchForm.resetFields()
                that.getList()
            },
            showRemark (row) {
                // 显示备注
                let that = this
                that.$Modal.info({
                    title: '备注详情',
                    content: row.Remark
                })
            },
            initTableHeight () {
                let that = this
                that.tableHeight = document.getElementById('tableBox').offsetHeight
                window.onresize = function() {
                    that.tableHeight = document.getElementById('tableBox').offsetHeight
                }
            },
            setPage () {
                let that = this
                let teblePage = that.tablePage
                teblePage.startNum = teblePage.pageNum * (teblePage.page - 1) + 1
                let endPage = teblePage.page * teblePage.pageNum
                teblePage.endNum = endPage > teblePage.allNum ? teblePage.allNum : endPage
            },
            prevPage () {
                let that = this
                if (that.tablePage.page <= 1) {
                    that.$Message.error('已经是第一页')
                    return false
                }
                that.tablePage.page--
                that.getList()
            },
            nextPage () {
                let that = this
                if (that.tablePage.page >= that.tablePage.maxPageNum) {
                    that.$Message.error('已经是最后一页')
                    return false
                }
                that.tablePage.page++
                that.getList()
            },
            changePage () {
                let that = this
                that.getList()
            },
            getList () {
                let that = this
                let data = {
                    EmployeeID: that.userMes.EmployeeID,
                    startDate: that.formItem.startDate,
                    endDate: that.formItem.endDate,
                    CustomerName: that.formItem.userName,
                    CustomerPhone: that.formItem.userTel,
                    page: that.tablePage.page,
                    size: that.tablePage.pageNum
                }
                // 转换日期
                if (data.startDate) {
                    data.startDate = moment(data.startDate).format('YYYY-MM-DD')
                }
                if (data.endDate) {
                    data.endDate = moment(data.endDate).format('YYYY-MM-DD')
                }
                if (data.CustomerPhone) {
                    let regex = /^1\d{10}$/
                    if (!regex.test(data.CustomerPhone)) {
                        that.$Message.error('电话号码格式有误')
                        return false
                    }
                }
                that.tableLoading = true
                api.executionRecordGetList(data).then((response) => {
                    if (response.error_code === 'Success') {
                        let res = response.data
                        for (let i of res.list) {
                            let phone = i.CustomerPhone
                            i.CustomerPhone = phone.substring(0, 3) + '****' + phone.substr(phone.length - 4)
                        }
                        that.list = res.list
                        that.tableLoading = false
                        that.$set(that.tablePage, 'page', res.page)
                        that.$set(that.tablePage, 'allNum', res.total)
                        that.tablePage.maxPageNum = res.totalPage
                        that.setPage()
                    } else {
                        that.$Message.error(response.error_message)
                    }
                })
            },
            exportTable () {
                let that = this
                that.$refs.mainTable.exportCsv({
                    filename: `${new Date().getTime()}${document.title}`
                })
            },
            cancelList () {
                let that = this
                if (!that.rowID) {
                    that.$Message.error('请选择一条记录！')
                    return false
                }
                that.$Modal.confirm({
                    title: '提示',
                    content: '是否确定取消该治疗记录',
                    onOk: () => {
                        that.cancel()
                    },
                    onCancel: () => {}
                })
            },
            getRowID (row) {
                let that = this
                that.rowID = row.ID
            },
            cancel () {
                let that = this
                let data = {
                    Remark: '',
                    EmployeeID: that.userMes.EmployeeID
                }
                that.$store.commit('changeLoadingPage')
                api.CancleExecutionRecord(that.rowID, data).then((response) => {
                    that.$store.commit('changeLoadingPage')
                    if (response.error_code === 'Success') {
                        that.$Message.success('取消成功')
                        that.tablePage.page = 1
                        that.getList()
                    } else {
                        that.$Message.error(response.error_message)
                    }
                })
            }
        },
        mounted () {
            let that = this
            that.$nextTick(() => {
                that.initTableHeight()
                that.getList()
                let pageName = that.$route.name
                let list = that.authorList[pageName]
            })
        }
    }
</script>


