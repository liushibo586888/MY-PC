import moment from 'moment';

var echartsCommon = {};
echartsCommon.count = 0;
echartsCommon.defalutList = ['#C1232B', '#B5C334', '#FE8463'];
echartsCommon.colorList = [];
echartsCommon.setColor = function (arr, recalc) {
    let count = echartsCommon.count;
    if (typeof (recalc) !== 'undefined') { //默认
        var list = echartsCommon.reSort(arr);
        count = list.length;
        if (count > 0 && count <= 3) {
            for (let index = 0; index < count; index++) {
                echartsCommon.colorList.push(echartsCommon.defalutList[0]);
            }
        } else if (count > 3 && count <= 6) {
            for (let index = 0; index < count; index++) {
                if (list[index] < 3) {
                    echartsCommon.colorList.push(echartsCommon.defalutList[0]);
                } else {
                    echartsCommon.colorList.push(echartsCommon.defalutList[2]);
                }
            }
        } else {
            for (let index = 0; index < count; index++) {
                if (list[index] < 3) {
                    echartsCommon.colorList.push(echartsCommon.defalutList[0]);
                } else if (list[index] > 6) {
                    echartsCommon.colorList.push(echartsCommon.defalutList[2]);
                } else {
                    echartsCommon.colorList.push(echartsCommon.defalutList[1]);
                }
            }
        }
    } else {
        if (count > 0 && count <= 3) {
            for (let index = 0; index < count; index++) {
                echartsCommon.colorList.push(echartsCommon.defalutList[0]);
            }
        } else if (count > 3) {
            echartsCommon.colorList = [echartsCommon.defalutList[0], echartsCommon.defalutList[0], echartsCommon.defalutList[0]];
            if (count >= 6) {
                for (let index = 3; index < count; index++) {
                    if (index >= count - 3) {
                        echartsCommon.colorList.push(echartsCommon.defalutList[2]);
                    } else {
                        echartsCommon.colorList.push(echartsCommon.defalutList[1]);
                    }
                }
            } else {
                echartsCommon.colorList.push(echartsCommon.defalutList[2]);
            }
        }
    }
    return echartsCommon.colorList;
};
echartsCommon.itemStyle1 = function (fontsize, recalc, arr) {
    return {
        normal: {
            color: function (params) {
                echartsCommon.colorList = [];
                return echartsCommon.setColor(arr, recalc)[params.dataIndex];
            },
            label: {
                show: true,
                position: 'top',
                formatter: '{c}',
                textStyle: {
                    color: 'black',
                    fontSize: fontsize
                }
            }
        }
    };
};
echartsCommon.shortcuts = function () { //时间回到今天
    return {
        shortcuts: [{
            text: '今天',
            value() {
                return new Date();
            }
        }]
    };
};
echartsCommon.itemStyle = function (fontsize) {
    return {
        normal: {
            label: {
                show: true, //开启显示
                position: 'top', //在上方显示
                textStyle: {
                    //数值样式
                    color: 'black',
                    fontSize: fontsize
                }
            }
        }
    };
};
echartsCommon.axisLabel = function () {
    return {
        interval: 0, //横轴信息全部显示
        rotate: -30 //-30度角倾斜显示
    };
};
echartsCommon.reSort = function (arr) {
    var result = [];
    for (var index = 0; index < arr.length; index++) {
        var i = arr.length - 1;
        for (var j = 0; j < arr.length; j++) {
            if (index === j) {
                continue;
            }
            if (arr[index] > arr[j]) {
                i--;
            }
        }
        while (result.indexOf(i) > 0) {
            i--;
        }
        result.push(i);
    }
    return result;
};
echartsCommon.timeList = function () { //区域
    return [{
            value: 1,
            label: '当月'
        }, {
            value: 2,
            label: '环比'
        },
        {
            value: 3,
            label: '同比'
        }
    ];
};
echartsCommon.changeTime = function (formItem, val) {
    let date = formItem.StartDate1;

    let year1 = date.getYear();
    let month1 = date.getMonth() + 1;
    let day1 = new Date(year1, month1, 0).getDate(); //获取当月的最后一天

    let year2 = date.getFullYear();
    let month2 = date.getMonth();
    if (month2 == 0) {
        month2 = 12;
        year2 = year2 - 1;
    }
    if (month2 < 10) {
        month2 = '0' + month2;
    }
    let day2 = new Date(year2, month2, 0).getDate(); //获取上月的最后一天

    let time1 = '';
    let time2 = '';
    let time3 = '';
    let time4 = '';
    let year = moment(date)
        .format('YYYY-MM-DD')
        .slice(0, 4);
    let month = moment(date)
        .format('YYYY-MM-DD')
        .slice(5, 7);
    if (val.label == '当月') {
        time1 = year + '-' + month + '-' + '01';
        time2 = year + '-' + month + '-' + day1;
        formItem.startDate = time1;
        formItem.endDate = time2;
        formItem.StartDate1 = time1;
        formItem.EndDate1 = time2;
    }
    if (val.label == '环比') {
        // month += 1;
        // if (month > 12) {
        //     month = 1;
        //     // year = year - 1;
        // }
        // time3 = year + '-' + month + '-' + '01';
        // time4 = year + '-' + month + '-' + day1;
        // formItem.StartDate1 = time3;
        // formItem.EndDate1 = time4;
        month = Number(month) - 1;
        if (month < 1) {
            month = 12;
            year = year - 1;
        }
        time1 = year + '-' + month + '-' + '01';
        time2 = year + '-' + month + '-' + day2;
        formItem.startDate = time1;
        formItem.endDate = time2;
    }
    if (val.label == '同比') {
        let lastyear = '';
        lastyear = year - 1;
        time1 = lastyear + '-' + month + '-' + '01';
        time2 = lastyear + '-' + month + '-' + day1;
        time3 = year + '-' + month + '-' + '01';
        time4 = year + '-' + month + '-' + day1;
        formItem.startDate = time1;
        formItem.endDate = time2;
        // formItem.StartDate1 = time3;
        // formItem.EndDate1 = time4;
    }

};
echartsCommon.message = "";
echartsCommon.ContrastTime = function (time1, time2, time3, time4) {
    if (time1 && time2) {
        // 两者同时存在
        if (Number(moment(time1).format("YYYY-MM-DD").replace(/-/g, "")) > Number(moment(time2).format("YYYY-MM-DD").replace(/-/g, "")) || Number(moment(time3).format("YYYY-MM-DD").replace(/-/g, "")) > Number(moment(time4).format("YYYY-MM-DD").replace(/-/g, ""))) {
            echartsCommon.message.error("开始日期不得大于结束日期");
            return false;
        }
        return true;
    }
}
echartsCommon.rowClassName = function (temp, temp1) {
    if (temp == temp1) {
        // console.log(123);
        return "demo-table-info-row";
    }
    return "";
}
echartsCommon.sum = function (arr, fn) {
    let amount = 0;
    arr.forEach(x => {
        amount += fn(x);
    });
    return amount;
}
//客户电话
echartsCommon.CustomerPhone = function (phone) {
    if (!phone) {
        return "";
    }
    let tel = phone.substring(0, 3) + "****" + phone.substr(6, 4);
    return tel;

}
//执行日期
echartsCommon.DATE = function (h, time) {
    if (!time) {
        return h("div", {}, "");
    }
    return h("div", {}, moment(time).format("YYYY-MM-DD"));
}
//input只能输入数字
echartsCommon.Rules = function (e) {
    
    return e.target.value.replace(/[^\d\.]/g, "")
}
export default echartsCommon;