<template>
  <div class="tf-container container">
    <div class="search-box">
      <Form :model="formItem" :label-width="0" inline @submit.native.prevent ref="searchForm" class="search-form">
        <row :gutter="20">
          <i-col span="3">
            <formItem prop="startDate">
              <DatePicker class="DatePicker_time" type="date" :options="options1" placeholder="开始日期" v-model="formItem.startDate" :clearable="false" :editable="false"></DatePicker>
            </formItem>
          </i-col>
          <i-col span="3">
            <formItem prop="endDate">
              <DatePicker class="DatePicker_time" type="date" :options="options1" placeholder="结束日期" v-model="formItem.endDate" :clearable="false" :editable="false"></DatePicker>
            </formItem>
          </i-col>
          <i-col span="3">
            <FormItem prop="store">
              <Select v-model="formItem.store" placeholder="门店" :filterable="true">
                <Option v-for="item in storeList" :value="item.Name" :key="item.ID" @click.native="choose(item.Name,item.ID)">{{ item.Name }}</Option>
              </Select>
            </FormItem>
          </i-col>
          <i-col span="3">
            <FormItem prop="userName">
              <Input v-model="formItem.userName" placeholder="姓名"></Input>
            </FormItem>
          </i-col>
          <i-col span="3">
            <FormItem prop="userTel">
              <Input v-model="formItem.userTel" placeholder="电话"></Input>
            </FormItem>
          </i-col>
          <i-col span="9">
            <formItem class="btn-box">
              <i-button type="primary" class="btn" @click="searchForm">搜索</i-button>
              <i-button type="warning" class="btn" @click="resetSearch">重置</i-button>
              <i-button type="warning" class="btn btn-add" @click="showAddPoup" v-if="showAdd">添加</i-button>
              <i-button type="warning" class="btn btn-purple" @click="checkBillStatus" v-if="showEdit" :disabled="!currentID">浏览</i-button>
            </formItem>
          </i-col>
        </row>
      </Form>
    </div>
    <div class="table-box" id="tableBox">
      <Table :columns="columns1" :data="list" highlight-row :height="setTableHeight" @on-current-change="chooseRow" ref="mainTable"></Table>
      <tableLoadingPage :loading="tableLoading"></tableLoadingPage>
    </div>
    <div class="bottom-box">
      <i-button class="btn-export" @click="exportTable" type="default">导出</i-button>
      <Select v-model="tablePage.pageNum" class="table-row" placement="top" @on-change="changePage">
        <Option :value="item.ID" v-for="(item, index) in tableRows" :key="index">{{item.Name}}</Option>
      </Select>
      <div class="row-box">{{tablePage.startNum}} - {{tablePage.endNum}}条/共{{tablePage.allNum}}条</div>
      <i-button class="btn btn-prev" type="ghost" @click="prevPage()">上一页</i-button>
      <i-button class="btn btn-next" type="primary" @click="nextPage()">下一页</i-button>
      <div class="page-box">
        <p>前往</p>
        <Input-number :max="tablePage.maxPageNum" :min="1" v-model="tablePage.page" @on-change="changePage"></Input-number>
        <p>页</p>
      </div>
    </div>
    <!-- 查询电话号码弹窗 -->
    <Modal :mask-closable="false" v-model="poupSearchTel" class="dialog" class-name="vertical-center-modal" v-if="showAdd">
      <div slot='header' class="header">
        请输入电话号码
      </div>
      <Form :model="searchTel" ref="searchTelForm" @submit.native.prevent="searchCustomerTel">
        <Form-item prop="tel" :rules="searchRule.tel">
          <i-input v-model="searchTel.tel" placeholder="请输入用户的手机号" autofocus ref="searchTel"></i-input>
        </Form-item>
      </Form>
      <div slot='footer' class="footer">
        <i-button class="btn" type="primary" @click="searchCustomerTel" :loading="uploading">确定</i-button>
        <i-button class="btn" type="warning" @click="searchReset" :loading="uploading">取消</i-button>
      </div>
    </Modal>
    <!-- 弹窗 -->
    <Modal :mask-closable="false" v-model="modal1" :styles="{top: '0px'}" class="dialog" width="1200" v-if="showAdd || showEdit">
      <div slot='header' class="header not-print">
        {{modalTitle}}
      </div>
      <div slot='close' class="close not-print">
        <i class='ivu-icon ivu-icon-aaa-guanbi'></i>
      </div>
      <!-- 用户信息部分 不可修改 -->
      <Form ref="formValidate1" :model="formValidate" :label-width="120" @submit.native.prevent class="form">
        <row type="flex" justify="space-between">
         <i-col span="5">
           <FormItem prop="CustomerPhone" label="电话：">
              <Input v-model="formValidate.CustomerPhone" placeholder="电话" :readonly="true" />
            </FormItem>  
          </i-col>
          <i-col span="4">
            <FormItem prop="CustomerName" label="姓名：">
              <Input v-model="formValidate.CustomerName" placeholder="姓名" :readonly="true" />
            </FormItem>
          </i-col>
           <i-col span="4">
             <FormItem label="年龄：" prop="CustomerAge">
              <Input v-model="formValidate.CustomerAge" placeholder="年龄" :readonly="true" />
            </FormItem>  
          </i-col>
          <i-col span="4">
            <FormItem prop="CustomerSex" label="性别：">
              <Input v-model="formValidate.CustomerSex" placeholder="性别" :readonly="true" />
            </FormItem>
          </i-col>
          <i-col span="4">
            <FormItem label="美肤总监：" prop="SceneEmployeeName">
              <Input v-model="formValidate.SceneEmployeeName" placeholder="美肤总监" :readonly="true" />
            </FormItem>
          </i-col>
        </row>
        <row type="flex" justify="space-between">
          <i-col span="5">
            <FormItem label="预交余额：" prop="CashBalance">
              <InputNumber v-model="formValidate.CashBalance" placeholder="预交余额" :readonly="true" :precision="2" style="width:100%;"></InputNumber>
            </FormItem>
          </i-col>
          <i-col span="4">
            <FormItem label="积分余额：" prop="IntegrationBalance">
              <InputNumber v-model="formValidate.IntegrationBalance" placeholder="积分余额" :readonly="true" :precision="2" style="width:100%;"></InputNumber>
            </FormItem>
          </i-col>
          <i-col span="4">
            <FormItem label="欠款余额：" prop="ArrearsBalance">
              <InputNumber v-model="formValidate.ArrearsBalance" placeholder="欠款余额" :readonly="true" :precision="2" style="width:100%;"></InputNumber>
            </FormItem>
          </i-col>
          <i-col span="4">
            <FormItem label="赠送余额：" prop="HandselBalance">
              <InputNumber v-model="formValidate.HandselBalance" placeholder="赠送余额" :readonly="true" :precision="2" style="width:100%;"></InputNumber>
            </FormItem>
          </i-col>
          <i-col span="4">
            <FormItem label="渠道咨询：" prop="TMKEmployeeName">
              <Input v-model="formValidate.TMKEmployeeName" placeholder="渠道咨询" :readonly="true" />
            </FormItem>
          </i-col>
          <!-- 
          <formItem label="退费日期：" prop="tfDate">
            <DatePicker class="DatePicker_time" type="date" :options="optionsDate" placeholder="退费日期" v-model="tfDate" :clearable="false" :editable="false"></DatePicker>
          </formItem> -->
        </row>
        <!-- <row type="flex" >
                    <i-col span="6">
                        <FormItem label="美肤总监：" prop="SceneEmployeeName">
                            <Input v-model="formValidate.SceneEmployeeName" placeholder="美肤总监" :disabled="true"></Input>
                        </FormItem>
                    </i-col>
                    <i-col span="6">
                        <FormItem label="渠道咨询：" prop="TMKEmployeeName">
                            <Input v-model="formValidate.TMKEmployeeName" placeholder="渠道咨询" :disabled="true"></Input>
                        </FormItem>
                    </i-col>
                </row> -->
        <!-- ** -->
        <!-- <row type="flex">
          <i-col span="5">
            <FormItem label="还款日期：" prop="dateTime">
              <DatePicker class="DatePicker_time" type="date" :options="options1" placeholder="日期" v-model="dateTime" :clearable="false" :editable="false"></DatePicker>
            </FormItem>
          </i-col>
          <i-col span="6">
            <FormItem label="修改时间：">
              <Button class="btn-cancel" type="warning" style="width:100px" @click="BtnChangeDate" :loading="uploading">保存</Button>
            </FormItem>
          </i-col>
        </row> -->
      </Form>
      <!-- 项目确诊单明细 新增  浏览不显示 -->
      <template v-if="modalMode == 'add'">
        <div class="pannel-title">可退项目/物资</div>
        <div class="table-box" style="margin-top: 10px;">
          <Table :columns="qzdmxColumns" :data="qzdmxList" @on-row-click="showDetailMessage" ></Table>
          <!-- <Table :columns="qzdmxColumns" :data="qzdmxList" @on-row-dblclick="showDetailMessage" highlight-row height="200"></Table> highlight-row height="200" -->
        </div>
      </template>
      <!-- ** -->
      <!-- 物资详情 -->
      <template v-if="modalMode == 'add'">
        <div class="pannel-title" style="margin-top: 5px;">项目明细</div>
        <div class="table-box" style="margin-top: 10px;">
          <Table :columns="detailMessageColums" :data="detailMessageData"></Table>
        </div>
      </template>
      <template v-else>
        <!-- 浏览 -->
        <div class="pannel-title">项目/物资明细</div>
        <div class="table-box">
          <Table :columns="lookUpItems" :data="lookUpItemsData" :height="200"></Table>
        </div>
      </template>
      <!-- 输入退费数量 -->
      <Form ref="formValidate2" :label-width="120" @submit.native.prevent class="form" style="margin-top:20px;" v-if="modalMode == 'add'">
        <Row type="flex" align="middle" style="margin-bottom:23px;">
          <i-col span="11">
            <Form-item label="退费数量：" style="margin-bottom:0;display:none">
              <InputNumber :max="maxGiveBack" :min="maxGiveBack" v-model="giveBackNum" style="width:100%;" :disabled="lockNum"></InputNumber>
            </Form-item>
          </i-col>
          <i-col span="11">
            <i-button type="primary" style="margin-left:20px;display:none" @click="submitGiveBack">确定</i-button>
            <span style="margin-left:30px; color: red; font-size: 14px; font-weight: bold;display:none">可退真实总额:{{refundsTotal | formatMoney}}</span>
          </i-col>
        </Row>
      </Form>
      <!-- ** -->
      <!-- 支付集合 -->
      <div class="table-box" v-if="modalMode == 'add'" style="margin-top: 0;">
        <Table :columns="zfjhColumns" :data="zfjhList"></Table>
      </div>
      <div class="table-box" v-else>
        <Table :columns="lookupPayMode" :data="lookupPayData" :height="200"></Table>
      </div>
      <!-- ** -->
      <Input v-model="formValidate.Remark" placeholder="备注" type="textarea" :rows="4" style="margin-top:20px;" v-if="modalMode == 'add'"></Input>
      <Input v-model="formValidate.Remark" placeholder="备注" type="textarea" :rows="4" style="margin-top:20px;" v-else readonly></Input>
      <div slot="footer" class="footer not-print" v-if="modalMode == 'add'">
        <Button class="btn-sure" type="primary" @click="addForm" :loading="uploading" :disabled="btnjinyong">保存</Button>
        <Button class="btn-cancel" type="warning" @click="resetForm" :loading="uploading">取消</Button>
      </div>
      <div slot="footer" class="footer not-print" v-else>
        <Button class="btn-sure" type="primary" @click="printPage">打印</Button>
      </div>
    </Modal>
    <!-- 打印 -->
    <div class="print-box">
      <!-- <div class="title">塑青春·科技祛痘</div> -->
      <div class="storeName">{{userMes.PrintHeadString}}</div>
      <div class="storeName">{{userMes.StoreAlias}}</div>
      <div class="document-type">退费单据 顾客联</div>
      <Row>
        <i-col span="12">
          <span class="print-name">顾客姓名：</span>
          <span class="print-key">{{formValidate.CustomerName}}</span>
        </i-col>
        <i-col span="12">
          <span class="print-name">电话：</span>
          <span class="print-key">{{formValidate.CustomerPhone}}</span>
        </i-col>
      </Row>
      <Row>
        <i-col span="24">
          <span class="print-name">日期：</span>
          <span class="print-key">{{getNowDay}}</span>
        </i-col>
      </Row>
      <div class="line"></div>
      <!-- 退费方式 -->
      <div>
        <Row>
          <i-col span="8">项目名称</i-col>
          <i-col span="8">退费数量</i-col>
          <i-col span="8">退费金额</i-col>
        </Row>
        <Row v-for="(item, index) in printData" :key="index">
          <i-col span="8">{{item.itemName}}</i-col>
          <i-col span="8">{{item.quantity}}</i-col>
          <i-col span="8">{{item.price | formatMoney}}</i-col>
        </Row>
      </div>
      <div class="line"></div>
      <!-- 支付方式 -->
      <Row v-for="(item, index) in printPayMode" :key="index">
        <i-col span="24">支付方式：{{item.PayModeName}}
          <span style="margin-left: 5%">金额：{{item.Amount}}</span>
        </i-col>
        <!-- <i-col span="12"></i-col> -->
      </Row>
      <!-- <i-table :columns="printColumns" :data="zfjhList"></i-table> -->
      <div class="line"></div>
      <Row>
        <i-col span="24">
          <span class="print-name">合计：</span>
          <span class="print-key">{{refundsTotal | formatMoney}}</span>
        </i-col>
      </Row>
      <Row>
        <i-col span="24">
          <span class="print-name">操作人：</span>
          <span class="print-key">{{userMes.EmployeeName}}</span>
        </i-col>
      </Row>
      <div class="line"></div>
      <Row>
        <i-col span="24">
          <span class="print-name">服务热线：</span>
          <span class="print-key">{{userMes.ServiceHotLine}}</span>
        </i-col>
      </Row>
      <Row>
        <i-col span="24">
          <span class="print-name">门店地址: </span>
          <span class="print-key">{{userMes.StoreAddress}}</span>
        </i-col>
      </Row>
      <Row>
        <i-col span="24">
          <span class="print-name">门店电话： </span>
          <span class="print-key">{{userMes.StorePhone}}</span>
        </i-col>
      </Row>
      <Row>
        <i-col span="24">
          <span class="print-name">官方网站： </span>
          <span class="print-key">{{userMes.OfficialWebSite}}</span>
        </i-col>
      </Row>
      <div class="bottom">{{userMes.BottomDescription}}</div>
    </div>
    <!-- ** -->
  </div>
</template>
<script>
import api from "@/api/index.js";
import Vue from "vue";
import { mapState } from "vuex";
import moment from "moment";
import echartsCommon from "@/api/Common.js";
export default {
  data() {
    const validateTel = (rule, value, callback) => {
      let reg = /^1\d{10}$/;
      if (value === "") {
        callback(new Error("手机号不得为空"));
      } else if (!reg.test(value)) {
        callback(new Error("请输入正确的手机号"));
      } else {
        callback();
      }
    };
    return {
      ConsumptionInfoID:null, //在收费界面传过来的 退费的主表项目id
      tfDate: new Date(),
      qingqiu: false,
      dateTime: "",
      //时间回到今天
      options1: echartsCommon.shortcuts(),
      // -----
      optionsDate:{
           disabledDate(date){
             return date && date.valueOf() >= Date.now();
           }
      },
      btnjinyong: false,
      jinyong: true,
      showAdd: false,
      showEdit: false,
      currentID: "",
      currentPhone: "",
      refundsTotal: 0,
      lockNum: false,
      uploading: false,
      print: false,
      modalTitle: "新增",
      modalMode: "add", // lookup 浏览 add 新增
      tablePage: {
        page: 1,
        pageNum: 10,
        maxPageNum: 100,
        allNum: 199,
        startNum: 0,
        endNum: 0
      },
      tableLoading: false,
      tableHeight: 200,
      poupSearchTel: false,
      searchTel: {
        tel: ""
      },
      searchRule: {
        tel: {
          required: true,
          message: "请输入正确的手机号码",
          trigger: "blur",
          type: "number",
          validator: validateTel
        }
      },
      modal1: false,
      formValidate: {
        CustomerName: "",
        CustomerPhone: "",
        CustomerAge: "",
        CustomerSex: "",
        TMKEmployeeName: "",
        SceneEmployeeName: "",
        ArrearsBalance: 0,
        HandselBalance: 0,
        CashBalance: 0,
        IntegrationBalance: 0,
        Remark: ""
      },
      formItem: {
        startDate: new Date(),
        endDate: new Date(),
        userName: "",
        userTel: "",
        StoreID: null,
        store: "all"
      },
      storeList: [],
      // 浏览 退费
      lookUpItems: [
        {
          title: "退费项目/物资",
          align: "center",
          key: "itemName"
        },
        {
          title: "规格",
          align: "center",
          key: "itemStandard"
        },
        {
          title: "单位",
          align: "center",
          key: "itemUnit"
        },
        {
          title: "退费数量",
          align: "center",
          key: "quantity"
        },
        {
          title: "退费金额",
          align: "center",
          key: "BuyAmount"
        }
      ],
      lookUpItemsData: [],
      printPayMode: [],
      lookupPayMode: [
        {
          title: "序号",
          type: "index",
          align: "center"
        },
        {
          title: "支付方式",
          align: "center",
          key: "PayModeName"
        },
        {
          title: "退费金额",
          align: "center",
          key: "Amount",
          render: (h, params) => {
            if (!params.row.Amount) {
              return 0.0;
            }
            return h("div", {}, params.row.Amount.toFixed(2));
          }
        },
        {
           title:"退赠送金额",
           align:"center",
           key:"HandselAmount",
             render: (h, params) => {
            if (!params.row.HandselAmount) {
              return 0.0;
            }
            return h("div", {}, params.row.HandselAmount.toFixed(2));
          }
        }
      ],
      lookupPayData: [],
      detailMessageColums: [
        {
          title: "项目/物资名称",
          key: "xmmc",
          align: "center"
        },
        {
          title: "规格",
          key: "spec",
          align: "center"
        },
        {
          title: "单位",
          key: "unit",
          align: "center",
          width: 110
        },
        {
          title: "单价",
          key: "price",
          align: "center",
          width: 110
        },
        {
          title: "折扣",
          key: "Sconto",
          align: "center",
          width: 110,
          render: (h, params) => {
            if (!params.row.Sconto) {
              return "";
            }
            return h("div", {}, Number(params.row.Sconto).toFixed(2) + "%");
          }
        },
        {
          title: "购买数量",
          key: "num",
          align: "center",
          width: 110
        },
        // {
        //   title: "总价",
        //   key: "sum",
        //   align: "center",
        //   width: 110
        // },
        {
          title: "可退数量",
          key: "giveBackNum",
          align: "center",
          width: 110
        },
        {
          title: "操作",
          align: "center",
          render: (h, params) => {
            let that = this;
            return h(
              "Button",
              {
                props: {
                  type: "warning",
                  size: "small"
                },
                style: {
                  marginRight: "5px"
                },
                on: {
                  click: () => {
                    that.needU(params);
                  }
                }
              },
              "禁用"
            );
          }
        },

        {
          title: " ",
          width: 10
        }
      ],
      // 物资信息
      detailMessageData: [],
      columns1: [
        {
          title: "购买日期",
          key: "BuyDate",
          align: "center",
          width: 180,
          render: (h, params) => {
            return echartsCommon.DATEsfm(h, params.row.BuyDate);
          }
        },
        {
          title: "客户姓名",
          key: "CustomerName",
          width: 100,
          align: "center"
        },
        {
          title: "电话",
          key: "CustomerPhone",
          width: 120,
          align: "center"
        },
        {
          title: "经手人",
          key: "HandleName",
          width: 100,
          align: "center"
        },
        {
          title: "退费日期",
          key: "Date",
          width: 180,
          align: "center",
          render: (h, params) => {
            return echartsCommon.DATEsfm(h, params.row.Date);
          }
        },
        {
          title: "项目/物资名称",
          key: "ItemName",
          width: 250,
          align: "center",
          render: (h, params) => {
            return echartsCommon.ToolTip(h, params.row.ItemName, 10);
          }
        },
        {
          title: "规格",
          key: "ItemStandard",
          width: 80,
          align: "center"
        },
        {
          title: "剩余数量",
          key: "Quantity",
          width: 100,
          align: "center"
        },
        {
          title: "单位",
          width: 80,
          key: "ItemUnit",
          align: "center"
        },
        {
          title: "分类",
          width: 100,
          key: "ItemCategoryName",
          align: "center"
        },
        {
          title: "顶级分类",
          width: 100,
          key: "ItemTopCategoryName",
          align: "center"
        },
        {
          title: "单价",
          width: 100,
          key: "Price",
          align: "center",
          render: (h, params) => {
            if (!params.row.Price) {
              return "";
            }
            return h(
              "div",
              {
                // style: {
                //     'text-align': 'right'
                // }
              },
              params.row.Price.toFixed(2)
            );
          }
        },
        {
          title: "退费金额",
          width: 100,
          key: "BuyAmount",
          align: "center",
          render: (h, params) => {
            if (!params.row.BuyAmount) {
              return "";
            }
            return h(
              "div",
              {
                // style: {
                //     'text-align': 'right'
                // }
              },
              params.row.BuyAmount.toFixed(2)
            );
          }
        },
        // {
        //   title: "是否纠纷",
        //   width: 100,
        //   key: "IsDispute",
        //   align: "center",
        //   render: (h, parmas) => {
        //     let text = parmas.row.IsDispute ? "是" : "否";
        //     return h("div", {}, text);
        //   }
        // },
        {
          title: "销售人",
          width: 80,
          key: "HandleName",
          align: "center"
        },
        {
          title: "所属门店",
          width: 180,
          key: "StoreName",
          align: "center"
        },
        // {
        //   title: "项目总金额",
        //   width: 180,
        //   key: "ItemTotalAmount",
        //   align: "center"
        // }, 
        {
          title: " "
        }
      ],
      list: [],
      // 确诊单明细 添加
      qzdmxColumns: [
        {
          title: "项目/物资名称",
          key: "Name",
          align: "center",
          width: 180
        },
        {
          title: "规格",
          key: "Standard",
          align: "center"
        },
        {
          title: "单位",
          key: "Unit",
          align: "center"
        },
        {
          title: "数量",
          key: "Quantity",
          align: "center"
        },
        {
          title: "单价",
          key: "UnitPrice",
          align: "center",
          render: (h, parmas) => {
            let price = Number(parmas.row.UnitPrice).toFixed(2);
            return h("div", {}, price);
          }
        },
        {
          title: "折扣",
          key: "Sconto",
          align: "center",
          render: (h, parmas) => {
            // let Sconto = Number(parmas.row.Sconto) * 100
            return h("div", {}, Number(parmas.row.Sconto).toFixed(2) + "%");
          }
        },
        {
          title: "总价",
          key: "Total",
          align: "center",
          render: (h, parmas) => {
            let sum = Number(parmas.row.Total).toFixed(2);
            return h("div", {}, sum);
          }
        },
        {
          title: "备注(是否欠费)",
          key: "Remark",
          width: 140,
          align: "center",
          render: (h, parmas) => {
            let that = this; 
            // if (!parmas.row.Remark) {
            //   return "";
            // }
            // if (parmas.row.ArrearsAmount==0) {
            //   return "";
            // } 
            let text = parmas.row.ArrearsAmount;
            if (text.length > 10) {
              text = text.substr(0, 9);
            }
            return h(
              "div",
              {
                style: {
                  textAlign: "center"
                },
                on: {
                  click: () => {
                    that.showRemark(parmas.row);
                  }
                }
              },
              text
            );
          }
        },
        // {
        //   title: " ",
        //   width: 10
        // }
      ],
      qzdmxList: [],
      zfjhColumns: [
        {
          title: "序号",
          type: "index",
          align: "center"
        },
        {
          title: "支付方式",
          align: "center",
          key: "PayModeID",
          render: (h, params) => {
            let that = this;
            return h("div", [
              h(
                "Select",
                {
                  props: {
                   // readonly: !that.zfjhList[params.index].xianshi,
                    disabled: !that.zfjhList[params.index].xianshi,
                    value: that.zfjhList[params.index].PayModeID,
                    "label-in-value": true,
                    transfer: true,
                    placement: "top"
                  },
                  on: {
                    "on-change": event => {
                      params.row.PayModeID = event.value;
                      that.zfjhList[params.index].PayModeID = event.value;
                      that.myPaymentMode[params.index] = event.label;
                    }
                  }
                },
                that.volumeTypes.map(function(type) {
                  return h(
                    "Option",
                    {
                      props: {
                        //  value: type.PayModeID
                        value: type.ID
                      }
                    },
                    type.Name
                  );
                })
              )
            ]);
          }
        },
        {
          title: "金额",
          align: "center",
          key: "Amount",
          render: (h, params) => {
            let that = this;
            return h("div", [
              h("InputNumber", {
                props: {
                  readonly: !that.zfjhList[params.index].xianshi,
                  //disabled: !that.zfjhList[params.index].xianshi,
                  placeholder: "请填写金额",
                  value: that.zfjhList[params.index].Amount, //that.zfjhList[params.index].Amount
                  max: 999999999999,
                  min: 0,
                  step: 1
                },
                on: {
                  "on-change": e => {
                    params.row.Amount = e;
                    that.zfjhList[params.index] = params.row;
                  }
                }
              })
            ]);
          }
        },
        {
          title: "退赠送金",
          align: "center",
          key: "HandselAmount",
          render: (h, params) => {
            let that = this;
            return h("div", [
              h("InputNumber", {
                props: {
                  readonly:that.jinyong,
                  //disabled: that.jinyong,
                  placeholder: "请填写退赠送金金额",
                  value: that.zfjhList[params.index].HandselAmount,
                  max: 999999999999,
                  min: 0,
                  step: 1
                },
                on: {
                  "on-change": e => {
                    params.row.HandselAmount = e;
                    that.zfjhList[params.index] = params.row;
                  }
                }
              })
            ]);
          }
        },
        // {
        //   title:"备注",
        //   align: "center",
        //   key: "ArrRmk"
        // },
        {
          title: "操作",
          align: "center",
          render: (h, params) => {
            return h("div", [
              h("i", {
                class: {
                  "ivu-icon": true,
                  "ivu-icon-aaa-tianjia": true,
                  "icon-btn": true
                },
                on: {
                  click: () => {
                    this.addCharge(params.index);
                  }
                },
                style: {
                  marginRight: "20px"
                }
              }),
              h("i", {
                class: {
                  "ivu-icon": true,
                  "ivu-icon-aaa-icon-shanchu": true,
                  "icon-btn": true
                },
                on: {
                  click: () => {
                    this.delCharge(params.index);
                  }
                },
                style: {
                  marginRight: "5px"
                }
              })
            ]);
          }
        },
        {
          title: "",
          align: "center",
          key: "IsVirtualMoney",
          width: 1,
          render: (h, params) => {
            let that = this;
            return h(
              "div",
              {
                props: {
                  style: {
                    width: 0
                  }
                }
              }[
                h("Input", {
                  props: {
                    //   disabled: that.xianshi,
                    //   placeholder: "请填写退费",
                    value: that.zfjhList[params.index].IsVirtualMoney
                  },
                  on: {
                    "on-change": e => {
                      // params.row.IsVirtualMoney = e;
                      // that.zfjhList[params.index] = params.row;
                    }
                  }
                })
              ]
            );
          }
        },
        {
          title: " ",
          align: "center",
          width: 10
        }
      ],
      zfjhList: [],
      myPaymentMode: [],
      volumeTypes: [],
      maxGiveBack: 0,
      giveBackNum: 0,
      printColumns: [
        {
          title: "项目/物资名称",
          key: "xmmc",
          align: "center",
          width: 180
        },
        {
          title: "数量",
          key: "num",
          align: "center",
          width: 180
        },
        {
          title: "金额",
          key: "money",
          align: "center",
          width: 180
        },
        {
          title: " "
        }
      ],
      printData: []
    };
  },
  computed: {
    getNowDay() {
      return moment(new Date()).format("YYYY-MM-DD");
    },
    ...mapState({
      userMes: state => state.app.userMes,
      authorList: state => state.app.authorList,
      tableRows: state => state.app.tableRows
    }),
    setTableHeight() {
      let that = this;
      return that.tableHeight;
    }
  }, 
  watch: {   
     $route(to, from){    
        //监听路由是否变化 
      if (to.query.CustPhone && to.query.ConsumptionInfoId) {  
         // 判断条件1  判断传递值的变化 console.log(this.$route.query.CustomerID); 
        let regex = /^1\d{10}$/;
        if (!regex.test(to.query.CustPhone)) {
          this.$Message.error("电话号码格式有误");
          return false;
        }
       this.QueryReturnMonry(to.query.ConsumptionInfoId,to.query.CustPhone);
        this.$router.push({ 
        path:"/charge/tf",
        query:{
          t:Date.now()
        }
      });
      }  
    },
    immediate:true
  }, 
  methods: { 
    //从收费哪里点击直接跳转到退费信息框 2019年12月7日10:29:49 ly
    QueryReturnMonry(InfoID,Phone){ 
        this.qzdmxList = [];
        this.detailMessageData = [];
        this.lookupPayData = [];
         let that= this;
         that.ConsumptionInfoID = InfoID;
          let data = {
            CustomerPhone: Phone,
            EmployeeID: that.userMes.EmployeeID
          };  
          api.getCustomerByPhone(data).then(response => {
            //that.uploading = false;
          
            let a = {
              Name: "",
              Age: "",
              Phone: data.CustomerPhone,
              CustomerSex: ""
            };
            if (response.error_code === "Success") {
              that.formValidate.CustomerID = response.data.ID;
              a = response.data;
              that.resetForm();
              that.modalTitle = "新增";
              that.modalMode = "add";
              that.setData(a);
              that.getRefundList(response.data.ID);
            } else {
               that.$Message.info({
                content: response.error_message,
                duration: 10
            });
            }
          });
          that.$refs.searchTelForm.resetFields();
    },
    //修改时间
    BtnChangeDate() { 
      console.log(echartsCommon.changeTime(this.dateTime));
    },
    showAddPoup() {
      let that = this;
      that.$refs.searchTelForm.resetFields();
      that.poupSearchTel = true;
      that.$nextTick(() => {
        that.$refs.searchTel.focus();
      });
    },
    checkAuthor() {
      let that = this;
      let name = that.$route.name;
      let list = that.authorList[name];
      for (let i of list) {
        if (i.Name === "增加") {
          that.showAdd = i.IsVisible;
        }
        if (i.Name === "浏览") {
          that.showEdit = i.IsVisible;
        }
      }
    },
    chooseRow(row) {
      // 选中某一行修改
      let that = this;
      that.currentID = row.ID;
      that.currentPhone = row.CustomerPhone;
      that.dateTime = row.Date;
    },
    setData(res) { 
      let that = this;
      that.formValidate.CustomerName = res.Name;
      that.formValidate.CustomerAge = res.Age;
      that.formValidate.CustomerPhone = res.Phone.substr(0,3)+"****"+res.Phone.substr(7,11);
      that.formValidate.CustomerSex = res.Sex;
      that.formValidate.TMKEmployeeName = res.TMKEmployeeName;
      that.formValidate.SceneEmployeeName = res.SceneEmployeeName;
      that.formValidate.ArrearsBalance = Number(res.ArrearsBalance);
      that.formValidate.HandselBalance = Number(res.HandselBalance);
      that.formValidate.CashBalance = Number(res.CashBalance);
      that.formValidate.IntegrationBalance = Number(res.IntegrationBalance);
    },
    searchForm() {
      // 搜索表格
      let that = this;
      //判断两个时间段大小
      echartsCommon.message = that.$Message;
      if (
        echartsCommon.ContrastTime(
          that.formItem.startDate,
          that.formItem.endDate
        )
      ) {
        that.tablePage.page = 1;
        that.getList();
      }
      //------------------
    },
    resetSearch() {
      let that = this;
      that.tablePage.page = 1;
      that.$refs.searchForm.resetFields();
      that.getList();
    },
    resetForm() {
      let that = this;
      that.$refs.formValidate1.resetFields();
      that.formValidate.Remark = "";
      that.detailMessageData = [];
      that.qzdmxList = [];
      that.zfjhList = [];
      that.modal1 = false;
      that.btnjinyong = false;
      that.giveBackNum = 0;
    },
    checkBillStatus() {
      // 显示详情
      let that = this;
      if (!that.currentID) {
        that.$Message.error("请选择一条项目");
        return false;
      }
      that.modalTitle = "浏览";
      that.modalMode = "lookUp";
      that.resetForm();
      that.$store.commit("changeLoadingPage");
      // that.formValidate.CustomerID = response.data.ID
      api.RefundsPrepayments(that.currentID).then(response => {
        that.$store.commit("changeLoadingPage");
        if (response.error_code !== "Success") {
          that.$Message.error(response.error_message);
          return false;
        }
        let res = response.data;
        that.setData(res);
        let b = {
          itemName: res.ItemName,
          itemStandard: res.ItemStandard,
          itemUnit: res.ItemUnit,
          quantity: res.Quantity,
          BuyAmount:res.BuyAmount 
        };
        that.refundsTotal = res.Amount;
        that.lookUpItemsData = [];
        that.lookUpItemsData.push(b);
        that.lookupPayData = [];
        that.printData = [];
        that.printData.push(b);
        that.lookupPayData = res.PayDetails;
        that.printPayMode = res.PayDetails;
        that.modal1 = true;
      });

      // that.modal1 = true
    },
    addForm() {
      let that = this;
      that.btnjinyong = true;
      if (that.detailMessageData.length <= 0) {
        that.$Message.error("请选择退费项目");
        that.btnjinyong = false;
        return false;
      }
      let isBreak = false;
      let sum = 0; 
      for (let i in that.zfjhList) { 
        let dom = that.zfjhList[i];
        if (!dom.PayModeID || (dom.Amount+dom.HandselAmount) <= 0) {
          that.$Message.error("退款方式空或者退费金额为0");
          that.btnjinyong = false;
          isBreak = true;
          return false;
        }
        sum += (dom.Amount+dom.HandselAmount);
      }
      sum = that.formatData(sum);
      if (sum > that.detailMessageData[0].sum) {
        that.$Message.error("退款金额大于项目金额，请重新检查后提交");

        that.btnjinyong = false;
        isBreak = true;
      } 

      if (isBreak) {
        return false;
      }
      let data = {
        CustomerID: that.formValidate.CustomerID,
        Remark: that.formValidate.Remark,
        HandleBy: that.userMes.EmployeeID,
        Quantity: that.giveBackNum,
        price: that.detailMessageData[0].price,
        Amount: that.refundsTotal,
        date: echartsCommon.changeTimeHms(that.tfDate),
        payDetails: [],
        CertainProjectID: that.detailMessageData[0].id
      };
      that.printData = [];
      that.printPayMode = [];
      let b = {
        itemName: that.detailMessageData[0].xmmc,
        quantity: that.giveBackNum,
        price: that.refundsTotal
      };
      that.printData.push(b);
      for (let i in that.zfjhList) {
        let a = {
          PayModeID: that.zfjhList[i].PayModeID,
          Amount: that.zfjhList[i].Amount,
          HandselAmount: that.zfjhList[i].HandselAmount,
          IsVirtualMoney: that.zfjhList[i].IsVirtualMoney
        };
        data.payDetails.push(a);
        let c = {
          PayModeName: that.myPaymentMode[i],
          Amount: that.zfjhList[i].Amount
          //   HandselAmount: that.zfjhList[i].HandselAmount
        };
        that.printPayMode.push(c);
      }
      that.uploading = true; 
      api.addTfRefundsPrepayments(data).then(response => {
        that.uploading = false;
        if (response.error_code === "Success") {
          that.resetSearch();
          that.printPage();
          setTimeout(() => {
            that.btnjinyong = false;
          }, 3000);
        } else {
          //that.$Message.error(response.error_message);
          this.$Message['warning']({
                    background: true,
                    content: response.error_message,
                    duration:5
                }); 
          that.btnjinyong = false;
        }
      });
      //   console.log(data);
    },
    delCharge(index) {
      let that = this;
      if (that.zfjhList.length > 1) {
        that.zfjhList.splice(index, 1);
      }
    },
    addCharge(index) {
      // 添加收款方式
      let that = this;
      let a = {
        Amount: 0,
        PayModeID: "0001",
        HandselAmount: 0
      };
      let sum = 0;
      // todo
      // let chargeSum = that.formatData(that.detailMessageData[0].sum / that.detailMessageData[0].giveBackNum * that.giveBackNum)
      // that.refundsTotal = chargeSum

      for (let i in that.zfjhList) {
        sum += that.zfjhList[i].Amount;
      }
      a.Amount = that.formatData(that.refundsTotal - sum);
      if (a.Amount < 0) {
        a.Amount = 0;
      }
      that.zfjhList.push(a);
    },
    printPage() {
      let that = this;
      that.modal1 = false;
      setTimeout(() => {
        window.print();
      }, 500);
    },
    showRemark(row) {
      // 显示备注
      let that = this;
      that.$Modal.info({
        title: "备注详情",
        content: row.ArrearsAmount
      });
    },
    searchCustomerTel() {
      let that = this;
      that.ConsumptionInfoID = null;
      that.$refs.searchTelForm.validate(validate => {
        if (validate) {
          // 搜索...
          let data = {
            CustomerPhone: that.searchTel.tel,
            EmployeeID: that.userMes.EmployeeID
          };
          that.uploading = true;
          api.getCustomerByPhone(data).then(response => {
            that.uploading = false;
            let a = {
              Name: "",
              Age: "",
              Phone: data.CustomerPhone,
              CustomerSex: ""
            };
            if (response.error_code === "Success") {
              that.formValidate.CustomerID = response.data.ID;
              a = response.data;
              that.resetForm();
              that.modalTitle = "新增";
              that.modalMode = "add";
              that.setData(a);
              that.getRefundList(response.data.ID);
            } else {
              that.$Message.error(response.error_message);
            }
          });
          that.$refs.searchTelForm.resetFields();
        } else {
          that.$Message.error("请输入用户的联系电话");
        }
      });
    },
    needU(params) {
      //将用户的项目可执行次数清0
      let that = this;
      let data = {
        CertainProjectId: params.row.id
      };
      api.ClearItemNum(data).then(response => {
        if (response.error_code === "Success") {
          that.detailMessageData.splice(params.index, 1);
          for (var i = 0; i < that.qzdmxList.length; i++) {
            if (that.qzdmxList[i].ID === params.row.id) {
              that.qzdmxList.splice(i, 1);
              break;
            }
          }
        } else {
          that.$Message.error(response.error_message);
        }
      });
    },
    getRefundList(id) {
      // 获取客户的退费列表 
      let that = this;
      //清除数组重新赋值
        that.qzdmxList = [];
        that.detailMessageData = [];
        that.lookupPayData = [];
      let data = {
        CustomerID: id,
        ConsumptionInfoId:that.ConsumptionInfoID
      };
      api.getRefundableCertainDocListByCustomerID(data).then(response => {
        if (response.error_code === "Success") {
          that.uploading = false;
          that.modal1 = true;
          that.poupSearchTel = false;
          for (let i of response.data.list) {
            let data = i;
            data.selectType = true;
            that.qzdmxList.push(data);
          }
          // that.qzdmxList = response.data.list
        } else {
          that.$Message.error(response.error_message);
        }
      });
    },
    searchReset() {
      let that = this;
      that.$refs.searchTelForm.resetFields();
      that.poupSearchTel = false;
    },
    initTableHeight() {
      let that = this;
      that.tableHeight = document.getElementById("tableBox").offsetHeight;
      window.onresize = function() {
        that.tableHeight = document.getElementById("tableBox").offsetHeight;
      };
    },
    setPage() {
      let that = this;
      let teblePage = that.tablePage;
      teblePage.startNum = teblePage.pageNum * (teblePage.page - 1) + 1;
      let endPage = teblePage.page * teblePage.pageNum;
      teblePage.endNum =
        endPage > teblePage.allNum ? teblePage.allNum : endPage;
    },
    prevPage() {
      let that = this;
      if (that.tablePage.page <= 1) {
        that.$Message.error("已经是第一页");
        return false;
      }
      that.tablePage.page--;
      that.getList();
    },
    nextPage() {
      let that = this;
      if (that.tablePage.page >= that.tablePage.maxPageNum) {
        that.$Message.error("已经是最后一页");
        return false;
      }
      that.tablePage.page++;
      that.getList();
    },
    changePage() {
      let that = this;
      that.getList();
    },
    getList() {
      let that = this;
      let data = {
        EmployeeID: that.userMes.EmployeeID,
        StartDate: that.formItem.startDate,
        EndDate: that.formItem.endDate,
        CustomerName: that.formItem.userName,
        CustomerPhone: that.formItem.userTel,
        StoreID: that.formItem.StoreID,
        page: that.tablePage.page,
        size: that.tablePage.pageNum
      };
      // 转换日期
      if (data.StartDate) {
        data.StartDate = moment(data.StartDate).format("YYYY-MM-DD");
      }
      if (data.EndDate) {
        data.EndDate = moment(data.EndDate).format("YYYY-MM-DD");
      }
      if (data.CustomerPhone) {
        let regex = /^1\d{10}$/;
        if (!regex.test(data.CustomerPhone)) {
          that.$Message.error("电话号码格式有误");
          return false;
        }
      }
      that.tableLoading = true;
      setTimeout(() => {
        if (that.formItem.StoreID == null) {
          that.$Message.error("请选择门店");
        }
      }, 500);

      api.refundsGetList(data).then(response => {
        if (response.error_code === "Success") {
          let res = response.data;
          for (let i of res.list) {
            let phone = i.CustomerPhone;
            i.CustomerPhone =
              phone.substring(0, 3) + "****" + phone.substr(phone.length - 4);
          }
          that.list = res.list;
          that.tableLoading = false;
          that.$set(that.tablePage, "page", res.page);
          that.$set(that.tablePage, "allNum", res.total);
          that.tablePage.maxPageNum = res.totalPage;
          that.setPage();
        } else {
          that.$Message.error(response.error_message);
        }
      });
    },
    exportTable() {
      let that = this;
      that.$refs.mainTable.exportCsv({
        filename: `${new Date().getTime()}${document.title}`
      });
    },
    showDetailMessage(row) {
      let that = this;
      if (that.modalMode == "lookUp") {
        // 浏览模式直接加载详情
        return false;
      }
      that.tfDate = row.ChangeDate;  //退费时间
      // 显示项目表格详细信息
      let a = {
        id: row.ID,
        xmmc: row.Name,
        spec: row.Standard,
        unit: row.Unit,
        price: row.UnitPrice,
        Sconto: row.Sconto,
        num: row.Quantity,
        sum: row.Total,
        giveBackNum: row.RefundableQuantity
      };
      that.maxGiveBack = row.RefundableQuantity;
      // that.giveBackNum=1;
      that.giveBackNum = that.maxGiveBack; //退费数量联动
      // 退费总额
      // that.refundsTotal = a.sum
      that.detailMessageData = [];
      that.detailMessageData.push(a);
      that.submitGiveBack(); //调用确定按钮
    },
    submitGiveBack() {
      // 确认退费 数据传给后台计算费用
      let that = this;
      if (!that.detailMessageData[0].id) {
        that.$Message.error("请选择一条项目");
        return false;
      }
      // 数据返回后
      let data = {
        // 确诊单明细ID
        CertainProjectID: that.detailMessageData[0].id,
        Quantity: that.giveBackNum
      };
      that.uploading = true;
      api.compareRefundQuantity(data).then(response => {
        // if (!response.data.IsEdit) {
        //   that.jinyong = true;
        // } else {
        //   that.jinyong = false;
        // }

        that.uploading = false;
        if (response.error_code === "Success") {
          let list = response.data.list;
          that.zfjhList = [];
          that.myPaymentMode = [];
          for (let i in list) {
            // if (!list[i].IsEdit) {
            //   continue;
            // }
            let a = {
              detailID: that.detailMessageData[0].id,
              PayModeID: list[i].PayModeID,
              Amount: list[i].Amount,
              HandselAmount: list[i].HandselAmount,
              IsVirtualMoney: list[i].IsVirtualMoney,
              xianshi: list[i].IsEdit
            };
            that.myPaymentMode.push(list[i].PayModeName);
            that.zfjhList.push(a);
          }
          that.refundsTotal = response.data.Total;
        } else {
          that.$Message.error(response.error_message);
        }
      });
    },
    getZffsList() {
      // 获取支付方式
      let that = this;
      let data = {
        EmployeeID: that.userMes.EmployeeID
      };
      //注释 2019年10月23日14:26:07
      // api.getCashPayModes(data).then(response => {
      //   if (response.error_code === "Success") {
      //     let res = response.data;
      //     that.volumeTypes = res.list;
      //     // console.log(res.list);
      //   } else {
      //     that.$Message.error(response.error_message);
      //   }
      // });
      api.getReturnMoneyPayMent(data).then(response => {
        if (response.error_code === "Success") {
          let res = response.data;
          that.volumeTypes = res.list;
        } else {
          that.$Message.error(response.error_message);
        }
      });
    },
    formatData(num) {
      // 四舍五入数据
      let that = this;
      let n = parseInt(num * 100 + 0.5) / 100;
      return n;
    },
    // 获取有效门店
    getStore() {
      let that = this;
      let data = {
        EmployeeID: that.userMes.EmployeeID
      };
      api.getValidStoresNew(data).then(response => {
        if (response.error_code === "Success") {
          that.storeList = response.data.list;
          let a = {
            Name: "全部",
            ID: "0"
          };
          that.storeList.unshift(a);
          // that.formItem.store = that.userMes.StoreName;
          // that.formItem.StoreID = that.userMes.StoreID;
          that.formItem.store = that.storeList[0].Name;
          that.formItem.StoreID = that.storeList[0].ID;
          that.getList();
        } else {
          that.$Message.error(response.error_message);
        }
      });
    },
    choose(name, id) {
      this.formItem.store = name;
      this.formItem.StoreID = id;
    }
  },
  mounted() {
    let that = this;
    that.$nextTick(() => {
      that.checkAuthor();
      that.initTableHeight();
      that.getZffsList();
      that.getStore();
      let pageName = that.$route.name;
      let list = that.authorList[pageName];
    });
  },
  filters: {
    formatMoney(val) {
      if (!val) {
        return 0.0;
      }
      return Number(val).toFixed(2);
    }
  }
};
</script>